// Complete structure information extracted from libart.so library for Android 12 on x86_32 architecture
{
    "version": "android12",
    "architecture": "x86_32_structures",
    "classes": {
        "InstructionDescriptor": {
            "size": "0x8",
            "members": {
                "verify_flags": 0,
                "format": 4,
                "index_type": 5,
                "flags": 6,
                "size_in_code_units": 7
            }
        },
        "ArrayDataPayload": {
            "size": "0x8",
            "members": {
                "ident": 0,
                "element_width": 2,
                "element_count": 4,
                "data": 8
            }
        },
        "LockWord": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "Monitor": {
            "size": "0x58",
            "members": {
                "monitor_lock_": 0,
                "num_waiters_": 32,
                "owner_": 36,
                "lock_count_": 40,
                "obj_": 44,
                "wait_set_": 48,
                "wake_set_": 52,
                "hash_code_": 56,
                "lock_owner_": 60,
                "lock_owner_method_": 64,
                "lock_owner_dex_pc_": 68,
                "lock_owner_sum_": 72,
                "lock_owner_request_": 76,
                "monitor_id_": 80
            }
        },
        "Thread": {
            "size": "0xdb0",
            "members": {
                "tls32_": 0,
                "tls64_": 88,
                "tlsPtr_": 152,
                "interpreter_cache_": 1392,
                "wait_mutex_": 3440,
                "wait_cond_": 3444,
                "wait_monitor_": 3448,
                "debug_disallow_read_barrier_": 3452,
                "poison_object_cookie_": 3456,
                "checkpoint_overflow_": 3460,
                "custom_tls_": 3472,
                "is_runtime_thread_": 3484,
                "core_platform_api_cookie_": 3488
            }
        },
        "tls_32bit_sized_values": {
            "size": "0x58",
            "members": {
                "state_and_flags": 0,
                "suspend_count": 4,
                "thin_lock_thread_id": 8,
                "tid": 12,
                "daemon": 16,
                "throwing_OutOfMemoryError": 20,
                "no_thread_suspension": 24,
                "thread_exit_check_count": 28,
                "handling_signal_": 32,
                "is_transitioning_to_runnable": 36,
                "ready_for_debug_invoke": 40,
                "debug_method_entry_": 44,
                "is_gc_marking": 48,
                "interrupted": 52,
                "park_state_": 56,
                "weak_ref_access_enabled": 60,
                "disable_thread_flip_count": 64,
                "user_code_suspend_count": 68,
                "force_interpreter_count": 72,
                "use_mterp": 76,
                "make_visibly_initialized_counter": 80,
                "define_class_counter": 84
            }
        },
        "tls_64bit_sized_values": {
            "size": "0x40",
            "members": {
                "trace_clock_base": 0,
                "stats": 8
            }
        },
        "tls_ptr_sized_values": {
            "size": "0x4d4",
            "members": {
                "card_table": 0,
                "exception": 4,
                "stack_end": 8,
                "managed_stack": 12,
                "suspend_trigger": 24,
                "jni_env": 28,
                "tmp_jni_env": 32,
                "self": 36,
                "opeer": 40,
                "jpeer": 44,
                "stack_begin": 48,
                "stack_size": 52,
                "deps_or_stack_trace_sample": 56,
                "wait_next": 60,
                "monitor_enter_object": 64,
                "top_handle_scope": 68,
                "class_loader_override": 72,
                "long_jump_context": 76,
                "instrumentation_stack": 80,
                "stacked_shadow_frame_record": 84,
                "deoptimization_context_stack": 88,
                "frame_id_to_shadow_frame": 92,
                "name": 96,
                "pthread_self": 100,
                "last_no_thread_suspension_cause": 104,
                "checkpoint_function": 108,
                "active_suspend_barriers": 112,
                "thread_local_start": 124,
                "thread_local_pos": 128,
                "thread_local_end": 132,
                "thread_local_limit": 136,
                "thread_local_objects": 140,
                "jni_entrypoints": 144,
                "quick_entrypoints": 152,
                "mterp_current_ibase": 828,
                "rosalloc_runs": 832,
                "thread_local_alloc_stack_top": 896,
                "thread_local_alloc_stack_end": 900,
                "held_mutexes": 904,
                "flip_function": 1216,
                "method_verifier": 1220,
                "thread_local_mark_stack": 1224,
                "async_exception": 1228,
                "top_reflective_handle_scope": 1232
            }
        },
        "ConditionVariable": {
            "size": "0x10",
            "members": {
                "name_": 0,
                "guard_": 4,
                "sequence_": 8,
                "num_waiters_": 12
            }
        },
        "RuntimeStats": {
            "size": "0x38",
            "members": {
                "allocated_objects": 0,
                "allocated_bytes": 8,
                "freed_objects": 16,
                "freed_bytes": 24,
                "gc_for_alloc_count": 32,
                "class_init_count": 40,
                "class_init_time_ns": 48
            }
        },
        "Throwable": {
            "size": "0x1c",
            "members": {
                "backtrace_": 8,
                "cause_": 12,
                "detail_message_": 16,
                "stack_trace_": 20,
                "suppressed_exceptions_": 24
            }
        },
        "Object": {
            "size": "0x8",
            "members": {
                "klass_": 0,
                "monitor_": 4
            }
        },
        "HeapReference<art::mirror::Class>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Class": {
            "size": "0x78",
            "members": {
                "class_loader_": 8,
                "component_type_": 12,
                "dex_cache_": 16,
                "ext_data_": 20,
                "iftable_": 24,
                "name_": 28,
                "super_class_": 32,
                "vtable_": 36,
                "ifields_": 40,
                "methods_": 48,
                "sfields_": 56,
                "access_flags_": 64,
                "class_flags_": 68,
                "class_size_": 72,
                "clinit_thread_id_": 76,
                "dex_class_def_idx_": 80,
                "dex_type_idx_": 84,
                "num_reference_instance_fields_": 88,
                "num_reference_static_fields_": 92,
                "object_size_": 96,
                "object_size_alloc_fast_path_": 100,
                "primitive_type_": 104,
                "reference_instance_offsets_": 108,
                "status_": 112,
                "copied_methods_offset_": 116,
                "virtual_methods_offset_": 118
            }
        },
        "HeapReference<art::mirror::ClassLoader>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ClassLoader": {
            "size": "0x28",
            "members": {
                "packages_": 8,
                "parent_": 12,
                "proxyCache_": 16,
                "padding_": 20,
                "allocator_": 24,
                "class_table_": 32
            }
        },
        "HeapReference<art::mirror::Object>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HeapReference<art::mirror::DexCache>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "DexCache": {
            "size": "0x6c",
            "members": {
                "class_loader_": 8,
                "location_": 12,
                "dex_file_": 16,
                "preresolved_strings_": 24,
                "resolved_call_sites_": 32,
                "resolved_fields_": 40,
                "resolved_method_types_": 48,
                "resolved_methods_": 56,
                "resolved_types_": 64,
                "strings_": 72,
                "num_preresolved_strings_": 80,
                "num_resolved_call_sites_": 84,
                "num_resolved_fields_": 88,
                "num_resolved_method_types_": 92,
                "num_resolved_methods_": 96,
                "num_resolved_types_": 100,
                "num_strings_": 104
            }
        },
        "ConversionPair<unsigned long long>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "ConversionPair<unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "HeapReference<art::mirror::String>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "String": {
            "size": "0x10",
            "members": {
                "count_": 8,
                "hash_code_": 12,
                "UnNamed": 16
            }
        },
        "ObjectReference<false, art::mirror::Object>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "MethodType": {
            "size": "0x1c",
            "members": {
                "form_": 8,
                "method_descriptor_": 12,
                "p_types_": 16,
                "r_type_": 20,
                "wrap_alt_": 24
            }
        },
        "HeapReference<art::mirror::ObjectArray<art::mirror::Class> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Array": {
            "size": "0xc",
            "members": {
                "length_": 8,
                "first_element_": 12
            }
        },
        "CallSite": {
            "size": "0xc",
            "members": {
                "target_": 8
            }
        },
        "HeapReference<art::mirror::MethodHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "MethodHandle": {
            "size": "0x20",
            "members": {
                "cached_spread_invoker_": 8,
                "nominal_type_": 12,
                "method_type_": 16,
                "handle_kind_": 20,
                "art_field_or_method_": 24
            }
        },
        "HeapReference<art::mirror::MethodType>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "DexCachePair<art::mirror::String>": {
            "size": "0x8",
            "members": {
                "object": 0,
                "index": 4
            }
        },
        "DexCachePair<art::mirror::Class>": {
            "size": "0x8",
            "members": {
                "object": 0,
                "index": 4
            }
        },
        "DexCachePair<art::mirror::MethodType>": {
            "size": "0x8",
            "members": {
                "object": 0,
                "index": 4
            }
        },
        "HeapReference<art::mirror::ClassExt>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ClassExt": {
            "size": "0x34",
            "members": {
                "instance_jfield_ids_": 8,
                "jmethod_ids_": 12,
                "obsolete_class_": 16,
                "obsolete_dex_caches_": 20,
                "obsolete_methods_": 24,
                "original_dex_file_": 28,
                "static_jfield_ids_": 32,
                "verify_error_": 36,
                "pre_redefine_dex_file_ptr_": 40,
                "pre_redefine_class_def_index_": 48
            }
        },
        "HeapReference<art::mirror::PointerArray>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HeapReference<art::mirror::ObjectArray<art::mirror::DexCache> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HeapReference<art::mirror::IfTable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HeapReference<art::mirror::Throwable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ClassLoader>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Offset": {
            "size": "0x4",
            "members": {
                "val_": 0
            }
        },
        "ObjPtr<art::mirror::String>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::String>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::Object>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<unsigned short> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<unsigned short> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "DexIndex<unsigned int>": {
            "size": "0x4",
            "members": {
                "index_": 0
            }
        },
        "DexIndex<unsigned short>": {
            "size": "0x2",
            "members": {
                "index_": 0
            }
        },
        "ProtoId": {
            "size": "0xc",
            "members": {
                "shorty_idx_": 0,
                "return_type_idx_": 4,
                "pad_": 6,
                "parameters_off_": 8
            }
        },
        "TypeList": {
            "size": "0x8",
            "members": {
                "size_": 0,
                "list_": 4
            }
        },
        "TypeItem": {
            "size": "0x2",
            "members": {
                "type_idx_": 0
            }
        },
        "ClassDef": {
            "size": "0x20",
            "members": {
                "class_idx_": 0,
                "pad1_": 2,
                "access_flags_": 4,
                "superclass_idx_": 8,
                "pad2_": 10,
                "interfaces_off_": 12,
                "source_file_idx_": 16,
                "annotations_off_": 20,
                "class_data_off_": 24,
                "static_values_off_": 28
            }
        },
        "TryItem": {
            "size": "0x8",
            "members": {
                "start_addr_": 0,
                "insn_count_": 4,
                "handler_off_": 6
            }
        },
        "MethodId": {
            "size": "0x8",
            "members": {
                "class_idx_": 0,
                "proto_idx_": 2,
                "name_idx_": 4
            }
        },
        "TypeId": {
            "size": "0x4",
            "members": {
                "descriptor_idx_": 0
            }
        },
        "ObjPtr<art::mirror::Class>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ArtMethod": {
            "size": "0x18",
            "members": {
                "declaring_class_": 0,
                "access_flags_": 4,
                "dex_method_index_": 8,
                "method_index_": 12,
                "UnNamed": 14,
                "ptr_sized_fields_": 16
            }
        },
        "PtrSizedFields": {
            "size": "0x8",
            "members": {
                "data_": 0,
                "entry_point_from_quick_compiled_code_": 4
            }
        },
        "GcRoot<art::mirror::Class>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "ScopedObjectAccessAlreadyRunnable": {
            "size": "0xc",
            "members": {
                "self_": 0,
                "env_": 4,
                "vm_": 8
            }
        },
        "JNIEnvExt": {
            "size": "0x9c",
            "members": {
                "self_": 4,
                "vm_": 8,
                "local_ref_cookie_": 12,
                "locals_": 16,
                "stacked_local_ref_cookies_": 84,
                "monitors_": 96,
                "unchecked_functions_": 124,
                "locked_objects_": 128,
                "critical_start_us_": 140,
                "critical_": 148,
                "check_jni_": 152,
                "runtime_deleted_": 153
            }
        },
        "IRTSegmentState": {
            "size": "0x4",
            "members": {
                "top_index": 0
            }
        },
        "IndirectReferenceTable": {
            "size": "0x44",
            "members": {
                "segment_state_": 0,
                "table_mem_map_": 4,
                "table_": 44,
                "kind_": 48,
                "max_entries_": 52,
                "current_num_holes_": 56,
                "last_known_previous_state_": 60,
                "resizable_": 64
            }
        },
        "MemMap": {
            "size": "0x28",
            "members": {
                "name_": 0,
                "begin_": 12,
                "size_": 16,
                "base_begin_": 20,
                "base_size_": 24,
                "prot_": 28,
                "reuse_": 32,
                "already_unmapped_": 33,
                "redzone_size_": 36
            }
        },
        "IrtEntry": {
            "size": "0x10",
            "members": {
                "serial_": 0,
                "references_": 4
            }
        },
        "GcRoot<art::mirror::Object>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "IrtIterator": {
            "size": "0xc",
            "members": {
                "table_": 0,
                "i_": 4,
                "capacity_": 8
            }
        },
        "ReferenceTable": {
            "size": "0x1c",
            "members": {
                "name_": 0,
                "entries_": 12,
                "max_size_": 24
            }
        },
        "ImtConflictTable": {
            "size": "0x0",
            "members": {
                "UnNamed": 0
            }
        },
        "Handle<art::mirror::Class>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Signature": {
            "size": "0x8",
            "members": {
                "dex_file_": 0,
                "proto_id_": 4
            }
        },
        "ObjPtr<art::mirror::DexCache>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "CodeItemInstructionAccessor": {
            "size": "0x8",
            "members": {
                "insns_size_in_code_units_": 0,
                "insns_": 4
            }
        },
        "DexInstructionIteratorBase": {
            "size": "0x8",
            "members": {
                "data_": 0
            }
        },
        "DexInstructionPcPair": {
            "size": "0x8",
            "members": {
                "instructions_": 0,
                "dex_pc_": 4
            }
        },
        "IterationRange<art::DexInstructionIterator>": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "CodeItemDataAccessor": {
            "size": "0x10",
            "members": {
                "registers_size_": 8,
                "ins_size_": 10,
                "outs_size_": 12,
                "tries_size_": 14
            }
        },
        "IterationRange<const art::dex::TryItem *>": {
            "size": "0x8",
            "members": {
                "first_": 0,
                "last_": 4
            }
        },
        "CodeItemDebugInfoAccessor": {
            "size": "0x18",
            "members": {
                "dex_file_": 16,
                "debug_info_offset_": 20
            }
        },
        "ArtField": {
            "size": "0x10",
            "members": {
                "declaring_class_": 0,
                "access_flags_": 4,
                "field_dex_idx_": 8,
                "offset_": 12
            }
        },
        "ObjPtr<art::mirror::Array>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "AtomicStack<art::mirror::Object>": {
            "size": "0x4c",
            "members": {
                "name_": 0,
                "mem_map_": 12,
                "back_index_": 52,
                "front_index_": 56,
                "begin_": 60,
                "growth_limit_": 64,
                "capacity_": 68,
                "debug_is_sorted_": 72
            }
        },
        "SpaceBitmap<8>": {
            "size": "0x44",
            "members": {
                "mem_map_": 0,
                "bitmap_begin_": 40,
                "bitmap_size_": 44,
                "heap_begin_": 48,
                "heap_limit_": 52,
                "name_": 56
            }
        },
        "ReadBarrierTable": {
            "size": "0x28",
            "members": {
                "mem_map_": 0
            }
        },
        "CardTable": {
            "size": "0x30",
            "members": {
                "mem_map_": 0,
                "biased_begin_": 40,
                "offset_": 44
            }
        },
        "SpaceBitmap<4096>": {
            "size": "0x44",
            "members": {
                "mem_map_": 0,
                "bitmap_begin_": 40,
                "bitmap_size_": 44,
                "heap_begin_": 48,
                "heap_limit_": 52,
                "name_": 56
            }
        },
        "ObjectBytePair": {
            "size": "0x10",
            "members": {
                "objects": 0,
                "bytes": 8
            }
        },
        "Iteration": {
            "size": "0x64",
            "members": {
                "gc_cause_": 0,
                "clear_soft_references_": 4,
                "duration_ns_": 8,
                "bytes_scanned_": 16,
                "timings_": 24,
                "freed_": 48,
                "freed_los_": 64,
                "freed_bytes_revoke_": 80,
                "pause_times_": 88
            }
        },
        "RegionSpace": {
            "size": "0x1e0",
            "members": {
                "region_lock_": 280,
                "use_generational_cc_": 312,
                "time_": 316,
                "num_regions_": 320,
                "madvise_time_": 324,
                "num_non_free_regions_": 332,
                "num_evac_regions_": 336,
                "max_peak_num_non_free_regions_": 340,
                "regions_": 344,
                "partial_tlabs_": 348,
                "non_free_region_index_limit_": 360,
                "current_region_": 364,
                "evac_region_": 368,
                "full_region_": 372,
                "cyclic_alloc_region_index_": 408,
                "mark_bitmap_": 412
            }
        },
        "Region": {
            "size": "0x24",
            "members": {
                "idx_": 0,
                "live_bytes_": 4,
                "begin_": 8,
                "thread_": 12,
                "top_": 16,
                "end_": 20,
                "objects_allocated_": 24,
                "alloc_time_": 28,
                "is_newly_allocated_": 32,
                "is_a_tlab_": 33,
                "state_": 34,
                "type_": 35
            }
        },
        "ContinuousMemMapAllocSpace": {
            "size": "0x118",
            "members": {
                "live_bitmap_": 76,
                "mark_bitmap_": 144,
                "temp_bitmap_": 212
            }
        },
        "MemMapSpace": {
            "size": "0x48",
            "members": {
                "mem_map_": 32
            }
        },
        "BumpPointerSpace": {
            "size": "0x150",
            "members": {
                "growth_end_": 280,
                "objects_allocated_": 284,
                "bytes_allocated_": 288,
                "block_lock_": 296,
                "main_block_size_": 328,
                "num_blocks_": 332
            }
        },
        "Heap": {
            "size": "0x418",
            "members": {
                "continuous_spaces_": 0,
                "discontinuous_spaces_": 12,
                "alloc_spaces_": 24,
                "non_moving_space_": 36,
                "rosalloc_space_": 40,
                "dlmalloc_space_": 44,
                "main_space_": 48,
                "large_object_space_": 52,
                "card_table_": 56,
                "rb_table_": 60,
                "mod_union_tables_": 64,
                "remembered_sets_": 76,
                "collector_type_": 88,
                "foreground_collector_type_": 92,
                "background_collector_type_": 96,
                "desired_collector_type_": 100,
                "pending_task_lock_": 104,
                "parallel_gc_threads_": 108,
                "conc_gc_threads_": 112,
                "low_memory_mode_": 116,
                "long_pause_log_threshold_": 120,
                "long_gc_log_threshold_": 124,
                "process_cpu_start_time_ns_": 128,
                "pre_gc_last_process_cpu_time_ns_": 136,
                "post_gc_last_process_cpu_time_ns_": 144,
                "pre_gc_weighted_allocated_bytes_": 152,
                "post_gc_weighted_allocated_bytes_": 160,
                "ignore_target_footprint_": 168,
                "always_log_explicit_gcs_": 169,
                "zygote_creation_lock_": 176,
                "zygote_space_": 208,
                "large_object_threshold_": 212,
                "gc_complete_lock_": 216,
                "gc_complete_cond_": 220,
                "thread_flip_lock_": 224,
                "thread_flip_cond_": 228,
                "disable_thread_flip_count_": 232,
                "thread_flip_running_": 236,
                "reference_processor_": 240,
                "task_processor_": 244,
                "collector_type_running_": 248,
                "last_gc_cause_": 252,
                "thread_running_gc_": 256,
                "last_gc_type_": 260,
                "next_gc_type_": 264,
                "capacity_": 268,
                "growth_limit_": 272,
                "target_footprint_": 276,
                "process_state_update_lock_": 280,
                "min_foreground_target_footprint_": 312,
                "concurrent_start_bytes_": 316,
                "total_bytes_freed_ever_": 320,
                "total_objects_freed_ever_": 328,
                "num_bytes_allocated_": 336,
                "native_bytes_registered_": 340,
                "old_native_bytes_allocated_": 344,
                "native_objects_notified_": 348,
                "num_bytes_freed_revoke_": 352,
                "current_gc_iteration_": 356,
                "verify_missing_card_marks_": 456,
                "verify_system_weaks_": 457,
                "verify_pre_gc_heap_": 458,
                "verify_pre_sweeping_heap_": 459,
                "verify_post_gc_heap_": 460,
                "verify_mod_union_table_": 461,
                "verify_pre_gc_rosalloc_": 462,
                "verify_pre_sweeping_rosalloc_": 463,
                "verify_post_gc_rosalloc_": 464,
                "gc_stress_mode_": 465,
                "thread_pool_": 468,
                "live_bitmap_": 472,
                "mark_bitmap_": 476,
                "mark_stack_": 480,
                "max_allocation_stack_size_": 484,
                "allocation_stack_": 488,
                "live_stack_": 492,
                "current_allocator_": 496,
                "current_non_moving_allocator_": 497,
                "gc_plan_": 500,
                "bump_pointer_space_": 512,
                "temp_space_": 516,
                "region_space_": 520,
                "min_free_": 524,
                "max_free_": 528,
                "target_utilization_": 532,
                "foreground_heap_growth_multiplier_": 540,
                "stop_for_native_allocs_": 548,
                "total_wait_time_": 552,
                "verify_object_mode_": 560,
                "disable_moving_gc_count_": 564,
                "garbage_collectors_": 568,
                "semi_space_collector_": 580,
                "active_concurrent_copying_collector_": 584,
                "young_concurrent_copying_collector_": 588,
                "concurrent_copying_collector_": 592,
                "is_running_on_memory_tool_": 596,
                "use_tlab_": 597,
                "main_space_backup_": 600,
                "min_interval_homogeneous_space_compaction_by_oom_": 604,
                "last_time_homogeneous_space_compaction_by_oom_": 612,
                "count_delayed_oom_": 620,
                "count_requested_homogeneous_space_compaction_": 624,
                "count_ignored_homogeneous_space_compaction_": 628,
                "count_performed_homogeneous_space_compaction_": 632,
                "gcs_completed_": 636,
                "max_gc_requested_": 640,
                "pending_collector_transition_": 644,
                "pending_heap_trim_": 648,
                "use_homogeneous_space_compaction_for_oom_": 652,
                "use_generational_cc_": 653,
                "running_collection_is_blocking_": 654,
                "blocking_gc_count_": 656,
                "blocking_gc_time_": 664,
                "last_update_time_gc_count_rate_histograms_": 672,
                "gc_count_last_window_": 680,
                "blocking_gc_count_last_window_": 688,
                "gc_count_rate_histogram_": 696,
                "blocking_gc_count_rate_histogram_": 796,
                "alloc_tracking_enabled_": 896,
                "allocation_records_": 900,
                "alloc_record_depth_": 904,
                "heap_sampler_": 912,
                "backtrace_lock_": 968,
                "seen_backtrace_count_": 976,
                "unique_backtrace_count_": 984,
                "seen_backtraces_": 992,
                "gc_disabled_for_shutdown_": 1012,
                "dump_region_info_before_gc_": 1013,
                "dump_region_info_after_gc_": 1014,
                "boot_image_spaces_": 1016,
                "boot_images_start_address_": 1028,
                "boot_images_size_": 1032,
                "alloc_listener_": 1036,
                "gc_pause_listener_": 1040,
                "verification_": 1044
            }
        },
        "AllocRecordObjectMap": {
            "size": "0x2c",
            "members": {
                "alloc_record_max_": 0,
                "recent_record_max_": 4,
                "max_stack_depth_": 8,
                "allow_new_record_": 12,
                "new_record_condition_": 16,
                "entries_": 32
            }
        },
        "AllocRecord": {
            "size": "0x18",
            "members": {
                "byte_count_": 0,
                "klass_": 4,
                "trace_": 8
            }
        },
        "AllocRecordStackTrace": {
            "size": "0x10",
            "members": {
                "tid_": 0,
                "stack_": 4
            }
        },
        "AllocRecordStackTraceElement": {
            "size": "0x8",
            "members": {
                "method_": 0,
                "dex_pc_": 4
            }
        },
        "Verification": {
            "size": "0x4",
            "members": {
                "heap_": 0
            }
        },
        "RosAlloc": {
            "size": "0x930",
            "members": {
                "base_": 0,
                "footprint_": 4,
                "capacity_": 8,
                "max_capacity_": 12,
                "non_full_runs_": 16,
                "full_runs_": 520,
                "free_page_runs_": 1360,
                "current_runs_": 1372,
                "size_bracket_locks_": 1540,
                "size_bracket_lock_names_": 1708,
                "page_map_": 2212,
                "page_map_size_": 2216,
                "max_page_map_size_": 2220,
                "page_map_mem_map_": 2224,
                "free_page_run_size_map_": 2264,
                "lock_": 2280,
                "bulk_free_lock_": 2312,
                "page_release_mode_": 2336,
                "page_release_size_threshold_": 2340,
                "is_running_on_memory_tool_": 2344
            }
        },
        "Run": {
            "size": "0x50",
            "members": {
                "magic_num_": 0,
                "size_bracket_idx_": 1,
                "is_thread_local_": 2,
                "to_be_bulk_freed_": 3,
                "padding_": 4,
                "free_list_": 8,
                "bulk_free_list_": 32,
                "thread_local_free_list_": 56
            }
        },
        "SlotFreeList<false>": {
            "size": "0x18",
            "members": {
                "head_": 0,
                "tail_": 8,
                "size_": 16,
                "padding_": 20
            }
        },
        "Slot": {
            "size": "0x4",
            "members": {
                "next_": 0
            }
        },
        "SlotFreeList<true>": {
            "size": "0x18",
            "members": {
                "head_": 0,
                "tail_": 8,
                "size_": 16,
                "padding_": 20
            }
        },
        "ObjPtr<art::mirror::MethodType>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::MethodHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::CallSite>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "GcRoot<art::mirror::String>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "GcRoot<art::mirror::MethodType>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "GcRoot<art::mirror::CallSite>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "ObjPtr<art::mirror::PointerArray>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ClassExt>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ClassExt>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::Object> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ArraySlice<art::ArtMethod>": {
            "size": "0xc",
            "members": {
                "array_": 0,
                "size_": 4,
                "element_size_": 8
            }
        },
        "LengthPrefixedArray<art::ArtMethod>": {
            "size": "0x4",
            "members": {
                "size_": 0,
                "data_": 4
            }
        },
        "ObjPtr<art::mirror::IfTable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "LengthPrefixedArray<art::ArtField>": {
            "size": "0x4",
            "members": {
                "size_": 0,
                "data_": 4
            }
        },
        "StrideIterator<art::ArtField>": {
            "size": "0x8",
            "members": {
                "ptr_": 0,
                "stride_": 4
            }
        },
        "IterationRange<art::StrideIterator<art::ArtField> >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::ObjectArray<art::mirror::Class> > >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::Object>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::Throwable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ManagedStack": {
            "size": "0xc",
            "members": {
                "tagged_top_quick_frame_": 0,
                "link_": 4,
                "top_shadow_frame_": 8
            }
        },
        "TaggedTopQuickFrame": {
            "size": "0x4",
            "members": {
                "tagged_sp_": 0
            }
        },
        "ShadowFrame": {
            "size": "0x28",
            "members": {
                "link_": 0,
                "method_": 4,
                "result_register_": 8,
                "dex_pc_ptr_": 12,
                "dex_instructions_": 16,
                "lock_count_data_": 20,
                "number_of_vregs_": 24,
                "dex_pc_": 28,
                "cached_hotness_countdown_": 32,
                "hotness_countdown_": 34,
                "frame_flags_": 36,
                "vregs_": 40
            }
        },
        "LockCountData": {
            "size": "0x4",
            "members": {
                "monitors_": 0
            }
        },
        "DexLockInfo": {
            "size": "0x10",
            "members": {
                "dex_registers": 0,
                "dex_pc": 12
            }
        },
        "BaseHandleScope": {
            "size": "0x8",
            "members": {
                "link_": 0,
                "number_of_references_": 4
            }
        },
        "VariableSizedHandleScope": {
            "size": "0x4c",
            "members": {
                "self_": 8,
                "current_scope_": 12,
                "first_scope_": 16
            }
        },
        "FixedSizeHandleScope<12>": {
            "size": "0x3c",
            "members": {
                "storage_": 8,
                "pos_": 56
            }
        },
        "JniEntryPoints": {
            "size": "0x8",
            "members": {
                "pDlsymLookup": 0,
                "pDlsymLookupCritical": 4
            }
        },
        "QuickEntryPoints": {
            "size": "0x2a4",
            "members": {
                "pAllocArrayResolved": 0,
                "pAllocArrayResolved8": 4,
                "pAllocArrayResolved16": 8,
                "pAllocArrayResolved32": 12,
                "pAllocArrayResolved64": 16,
                "pAllocObjectResolved": 20,
                "pAllocObjectInitialized": 24,
                "pAllocObjectWithChecks": 28,
                "pAllocStringObject": 32,
                "pAllocStringFromBytes": 36,
                "pAllocStringFromChars": 40,
                "pAllocStringFromString": 44,
                "pInstanceofNonTrivial": 48,
                "pCheckInstanceOf": 52,
                "pInitializeStaticStorage": 56,
                "pResolveTypeAndVerifyAccess": 60,
                "pResolveType": 64,
                "pResolveMethodHandle": 68,
                "pResolveMethodType": 72,
                "pResolveString": 76,
                "pSet8Instance": 80,
                "pSet8Static": 84,
                "pSet16Instance": 88,
                "pSet16Static": 92,
                "pSet32Instance": 96,
                "pSet32Static": 100,
                "pSet64Instance": 104,
                "pSet64Static": 108,
                "pSetObjInstance": 112,
                "pSetObjStatic": 116,
                "pGetByteInstance": 120,
                "pGetBooleanInstance": 124,
                "pGetByteStatic": 128,
                "pGetBooleanStatic": 132,
                "pGetShortInstance": 136,
                "pGetCharInstance": 140,
                "pGetShortStatic": 144,
                "pGetCharStatic": 148,
                "pGet32Instance": 152,
                "pGet32Static": 156,
                "pGet64Instance": 160,
                "pGet64Static": 164,
                "pGetObjInstance": 168,
                "pGetObjStatic": 172,
                "pAputObject": 176,
                "pJniMethodStart": 180,
                "pJniMethodFastStart": 184,
                "pJniMethodStartSynchronized": 188,
                "pJniMethodEnd": 192,
                "pJniMethodFastEnd": 196,
                "pJniMethodEndSynchronized": 200,
                "pJniMethodEndWithReference": 204,
                "pJniMethodFastEndWithReference": 208,
                "pJniMethodEndWithReferenceSynchronized": 212,
                "pQuickGenericJniTrampoline": 216,
                "pLockObject": 220,
                "pUnlockObject": 224,
                "pCmpgDouble": 228,
                "pCmpgFloat": 232,
                "pCmplDouble": 236,
                "pCmplFloat": 240,
                "pCos": 244,
                "pSin": 248,
                "pAcos": 252,
                "pAsin": 256,
                "pAtan": 260,
                "pAtan2": 264,
                "pPow": 268,
                "pCbrt": 272,
                "pCosh": 276,
                "pExp": 280,
                "pExpm1": 284,
                "pHypot": 288,
                "pLog": 292,
                "pLog10": 296,
                "pNextAfter": 300,
                "pSinh": 304,
                "pTan": 308,
                "pTanh": 312,
                "pFmod": 316,
                "pL2d": 320,
                "pFmodf": 324,
                "pL2f": 328,
                "pD2iz": 332,
                "pF2iz": 336,
                "pIdivmod": 340,
                "pD2l": 344,
                "pF2l": 348,
                "pLdiv": 352,
                "pLmod": 356,
                "pLmul": 360,
                "pShlLong": 364,
                "pShrLong": 368,
                "pUshrLong": 372,
                "pIndexOf": 376,
                "pStringCompareTo": 380,
                "pMemcpy": 384,
                "pQuickImtConflictTrampoline": 388,
                "pQuickResolutionTrampoline": 392,
                "pQuickToInterpreterBridge": 396,
                "pInvokeDirectTrampolineWithAccessCheck": 400,
                "pInvokeInterfaceTrampolineWithAccessCheck": 404,
                "pInvokeStaticTrampolineWithAccessCheck": 408,
                "pInvokeSuperTrampolineWithAccessCheck": 412,
                "pInvokeVirtualTrampolineWithAccessCheck": 416,
                "pInvokePolymorphic": 420,
                "pInvokeCustom": 424,
                "pTestSuspend": 428,
                "pDeliverException": 432,
                "pThrowArrayBounds": 436,
                "pThrowDivZero": 440,
                "pThrowNullPointer": 444,
                "pThrowStackOverflow": 448,
                "pThrowStringBounds": 452,
                "pDeoptimize": 456,
                "pA64Load": 460,
                "pA64Store": 464,
                "pNewEmptyString": 468,
                "pNewStringFromBytes_B": 472,
                "pNewStringFromBytes_BI": 476,
                "pNewStringFromBytes_BII": 480,
                "pNewStringFromBytes_BIII": 484,
                "pNewStringFromBytes_BIIString": 488,
                "pNewStringFromBytes_BString": 492,
                "pNewStringFromBytes_BIICharset": 496,
                "pNewStringFromBytes_BCharset": 500,
                "pNewStringFromChars_C": 504,
                "pNewStringFromChars_CII": 508,
                "pNewStringFromChars_IIC": 512,
                "pNewStringFromCodePoints": 516,
                "pNewStringFromString": 520,
                "pNewStringFromStringBuffer": 524,
                "pNewStringFromStringBuilder": 528,
                "pStringBuilderAppend": 532,
                "pUpdateInlineCache": 536,
                "pCompileOptimized": 540,
                "pReadBarrierJni": 544,
                "pReadBarrierMarkReg00": 548,
                "pReadBarrierMarkReg01": 552,
                "pReadBarrierMarkReg02": 556,
                "pReadBarrierMarkReg03": 560,
                "pReadBarrierMarkReg04": 564,
                "pReadBarrierMarkReg05": 568,
                "pReadBarrierMarkReg06": 572,
                "pReadBarrierMarkReg07": 576,
                "pReadBarrierMarkReg08": 580,
                "pReadBarrierMarkReg09": 584,
                "pReadBarrierMarkReg10": 588,
                "pReadBarrierMarkReg11": 592,
                "pReadBarrierMarkReg12": 596,
                "pReadBarrierMarkReg13": 600,
                "pReadBarrierMarkReg14": 604,
                "pReadBarrierMarkReg15": 608,
                "pReadBarrierMarkReg16": 612,
                "pReadBarrierMarkReg17": 616,
                "pReadBarrierMarkReg18": 620,
                "pReadBarrierMarkReg19": 624,
                "pReadBarrierMarkReg20": 628,
                "pReadBarrierMarkReg21": 632,
                "pReadBarrierMarkReg22": 636,
                "pReadBarrierMarkReg23": 640,
                "pReadBarrierMarkReg24": 644,
                "pReadBarrierMarkReg25": 648,
                "pReadBarrierMarkReg26": 652,
                "pReadBarrierMarkReg27": 656,
                "pReadBarrierMarkReg28": 660,
                "pReadBarrierMarkReg29": 664,
                "pReadBarrierSlow": 668,
                "pReadBarrierForRootSlow": 672
            }
        },
        "BaseReflectiveHandleScope": {
            "size": "0xc",
            "members": {
                "_vptr$BaseReflectiveHandleScope": 0,
                "self_": 4,
                "link_": 8
            }
        },
        "InterpreterCache": {
            "size": "0x800",
            "members": {
                "data_": 0
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> >, std::less<void>, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> > > > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "ThreadList": {
            "size": "0x2088",
            "members": {
                "allocated_ids_": 0,
                "list_": 8192,
                "suspend_all_count_": 8204,
                "unregistering_count_": 8208,
                "suspend_all_historam_": 8212,
                "long_suspend_": 8312,
                "shut_down_": 8313,
                "thread_suspend_timeout_ns_": 8316,
                "empty_checkpoint_barrier_": 8324
            }
        },
        "Histogram<unsigned long long>": {
            "size": "0x64",
            "members": {
                "kAdjust": 0,
                "kInitialBucketCount": 8,
                "name_": 12,
                "max_buckets_": 24,
                "sample_size_": 28,
                "bucket_width_": 32,
                "frequency_": 40,
                "sum_": 52,
                "min_": 60,
                "max_": 68,
                "sum_of_squares_": 76,
                "min_value_added_": 84,
                "max_value_added_": 92
            }
        },
        "TimingLogger": {
            "size": "0x18",
            "members": {
                "name_": 0,
                "precise_": 4,
                "verbose_": 5,
                "kind_": 8,
                "timings_": 12
            }
        },
        "TimingData": {
            "size": "0xc",
            "members": {
                "data_": 0
            }
        },
        "CalculatedDataPoint": {
            "size": "0x10",
            "members": {
                "total_time": 0,
                "exclusive_time": 8
            }
        },
        "Instrumentation": {
            "size": "0xc4",
            "members": {
                "current_force_deopt_id_": 0,
                "instrumentation_stubs_installed_": 8,
                "entry_exit_stubs_installed_": 9,
                "interpreter_stubs_installed_": 10,
                "interpret_only_": 11,
                "forced_interpret_only_": 12,
                "have_method_entry_listeners_": 13,
                "have_method_exit_listeners_": 14,
                "have_method_unwind_listeners_": 15,
                "have_dex_pc_listeners_": 16,
                "have_field_read_listeners_": 17,
                "have_field_write_listeners_": 18,
                "have_exception_thrown_listeners_": 19,
                "have_watched_frame_pop_listeners_": 20,
                "have_branch_listeners_": 21,
                "have_exception_handled_listeners_": 22,
                "requested_instrumentation_levels_": 24,
                "method_entry_listeners_": 36,
                "method_exit_listeners_": 48,
                "method_unwind_listeners_": 60,
                "branch_listeners_": 72,
                "dex_pc_listeners_": 84,
                "field_read_listeners_": 96,
                "field_write_listeners_": 108,
                "exception_thrown_listeners_": 120,
                "watched_frame_pop_listeners_": 132,
                "exception_handled_listeners_": 144,
                "deoptimized_methods_lock_": 156,
                "deoptimized_methods_": 160,
                "deoptimization_enabled_": 180,
                "interpreter_handler_table_": 184,
                "quick_alloc_entry_points_instrumentation_counter_": 188,
                "alloc_entrypoints_instrumented_": 192,
                "can_use_instrumentation_trampolines_": 193
            }
        },
        "SafeMap<const char *, art::instrumentation::Instrumentation::InstrumentationLevel, std::less<const char *>, std::allocator<std::pair<const char *const, art::instrumentation::Instrumentation::InstrumentationLevel> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "CompatFramework": {
            "size": "0x38",
            "members": {
                "disabled_compat_changes_": 0,
                "reported_compat_changes_": 12,
                "reported_compat_changes_lock_": 24
            }
        },
        "ExperimentalFlags": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "AppInfo": {
            "size": "0x40",
            "members": {
                "package_name_": 0,
                "registered_code_locations_": 16,
                "update_mutex_": 32
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "Runtime": {
            "size": "0x6c8",
            "members": {
                "callee_save_methods_": 0,
                "pre_allocated_OutOfMemoryError_when_throwing_exception_": 48,
                "pre_allocated_OutOfMemoryError_when_throwing_oome_": 52,
                "pre_allocated_OutOfMemoryError_when_handling_stack_overflow_": 56,
                "pre_allocated_NoClassDefFoundError_": 60,
                "resolution_method_": 64,
                "imt_conflict_method_": 68,
                "imt_unimplemented_method_": 72,
                "sentinel_": 76,
                "instruction_set_": 80,
                "compiler_callbacks_": 84,
                "is_zygote_": 88,
                "is_primary_zygote_": 89,
                "is_system_server_": 90,
                "must_relocate_": 91,
                "is_concurrent_gc_enabled_": 92,
                "is_explicit_gc_disabled_": 93,
                "image_dex2oat_enabled_": 94,
                "compiler_executable_": 96,
                "compiler_options_": 108,
                "image_compiler_options_": 120,
                "image_location_": 132,
                "boot_class_path_": 144,
                "boot_class_path_locations_": 156,
                "boot_class_path_checksums_": 168,
                "class_path_string_": 180,
                "properties_": 192,
                "agent_specs_": 204,
                "agents_": 216,
                "plugins_": 228,
                "default_stack_size_": 240,
                "finalizer_timeout_ms_": 244,
                "heap_": 248,
                "jit_arena_pool_": 252,
                "arena_pool_": 256,
                "low_4gb_arena_pool_": 260,
                "linear_alloc_": 264,
                "max_spins_before_thin_lock_inflation_": 268,
                "monitor_list_": 272,
                "monitor_pool_": 276,
                "thread_list_": 280,
                "intern_table_": 284,
                "class_linker_": 288,
                "signal_catcher_": 292,
                "jni_id_manager_": 296,
                "java_vm_": 300,
                "jit_": 304,
                "jit_code_cache_": 308,
                "jit_options_": 312,
                "thread_pool_": 316,
                "thread_pool_ref_count_": 320,
                "fault_message_": 324,
                "threads_being_born_": 328,
                "shutdown_cond_": 332,
                "shutting_down_": 336,
                "shutting_down_started_": 337,
                "started_": 338,
                "finished_starting_": 339,
                "vfprintf_": 340,
                "exit_": 344,
                "abort_": 348,
                "stats_enabled_": 352,
                "stats_": 356,
                "is_running_on_memory_tool_": 412,
                "trace_config_": 416,
                "instrumentation_": 420,
                "main_thread_group_": 616,
                "system_thread_group_": 620,
                "system_class_loader_": 624,
                "dump_gc_performance_on_shutdown_": 628,
                "preinitialization_transactions_": 632,
                "verify_": 644,
                "cpu_abilist_": 648,
                "target_sdk_version_": 660,
                "compat_framework_": 664,
                "implicit_null_checks_": 720,
                "implicit_so_checks_": 721,
                "implicit_suspend_checks_": 722,
                "no_sig_chain_": 723,
                "force_native_bridge_": 724,
                "is_native_bridge_loaded_": 725,
                "is_native_debuggable_": 726,
                "async_exceptions_thrown_": 727,
                "non_standard_exits_enabled_": 728,
                "is_java_debuggable_": 729,
                "monitor_timeout_enable_": 730,
                "monitor_timeout_ns_": 732,
                "is_profileable_from_shell_": 740,
                "is_profileable_": 741,
                "zygote_max_failed_boots_": 744,
                "experimental_flags_": 748,
                "fingerprint_": 752,
                "oat_file_manager_": 764,
                "is_low_memory_mode_": 768,
                "madvise_random_access_": 769,
                "madvise_willneed_vdex_filesize_": 772,
                "madvise_willneed_odex_filesize_": 776,
                "madvise_willneed_art_filesize_": 780,
                "safe_mode_": 784,
                "hidden_api_policy_": 788,
                "core_platform_api_policy_": 792,
                "test_api_policy_": 796,
                "hidden_api_exemptions_": 800,
                "dedupe_hidden_api_warnings_": 812,
                "hidden_api_access_event_log_rate_": 816,
                "process_package_name_": 820,
                "process_data_directory_": 832,
                "dump_native_stack_on_sig_quit_": 844,
                "process_state_": 848,
                "zygote_no_threads_": 852,
                "jdwp_options_": 856,
                "jdwp_provider_": 868,
                "jni_ids_indirection_": 872,
                "automatically_set_jni_ids_indirection_": 876,
                "deny_art_apex_data_files_": 877,
                "env_snapshot_": 880,
                "system_weak_holders_": 896,
                "callbacks_": 908,
                "deoptimization_counts_": 912,
                "protected_fault_page_": 944,
                "verifier_logging_threshold_ms_": 984,
                "load_app_image_startup_cache_": 988,
                "startup_completed_": 989,
                "verifier_missing_kthrow_fatal_": 990,
                "force_java_zygote_fork_loop_": 991,
                "perfetto_hprof_enabled_": 992,
                "perfetto_javaheapprof_enabled_": 993,
                "metrics_": 1000,
                "metrics_reporter_": 1656,
                "apex_versions_": 1660,
                "app_info_": 1672
            }
        },
        "EnvSnapshot": {
            "size": "0x10",
            "members": {
                "c_env_vector_": 0,
                "name_value_pairs_": 4
            }
        },
        "GcRoot<art::mirror::Throwable>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "SafeMap<art::gc::space::Space *, art::gc::accounting::ModUnionTable *, std::less<art::gc::space::Space *>, std::allocator<std::pair<art::gc::space::Space *const, art::gc::accounting::ModUnionTable *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<art::gc::space::Space *, art::gc::accounting::RememberedSet *, std::less<art::gc::space::Space *>, std::allocator<std::pair<art::gc::space::Space *const, art::gc::accounting::RememberedSet *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "HeapSampler": {
            "size": "0x38",
            "members": {
                "enabled_": 0,
                "p_sampling_interval_": 4,
                "perfetto_heap_id_": 8,
                "rng_": 12,
                "geo_dist_": 16,
                "geo_dist_rng_lock_": 24
            }
        },
        "MonitorList": {
            "size": "0x48",
            "members": {
                "allow_new_monitors_": 0,
                "monitor_list_lock_": 8,
                "monitor_add_condition_": 40,
                "list_": 56
            }
        },
        "JniIdManager": {
            "size": "0x30",
            "members": {
                "next_method_id_": 0,
                "method_id_map_": 4,
                "next_field_id_": 16,
                "field_id_map_": 20,
                "deferred_allocation_refcount_": 32,
                "deferred_allocation_method_id_start_": 36,
                "deferred_allocation_field_id_start_": 40,
                "pointer_marker_": 44
            }
        },
        "ReflectiveHandle<art::ArtMethod>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ReflectiveReference<art::ArtMethod>": {
            "size": "0x4",
            "members": {
                "val_": 0
            }
        },
        "ReflectiveHandle<art::ArtField>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ReflectiveReference<art::ArtField>": {
            "size": "0x4",
            "members": {
                "val_": 0
            }
        },
        "JitOptions": {
            "size": "0x5c",
            "members": {
                "use_jit_compilation_": 0,
                "use_profiled_jit_compilation_": 1,
                "use_baseline_compiler_": 2,
                "code_cache_initial_capacity_": 4,
                "code_cache_max_capacity_": 8,
                "compile_threshold_": 12,
                "warmup_threshold_": 16,
                "osr_threshold_": 20,
                "priority_thread_weight_": 24,
                "invoke_transition_weight_": 26,
                "dump_info_on_shutdown_": 28,
                "thread_pool_pthread_priority_": 32,
                "zygote_thread_pool_pthread_priority_": 36,
                "profile_saver_options_": 40
            }
        },
        "ProfileSaverOptions": {
            "size": "0x34",
            "members": {
                "enabled_": 0,
                "min_save_period_ms_": 4,
                "min_first_save_ms_": 8,
                "save_resolved_classes_delay_ms_": 12,
                "hot_startup_method_samples_": 16,
                "min_methods_to_save_": 20,
                "min_classes_to_save_": 24,
                "min_notification_before_wake_": 28,
                "max_notification_before_wake_": 32,
                "profile_path_": 36,
                "profile_boot_class_path_": 48,
                "profile_aot_code_": 49,
                "wait_for_jit_notifications_to_save_": 50
            }
        },
        "Transaction": {
            "size": "0x70",
            "members": {
                "log_lock_": 0,
                "object_logs_": 32,
                "array_logs_": 44,
                "intern_string_logs_": 56,
                "resolve_string_logs_": 68,
                "aborted_": 80,
                "rolling_back_": 81,
                "heap_": 84,
                "strict_": 88,
                "abort_message_": 92,
                "root_": 104,
                "assert_no_new_records_reason_": 108
            }
        },
        "ArtMetrics": {
            "size": "0x290",
            "members": {
                "beginning_timestamp_": 0,
                "ClassLoadingTotalTime_": 8,
                "ClassVerificationTotalTime_": 24,
                "ClassVerificationCount_": 40,
                "WorldStopTimeDuringGCAvg_": 56,
                "YoungGcCount_": 80,
                "FullGcCount_": 96,
                "TotalBytesAllocated_": 112,
                "TotalGcCollectionTime_": 128,
                "YoungGcThroughputAvg_": 144,
                "FullGcThroughputAvg_": 168,
                "YoungGcTracingThroughputAvg_": 192,
                "FullGcTracingThroughputAvg_": 216,
                "JitMethodCompileTotalTime_": 240,
                "JitMethodCompileCount_": 256,
                "YoungGcCollectionTime_": 272,
                "FullGcCollectionTime_": 336,
                "YoungGcThroughput_": 400,
                "FullGcThroughput_": 464,
                "YoungGcTracingThroughput_": 528,
                "FullGcTracingThroughput_": 592
            }
        },
        "QuickMethodFrameInfo": {
            "size": "0xc",
            "members": {
                "frame_size_in_bytes_": 0,
                "core_spill_mask_": 4,
                "fp_spill_mask_": 8
            }
        },
        "ErrnoRestorer": {
            "size": "0x4",
            "members": {
                "saved_errno_": 0
            }
        },
        "Storage<unsigned int>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<unsigned int, unsigned int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<unsigned long long, unsigned int>": {
            "size": "0xc",
            "members": {
                "lhs": 0,
                "rhs": 8
            }
        },
        "Storage<unsigned long long>": {
            "size": "0x8",
            "members": {
                "v": 0
            }
        },
        "mutex": {
            "size": "0x4",
            "members": {
                "__m_": 0
            }
        },
        "basic_string_view<char, std::char_traits<char> >": {
            "size": "0x8",
            "members": {
                "__data": 0,
                "__size": 4
            }
        },
        "unique_ptr<std::vector<art::mirror::Object *, std::allocator<art::mirror::Object *> >, std::default_delete<std::vector<art::mirror::Object *, std::allocator<art::mirror::Object *> > > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "array<std::pair<const void *, unsigned int>, 256>": {
            "size": "0x800",
            "members": {
                "__elems_": 0
            }
        },
        "pair<const void *, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> >, std::less<void>, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<std::__list_node<art::Thread *, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::Thread *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::Barrier, std::default_delete<art::Barrier> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::space::RegionSpace::Region [], std::default_delete<art::gc::space::RegionSpace::Region []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "multimap<unsigned int, art::gc::space::RegionSpace::Region *, std::greater<unsigned int>, std::allocator<std::pair<const unsigned int, art::gc::space::RegionSpace::Region *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, art::gc::space::RegionSpace::Region *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<const char *, art::instrumentation::Instrumentation::InstrumentationLevel, std::less<const char *>, std::allocator<std::pair<const char *const, art::instrumentation::Instrumentation::InstrumentationLevel> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<art::ReaderWriterMutex, std::default_delete<art::ReaderWriterMutex> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unordered_set<art::ArtMethod *, std::hash<art::ArtMethod *>, std::equal_to<art::ArtMethod *>, std::allocator<art::ArtMethod *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<art::ArtMethod *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<art::ArtMethod *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<std::__tree_node<unsigned long long, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<unsigned long long, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<art::gc::accounting::CardTable, std::default_delete<art::gc::accounting::CardTable> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::accounting::ReadBarrierTable, std::default_delete<art::gc::accounting::ReadBarrierTable> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "map<art::gc::space::Space *, art::gc::accounting::ModUnionTable *, std::less<art::gc::space::Space *>, std::allocator<std::pair<art::gc::space::Space *const, art::gc::accounting::ModUnionTable *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "map<art::gc::space::Space *, art::gc::accounting::RememberedSet *, std::less<art::gc::space::Space *>, std::allocator<std::pair<art::gc::space::Space *const, art::gc::accounting::RememberedSet *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<art::ConditionVariable, std::default_delete<art::ConditionVariable> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::ReferenceProcessor, std::default_delete<art::gc::ReferenceProcessor> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::TaskProcessor, std::default_delete<art::gc::TaskProcessor> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::ThreadPool, std::default_delete<art::ThreadPool> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::accounting::HeapBitmap, std::default_delete<art::gc::accounting::HeapBitmap> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::accounting::AtomicStack<art::mirror::Object>, std::default_delete<art::gc::accounting::AtomicStack<art::mirror::Object> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::space::MallocSpace, std::default_delete<art::gc::space::MallocSpace> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::AllocRecordObjectMap, std::default_delete<art::gc::AllocRecordObjectMap> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<art::GcRoot<art::mirror::Object>, art::gc::AllocRecord>": {
            "size": "0x1c",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "reverse_iterator<std::__list_iterator<std::pair<art::GcRoot<art::mirror::Object>, art::gc::AllocRecord>, void *> >": {
            "size": "0x8",
            "members": {
                "__t": 0,
                "current": 4
            }
        },
        "unique_ptr<std::__list_node<std::pair<art::GcRoot<art::mirror::Object>, art::gc::AllocRecord>, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::pair<art::GcRoot<art::mirror::Object>, art::gc::AllocRecord>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "linear_congruential_engine<unsigned int, 48271, 0, 2147483647>": {
            "size": "0x4",
            "members": {
                "__x_": 0
            }
        },
        "geometric_distribution<unsigned int>": {
            "size": "0x8",
            "members": {
                "__p_": 0
            }
        },
        "param_type": {
            "size": "0x8",
            "members": {
                "__p_": 0
            }
        },
        "unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::Verification, std::default_delete<art::gc::Verification> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "set<art::gc::allocator::RosAlloc::Run *, std::less<art::gc::allocator::RosAlloc::Run *>, std::allocator<art::gc::allocator::RosAlloc::Run *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unordered_set<art::gc::allocator::RosAlloc::Run *, art::gc::allocator::RosAlloc::hash_run, art::gc::allocator::RosAlloc::eq_run, std::allocator<art::gc::allocator::RosAlloc::Run *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<art::gc::allocator::RosAlloc::Run *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<art::gc::allocator::RosAlloc::Run *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "set<art::gc::allocator::RosAlloc::FreePageRun *, std::less<art::gc::allocator::RosAlloc::FreePageRun *>, std::allocator<art::gc::allocator::RosAlloc::FreePageRun *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<art::ArenaPool, std::default_delete<art::ArenaPool> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::LinearAlloc, std::default_delete<art::LinearAlloc> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::jni::JniIdManager, std::default_delete<art::jni::JniIdManager> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::JavaVMExt, std::default_delete<art::JavaVMExt> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::jit::Jit, std::default_delete<art::jit::Jit> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::jit::JitCodeCache, std::default_delete<art::jit::JitCodeCache> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::jit::JitOptions, std::default_delete<art::jit::JitOptions> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::TraceConfig, std::default_delete<art::TraceConfig> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::Transaction, std::default_delete<art::Transaction> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "map<art::mirror::Object *, art::Transaction::ObjectLog, std::less<art::mirror::Object *>, std::allocator<std::pair<art::mirror::Object *const, art::Transaction::ObjectLog> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "map<art::mirror::Array *, art::Transaction::ArrayLog, std::less<art::mirror::Array *>, std::allocator<std::pair<art::mirror::Array *const, art::Transaction::ArrayLog> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<char *[], std::default_delete<char *[]> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::RuntimeCallbacks, std::default_delete<art::RuntimeCallbacks> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::metrics::MetricsReporter, std::default_delete<art::metrics::MetricsReporter> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "ostreambuf_iterator<char, std::char_traits<char> >": {
            "size": "0x4",
            "members": {
                "__sbuf_": 0
            }
        },
        "set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "initializer_list<unsigned int>": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "JNINativeInterface": {
            "size": "0x3a4",
            "members": {
                "reserved0": 0,
                "reserved1": 4,
                "reserved2": 8,
                "reserved3": 12,
                "GetVersion": 16,
                "DefineClass": 20,
                "FindClass": 24,
                "FromReflectedMethod": 28,
                "FromReflectedField": 32,
                "ToReflectedMethod": 36,
                "GetSuperclass": 40,
                "IsAssignableFrom": 44,
                "ToReflectedField": 48,
                "Throw": 52,
                "ThrowNew": 56,
                "ExceptionOccurred": 60,
                "ExceptionDescribe": 64,
                "ExceptionClear": 68,
                "FatalError": 72,
                "PushLocalFrame": 76,
                "PopLocalFrame": 80,
                "NewGlobalRef": 84,
                "DeleteGlobalRef": 88,
                "DeleteLocalRef": 92,
                "IsSameObject": 96,
                "NewLocalRef": 100,
                "EnsureLocalCapacity": 104,
                "AllocObject": 108,
                "NewObject": 112,
                "NewObjectV": 116,
                "NewObjectA": 120,
                "GetObjectClass": 124,
                "IsInstanceOf": 128,
                "GetMethodID": 132,
                "CallObjectMethod": 136,
                "CallObjectMethodV": 140,
                "CallObjectMethodA": 144,
                "CallBooleanMethod": 148,
                "CallBooleanMethodV": 152,
                "CallBooleanMethodA": 156,
                "CallByteMethod": 160,
                "CallByteMethodV": 164,
                "CallByteMethodA": 168,
                "CallCharMethod": 172,
                "CallCharMethodV": 176,
                "CallCharMethodA": 180,
                "CallShortMethod": 184,
                "CallShortMethodV": 188,
                "CallShortMethodA": 192,
                "CallIntMethod": 196,
                "CallIntMethodV": 200,
                "CallIntMethodA": 204,
                "CallLongMethod": 208,
                "CallLongMethodV": 212,
                "CallLongMethodA": 216,
                "CallFloatMethod": 220,
                "CallFloatMethodV": 224,
                "CallFloatMethodA": 228,
                "CallDoubleMethod": 232,
                "CallDoubleMethodV": 236,
                "CallDoubleMethodA": 240,
                "CallVoidMethod": 244,
                "CallVoidMethodV": 248,
                "CallVoidMethodA": 252,
                "CallNonvirtualObjectMethod": 256,
                "CallNonvirtualObjectMethodV": 260,
                "CallNonvirtualObjectMethodA": 264,
                "CallNonvirtualBooleanMethod": 268,
                "CallNonvirtualBooleanMethodV": 272,
                "CallNonvirtualBooleanMethodA": 276,
                "CallNonvirtualByteMethod": 280,
                "CallNonvirtualByteMethodV": 284,
                "CallNonvirtualByteMethodA": 288,
                "CallNonvirtualCharMethod": 292,
                "CallNonvirtualCharMethodV": 296,
                "CallNonvirtualCharMethodA": 300,
                "CallNonvirtualShortMethod": 304,
                "CallNonvirtualShortMethodV": 308,
                "CallNonvirtualShortMethodA": 312,
                "CallNonvirtualIntMethod": 316,
                "CallNonvirtualIntMethodV": 320,
                "CallNonvirtualIntMethodA": 324,
                "CallNonvirtualLongMethod": 328,
                "CallNonvirtualLongMethodV": 332,
                "CallNonvirtualLongMethodA": 336,
                "CallNonvirtualFloatMethod": 340,
                "CallNonvirtualFloatMethodV": 344,
                "CallNonvirtualFloatMethodA": 348,
                "CallNonvirtualDoubleMethod": 352,
                "CallNonvirtualDoubleMethodV": 356,
                "CallNonvirtualDoubleMethodA": 360,
                "CallNonvirtualVoidMethod": 364,
                "CallNonvirtualVoidMethodV": 368,
                "CallNonvirtualVoidMethodA": 372,
                "GetFieldID": 376,
                "GetObjectField": 380,
                "GetBooleanField": 384,
                "GetByteField": 388,
                "GetCharField": 392,
                "GetShortField": 396,
                "GetIntField": 400,
                "GetLongField": 404,
                "GetFloatField": 408,
                "GetDoubleField": 412,
                "SetObjectField": 416,
                "SetBooleanField": 420,
                "SetByteField": 424,
                "SetCharField": 428,
                "SetShortField": 432,
                "SetIntField": 436,
                "SetLongField": 440,
                "SetFloatField": 444,
                "SetDoubleField": 448,
                "GetStaticMethodID": 452,
                "CallStaticObjectMethod": 456,
                "CallStaticObjectMethodV": 460,
                "CallStaticObjectMethodA": 464,
                "CallStaticBooleanMethod": 468,
                "CallStaticBooleanMethodV": 472,
                "CallStaticBooleanMethodA": 476,
                "CallStaticByteMethod": 480,
                "CallStaticByteMethodV": 484,
                "CallStaticByteMethodA": 488,
                "CallStaticCharMethod": 492,
                "CallStaticCharMethodV": 496,
                "CallStaticCharMethodA": 500,
                "CallStaticShortMethod": 504,
                "CallStaticShortMethodV": 508,
                "CallStaticShortMethodA": 512,
                "CallStaticIntMethod": 516,
                "CallStaticIntMethodV": 520,
                "CallStaticIntMethodA": 524,
                "CallStaticLongMethod": 528,
                "CallStaticLongMethodV": 532,
                "CallStaticLongMethodA": 536,
                "CallStaticFloatMethod": 540,
                "CallStaticFloatMethodV": 544,
                "CallStaticFloatMethodA": 548,
                "CallStaticDoubleMethod": 552,
                "CallStaticDoubleMethodV": 556,
                "CallStaticDoubleMethodA": 560,
                "CallStaticVoidMethod": 564,
                "CallStaticVoidMethodV": 568,
                "CallStaticVoidMethodA": 572,
                "GetStaticFieldID": 576,
                "GetStaticObjectField": 580,
                "GetStaticBooleanField": 584,
                "GetStaticByteField": 588,
                "GetStaticCharField": 592,
                "GetStaticShortField": 596,
                "GetStaticIntField": 600,
                "GetStaticLongField": 604,
                "GetStaticFloatField": 608,
                "GetStaticDoubleField": 612,
                "SetStaticObjectField": 616,
                "SetStaticBooleanField": 620,
                "SetStaticByteField": 624,
                "SetStaticCharField": 628,
                "SetStaticShortField": 632,
                "SetStaticIntField": 636,
                "SetStaticLongField": 640,
                "SetStaticFloatField": 644,
                "SetStaticDoubleField": 648,
                "NewString": 652,
                "GetStringLength": 656,
                "GetStringChars": 660,
                "ReleaseStringChars": 664,
                "NewStringUTF": 668,
                "GetStringUTFLength": 672,
                "GetStringUTFChars": 676,
                "ReleaseStringUTFChars": 680,
                "GetArrayLength": 684,
                "NewObjectArray": 688,
                "GetObjectArrayElement": 692,
                "SetObjectArrayElement": 696,
                "NewBooleanArray": 700,
                "NewByteArray": 704,
                "NewCharArray": 708,
                "NewShortArray": 712,
                "NewIntArray": 716,
                "NewLongArray": 720,
                "NewFloatArray": 724,
                "NewDoubleArray": 728,
                "GetBooleanArrayElements": 732,
                "GetByteArrayElements": 736,
                "GetCharArrayElements": 740,
                "GetShortArrayElements": 744,
                "GetIntArrayElements": 748,
                "GetLongArrayElements": 752,
                "GetFloatArrayElements": 756,
                "GetDoubleArrayElements": 760,
                "ReleaseBooleanArrayElements": 764,
                "ReleaseByteArrayElements": 768,
                "ReleaseCharArrayElements": 772,
                "ReleaseShortArrayElements": 776,
                "ReleaseIntArrayElements": 780,
                "ReleaseLongArrayElements": 784,
                "ReleaseFloatArrayElements": 788,
                "ReleaseDoubleArrayElements": 792,
                "GetBooleanArrayRegion": 796,
                "GetByteArrayRegion": 800,
                "GetCharArrayRegion": 804,
                "GetShortArrayRegion": 808,
                "GetIntArrayRegion": 812,
                "GetLongArrayRegion": 816,
                "GetFloatArrayRegion": 820,
                "GetDoubleArrayRegion": 824,
                "SetBooleanArrayRegion": 828,
                "SetByteArrayRegion": 832,
                "SetCharArrayRegion": 836,
                "SetShortArrayRegion": 840,
                "SetIntArrayRegion": 844,
                "SetLongArrayRegion": 848,
                "SetFloatArrayRegion": 852,
                "SetDoubleArrayRegion": 856,
                "RegisterNatives": 860,
                "UnregisterNatives": 864,
                "MonitorEnter": 868,
                "MonitorExit": 872,
                "GetJavaVM": 876,
                "GetStringRegion": 880,
                "GetStringUTFRegion": 884,
                "GetPrimitiveArrayCritical": 888,
                "ReleasePrimitiveArrayCritical": 892,
                "GetStringCritical": 896,
                "ReleaseStringCritical": 900,
                "NewWeakGlobalRef": 904,
                "DeleteWeakGlobalRef": 908,
                "ExceptionCheck": 912,
                "NewDirectByteBuffer": 916,
                "GetDirectBufferAddress": 920,
                "GetDirectBufferCapacity": 924,
                "GetObjectRefType": 928
            }
        },
        "tm": {
            "size": "0x2c",
            "members": {
                "tm_sec": 0,
                "tm_min": 4,
                "tm_hour": 8,
                "tm_mday": 12,
                "tm_mon": 16,
                "tm_year": 20,
                "tm_wday": 24,
                "tm_yday": 28,
                "tm_isdst": 32,
                "tm_gmtoff": 36,
                "tm_zone": 40
            }
        },
        "StringId": {
            "size": "0x4",
            "members": {
                "string_data_off_": 0
            }
        },
        "SetLengthVisitor": {
            "size": "0x4",
            "members": {
                "length_": 0
            }
        },
        "SetStringCountVisitor": {
            "size": "0x4",
            "members": {
                "count_": 0
            }
        },
        "InstructionHandler<false, false, art::Instruction::kInvalidFormat>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "SwitchImplContext": {
            "size": "0x1c",
            "members": {
                "self": 0,
                "accessor": 4,
                "shadow_frame": 8,
                "result_register": 12,
                "interpret_one_instruction": 16,
                "result": 20
            }
        },
        "InstructionHandler<false, false, art::Instruction::k12x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k23x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k22s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k21c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k3rc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k11x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k22c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k35c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k22b>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k31t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k21h>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k21t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k22t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k21s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k51l>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k22x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k31c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k10t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k11n>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k20t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k32x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k45cc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k30t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k31i>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k10x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, false, art::Instruction::k4rcc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "ImmuneSpaces": {
            "size": "0x18",
            "members": {
                "spaces_": 0,
                "largest_immune_region_": 12
            }
        },
        "ImmuneRegion": {
            "size": "0xc",
            "members": {
                "begin_": 0,
                "end_": 4,
                "size_": 8
            }
        },
        "Handle<art::mirror::DexCache>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ClassLoader>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::Throwable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "GcRootSource": {
            "size": "0x8",
            "members": {
                "field_": 0,
                "method_": 4
            }
        },
        "CodeItem": {
            "size": "0x14",
            "members": {
                "registers_size_": 0,
                "ins_size_": 2,
                "outs_size_": 4,
                "tries_size_": 6,
                "debug_info_off_": 8,
                "insns_size_in_code_units_": 12,
                "insns_": 16
            }
        },
        "GcRoot<art::mirror::ObjectArray<art::mirror::Class> >": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "StackHandleScope<1>": {
            "size": "0x14",
            "members": {
                "self_": 16
            }
        },
        "FixedSizeHandleScope<1>": {
            "size": "0x10",
            "members": {
                "storage_": 8,
                "pos_": 12
            }
        },
        "InstructionOperands": {
            "size": "0x8",
            "members": {
                "_vptr$InstructionOperands": 0,
                "num_operands_": 4
            }
        },
        "ScopedAssertNoThreadSuspension": {
            "size": "0xc",
            "members": {
                "self_": 0,
                "enabled_": 4,
                "old_cause_": 8
            }
        },
        "ScopedAllowThreadSuspension": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "old_cause_": 4
            }
        },
        "HandleWrapperObjPtr<art::mirror::Class>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<short> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<unsigned char> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "StackReflectiveHandleScope<1, 0>": {
            "size": "0x1c",
            "members": {
                "field_pos_": 12,
                "method_pos_": 16,
                "fields_": 20,
                "methods_": 24
            }
        },
        "ReflectiveHandleWrapper<art::ArtField>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "ReflectiveHandleWrapper<art::ArtMethod>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "HandleWrapperObjPtr<art::mirror::Object>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<int> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "StackHandleScope<2>": {
            "size": "0x18",
            "members": {
                "self_": 20
            }
        },
        "FixedSizeHandleScope<2>": {
            "size": "0x14",
            "members": {
                "storage_": 8,
                "pos_": 16
            }
        },
        "HandleWrapper<art::mirror::Object>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<long long> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<signed char> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "MutexLock": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "mu_": 4
            }
        },
        "EagerEvaluator<art::BaseReflectiveHandleScope *, art::BaseReflectiveHandleScope *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::BaseReflectiveHandleScope *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "set<art::gc::space::ContinuousSpace *, art::gc::collector::ImmuneSpaces::CompareByBegin, std::allocator<art::gc::space::ContinuousSpace *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "array<art::ReflectiveReference<art::ArtField>, 1>": {
            "size": "0x4",
            "members": {
                "__elems_": 0
            }
        },
        "array<art::ReflectiveReference<art::ArtMethod>, 0>": {
            "size": "0x4",
            "members": {
                "__elems_": 0
            }
        },
        "unique_ptr<art::ShadowFrame, art::ShadowFrameDeleter>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "InstructionHandler<false, true, art::Instruction::kInvalidFormat>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k12x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k23x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k22s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k21c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k3rc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k11x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k22c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k35c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k22b>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k31t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k21h>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k21t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k22t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k21s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k51l>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k22x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k31c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k10t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k11n>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k20t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k32x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k45cc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k30t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k31i>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k10x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<false, true, art::Instruction::k4rcc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "FieldId": {
            "size": "0x8",
            "members": {
                "class_idx_": 0,
                "type_idx_": 2,
                "name_idx_": 4
            }
        },
        "InstructionHandler<true, false, art::Instruction::kInvalidFormat>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k12x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k23x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k22s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k21c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k3rc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k11x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k22c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k35c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k22b>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k31t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k21h>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k21t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k22t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k21s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k51l>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k22x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k31c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k10t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k11n>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k20t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k32x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k45cc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k30t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k31i>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k10x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, false, art::Instruction::k4rcc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::kInvalidFormat>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k12x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k23x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k22s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k21c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k3rc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k11x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k22c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k35c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k22b>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k31t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k21h>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k21t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k22t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k21s>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k51l>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k22x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k31c>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k10t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k11n>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k20t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k32x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k45cc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k30t>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k31i>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k10x>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "InstructionHandler<true, true, art::Instruction::k4rcc>": {
            "size": "0x24",
            "members": {
                "ctx_": 0,
                "instrumentation_": 4,
                "self_": 8,
                "shadow_frame_": 12,
                "dex_pc_": 16,
                "inst_": 20,
                "inst_data_": 24,
                "next_": 28,
                "exit_interpreter_loop_": 32
            }
        },
        "Executable": {
            "size": "0x28",
            "members": {
                "has_real_parameter_data_": 9,
                "padding_": 10,
                "declaring_class_": 12,
                "declaring_class_of_overridden_method_": 16,
                "parameters_": 20,
                "art_method_": 24,
                "access_flags_": 32,
                "dex_method_index_": 36
            }
        },
        "AccessibleObject": {
            "size": "0xc",
            "members": {
                "flag_": 8
            }
        },
        "HeapReference<art::mirror::Array>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::Method>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::Constructor>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjectLock<art::mirror::Class>": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "obj_": 4
            }
        },
        "ObjectLock<art::mirror::ClassExt>": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "obj_": 4
            }
        },
        "ObjectLock<art::mirror::Object>": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "obj_": 4
            }
        },
        "ObjectTryLock<art::mirror::Class>": {
            "size": "0xc",
            "members": {
                "self_": 0,
                "obj_": 4,
                "acquired_": 8
            }
        },
        "ObjectTryLock<art::mirror::Object>": {
            "size": "0xc",
            "members": {
                "self_": 0,
                "obj_": 4,
                "acquired_": 8
            }
        },
        "CodeLocationInfo": {
            "size": "0x54",
            "members": {
                "code_type": 0,
                "compiler_filter": 4,
                "compilation_reason": 20,
                "odex_status": 36,
                "cur_profile_path": 52,
                "ref_profile_path": 68
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo>": {
            "size": "0x60",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::AppInfo::CodeLocationInfo>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "sentry": {
            "size": "0x8",
            "members": {
                "__ok_": 0,
                "__os_": 4
            }
        },
        "locale": {
            "size": "0x4",
            "members": {
                "__locale_": 0
            }
        },
        "id": {
            "size": "0x8",
            "members": {
                "__flag_": 0,
                "__id_": 4
            }
        },
        "once_flag": {
            "size": "0x4",
            "members": {
                "__state_": 0
            }
        },
        "StrideIterator<art::ArtMethod>": {
            "size": "0x8",
            "members": {
                "ptr_": 0,
                "stride_": 4
            }
        },
        "AotClassLinker": {
            "size": "0x160",
            "members": {
                "updatable_boot_class_path_descriptor_prefixes_": 336,
                "sdk_checker_": 348
            }
        },
        "SdkChecker": {
            "size": "0x10",
            "members": {
                "sdk_dex_files_": 0,
                "enabled_": 12
            }
        },
        "DexFileReference": {
            "size": "0x8",
            "members": {
                "dex_file": 0,
                "index": 4
            }
        },
        "unique_ptr<const art::DexFile, std::default_delete<const art::DexFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::SdkChecker, std::default_delete<art::SdkChecker> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "Storage<const art::dex::TypeId *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<const art::dex::TypeId *, const art::dex::TypeId *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "HiddenapiClassData": {
            "size": "0x8",
            "members": {
                "size_": 0,
                "flags_offset_": 4
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::Class> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::DexCache> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "OatQuickMethodHeader": {
            "size": "0x4",
            "members": {
                "data_": 0,
                "code_": 4
            }
        },
        "JitCodeCache": {
            "size": "0x364",
            "members": {
                "is_weak_access_enabled_": 0,
                "inline_cache_cond_": 4,
                "shared_region_": 20,
                "private_region_": 216,
                "jni_stubs_map_": 412,
                "method_code_map_": 424,
                "saved_compiled_methods_map_": 436,
                "osr_code_map_": 448,
                "profiling_infos_": 460,
                "current_optimized_compilations_": 472,
                "current_osr_compilations_": 484,
                "current_baseline_compilations_": 496,
                "zygote_map_": 508,
                "lock_cond_": 524,
                "collection_in_progress_": 540,
                "live_bitmap_": 544,
                "last_collection_increased_code_cache_": 548,
                "garbage_collect_code_": 549,
                "number_of_baseline_compilations_": 552,
                "number_of_optimized_compilations_": 556,
                "number_of_osr_compilations_": 560,
                "number_of_collections_": 564,
                "histogram_stack_map_memory_use_": 568,
                "histogram_code_memory_use_": 668,
                "histogram_profiling_info_memory_use_": 768
            }
        },
        "JitMemoryRegion": {
            "size": "0xc4",
            "members": {
                "initial_capacity_": 0,
                "max_capacity_": 4,
                "current_capacity_": 8,
                "data_end_": 12,
                "exec_end_": 16,
                "used_memory_for_code_": 20,
                "used_memory_for_data_": 24,
                "data_pages_": 28,
                "writable_data_pages_": 68,
                "exec_pages_": 108,
                "non_exec_pages_": 148,
                "data_mspace_": 188,
                "exec_mspace_": 192
            }
        },
        "ZygoteMap": {
            "size": "0x10",
            "members": {
                "map_": 0,
                "region_": 8,
                "compilation_state_": 12
            }
        },
        "Entry": {
            "size": "0x8",
            "members": {
                "str_offset_": 0,
                "data_": 4
            }
        },
        "ArrayRef<const unsigned char>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "SafeMap<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData, std::less<art::jit::JitCodeCache::JniStubKey>, std::allocator<std::pair<const art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<const void *, art::ArtMethod *, std::less<const void *>, std::allocator<std::pair<const void *const, art::ArtMethod *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<art::ArtMethod *, const void *, std::less<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, const void *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<art::ArtMethod *, art::ProfilingInfo *, std::less<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, art::ProfilingInfo *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "ProfilingInfo": {
            "size": "0x10",
            "members": {
                "baseline_hotness_count_": 0,
                "method_": 4,
                "number_of_inline_caches_": 8,
                "current_inline_uses_": 12,
                "cache_": 16
            }
        },
        "InlineCache": {
            "size": "0x18",
            "members": {
                "dex_pc_": 0,
                "classes_": 4
            }
        },
        "ArrayRef<const art::jit::ZygoteMap::Entry>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "DexRegisterLocation": {
            "size": "0x8",
            "members": {
                "kind_": 0,
                "value_": 4
            }
        },
        "ObjPtr<art::mirror::Executable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "CatchHandlerIterator": {
            "size": "0x14",
            "members": {
                "handler_": 0,
                "current_data_": 8,
                "remaining_count_": 12,
                "catch_all_": 16
            }
        },
        "CatchHandlerItem": {
            "size": "0x8",
            "members": {
                "type_idx_": 0,
                "address_": 4
            }
        },
        "BitMemoryRegion": {
            "size": "0xc",
            "members": {
                "data_": 0,
                "bit_start_": 4,
                "bit_size_": 8
            }
        },
        "MemoryRegion": {
            "size": "0x8",
            "members": {
                "pointer_": 0,
                "size_": 4
            }
        },
        "BitMemoryReader": {
            "size": "0xc",
            "members": {
                "finished_region_": 0
            }
        },
        "CodeInfo": {
            "size": "0xe0",
            "members": {
                "flags_": 0,
                "code_size_": 4,
                "packed_frame_size_": 8,
                "core_spill_mask_": 12,
                "fp_spill_mask_": 16,
                "number_of_dex_registers_": 20,
                "bit_table_flags_": 24,
                "stack_maps_": 28,
                "register_masks_": 64,
                "stack_masks_": 88,
                "inline_infos_": 108,
                "method_infos_": 140,
                "dex_register_masks_": 160,
                "dex_register_maps_": 180,
                "dex_register_catalog_": 200
            }
        },
        "const_iterator": {
            "size": "0x8",
            "members": {
                "table_": 0,
                "row_": 4
            }
        },
        "BitTableAccessor<8>": {
            "size": "0x8",
            "members": {
                "table_": 0,
                "row_": 4
            }
        },
        "BitTableBase<8>": {
            "size": "0x24",
            "members": {
                "table_data_": 0,
                "num_rows_": 12,
                "column_offset_": 16
            }
        },
        "BitTableAccessor<2>": {
            "size": "0x8",
            "members": {
                "table_": 0,
                "row_": 4
            }
        },
        "BitTableBase<2>": {
            "size": "0x18",
            "members": {
                "table_data_": 0,
                "num_rows_": 12,
                "column_offset_": 16
            }
        },
        "BitTableAccessor<1>": {
            "size": "0x8",
            "members": {
                "table_": 0,
                "row_": 4
            }
        },
        "BitTableBase<1>": {
            "size": "0x14",
            "members": {
                "table_data_": 0,
                "num_rows_": 12,
                "column_offset_": 16
            }
        },
        "BitTableAccessor<6>": {
            "size": "0x8",
            "members": {
                "table_": 0,
                "row_": 4
            }
        },
        "BitTableBase<6>": {
            "size": "0x20",
            "members": {
                "table_data_": 0,
                "num_rows_": 12,
                "column_offset_": 16
            }
        },
        "DexRegisterMap": {
            "size": "0x90",
            "members": {
                "count_": 0,
                "regs_small_": 4,
                "regs_large_": 132
            }
        },
        "IterationRange<art::BitTable<art::InlineInfo>::const_iterator>": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "OatMethod": {
            "size": "0x8",
            "members": {
                "begin_": 0,
                "code_offset_": 4
            }
        },
        "OatClass": {
            "size": "0x14",
            "members": {
                "oat_file_": 0,
                "status_": 4,
                "type_": 5,
                "num_methods_": 8,
                "bitmap_": 12,
                "methods_pointer_": 16
            }
        },
        "OatMethodOffsets": {
            "size": "0x4",
            "members": {
                "code_offset_": 0
            }
        },
        "ClassAccessor": {
            "size": "0x20",
            "members": {
                "dex_file_": 0,
                "class_def_index_": 4,
                "ptr_pos_": 8,
                "hiddenapi_ptr_pos_": 12,
                "num_static_fields_": 16,
                "num_instance_fields_": 20,
                "num_direct_methods_": 24,
                "num_virtual_methods_": 28
            }
        },
        "Method": {
            "size": "0x20",
            "members": {
                "is_static_or_direct_": 24,
                "code_off_": 28
            }
        },
        "BaseItem": {
            "size": "0x18",
            "members": {
                "dex_file_": 0,
                "ptr_pos_": 4,
                "hiddenapi_ptr_pos_": 8,
                "index_": 12,
                "access_flags_": 16,
                "hiddenapi_flags_": 20
            }
        },
        "DataIterator<art::ClassAccessor::Field>": {
            "size": "0x28",
            "members": {
                "data_": 0,
                "position_": 28,
                "partition_pos_": 32,
                "iterator_end_": 36
            }
        },
        "Field": {
            "size": "0x1c",
            "members": {
                "is_static_": 24
            }
        },
        "DataIterator<art::ClassAccessor::Method>": {
            "size": "0x2c",
            "members": {
                "data_": 0,
                "position_": 32,
                "partition_pos_": 36,
                "iterator_end_": 40
            }
        },
        "ClassIteratorData": {
            "size": "0x8",
            "members": {
                "dex_file_": 0,
                "class_def_idx_": 4
            }
        },
        "IterationRange<art::ClassAccessor::DataIterator<art::ClassAccessor::Field> >": {
            "size": "0x50",
            "members": {
                "first_": 0,
                "last_": 40
            }
        },
        "IterationRange<art::ClassAccessor::DataIterator<art::ClassAccessor::Method> >": {
            "size": "0x58",
            "members": {
                "first_": 0,
                "last_": 44
            }
        },
        "map<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData, std::less<art::jit::JitCodeCache::JniStubKey>, std::allocator<std::pair<const art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "map<const void *, art::ArtMethod *, std::less<const void *>, std::allocator<std::pair<const void *const, art::ArtMethod *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "map<art::ArtMethod *, const void *, std::less<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, const void *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "map<art::ArtMethod *, art::ProfilingInfo *, std::less<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, art::ProfilingInfo *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "set<art::ArtMethod *, std::less<art::ArtMethod *>, std::allocator<art::ArtMethod *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<art::gc::accounting::MemoryRangeBitmap<16>, std::default_delete<art::gc::accounting::MemoryRangeBitmap<16> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "array<art::DexRegisterLocation, 16>": {
            "size": "0x80",
            "members": {
                "__elems_": 0
            }
        },
        "array<unsigned int, 7>": {
            "size": "0x1c",
            "members": {
                "__elems_": 0
            }
        },
        "Storage<art::ArtMethod *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::ArtMethod *, art::ArtMethod *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<const art::dex::ClassDef *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<const art::dex::ClassDef *, const art::dex::ClassDef *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<const art::dex::MethodId *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<const art::dex::MethodId *, const art::dex::MethodId *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<char, char>": {
            "size": "0x2",
            "members": {
                "lhs": 0,
                "rhs": 1
            }
        },
        "TLSData": {
            "size": "0x4",
            "members": {
                "_vptr$TLSData": 0
            }
        },
        "UnwindHelper": {
            "size": "0xa4",
            "members": {
                "maps_": 4,
                "arch_": 72,
                "memory_": 76,
                "jit_": 84,
                "dex_": 88,
                "unwinder_": 92
            }
        },
        "BacktraceCollector": {
            "size": "0x10",
            "members": {
                "out_frames_": 0,
                "num_frames_": 4,
                "max_depth_": 8,
                "skip_count_": 12
            }
        },
        "SharedString": {
            "size": "0x8",
            "members": {
                "data_": 0
            }
        },
        "FrameData": {
            "size": "0x60",
            "members": {
                "num": 0,
                "rel_pc": 4,
                "pc": 12,
                "sp": 20,
                "function_name": 28,
                "function_offset": 36,
                "map_name": 44,
                "map_elf_start_offset": 52,
                "map_exact_offset": 60,
                "map_start": 68,
                "map_end": 76,
                "map_load_bias": 84,
                "map_flags": 92
            }
        },
        "MapInfo": {
            "size": "0x34",
            "members": {
                "start_": 0,
                "end_": 8,
                "offset_": 16,
                "flags_": 24,
                "name_": 28,
                "elf_fields_": 36,
                "prev_map_": 40,
                "prev_real_map_": 44,
                "next_real_map_": 48
            }
        },
        "ElfFields": {
            "size": "0x30",
            "members": {
                "elf_": 0,
                "elf_offset_": 8,
                "elf_start_offset_": 16,
                "load_bias_": 24,
                "build_id_": 32,
                "memory_backed_elf_": 36,
                "elf_mutex_": 40
            }
        },
        "shared_ptr<const std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<unwindstack::Memory>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<unwindstack::GlobalDebugInterface<unwindstack::Elf>, std::default_delete<unwindstack::GlobalDebugInterface<unwindstack::Elf> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<unwindstack::GlobalDebugInterface<unwindstack::DexFile>, std::default_delete<unwindstack::GlobalDebugInterface<unwindstack::DexFile> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<unwindstack::MapInfo, std::default_delete<unwindstack::MapInfo> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "shared_ptr<unwindstack::Elf>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<unwindstack::Regs, std::default_delete<unwindstack::Regs> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "Barrier": {
            "size": "0x14",
            "members": {
                "_vptr$Barrier": 0,
                "count_": 4,
                "lock_": 8,
                "condition_": 12,
                "verify_count_on_shutdown_": 16
            }
        },
        "unique_ptr<art::Mutex, std::default_delete<art::Mutex> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "ScopedExpectedMutexesOnWeakRefAccessLock": {
            "size": "0x4",
            "members": {
                "mutex_": 0
            }
        },
        "MemMapArena": {
            "size": "0x3c",
            "members": {
                "map_": 20
            }
        },
        "MemMapArenaPool": {
            "size": "0x14",
            "members": {
                "low_4gb_": 4,
                "name_": 8,
                "free_arenas_": 12,
                "lock_": 16
            }
        },
        "ArenaPool": {
            "size": "0x4",
            "members": {
                "_vptr$ArenaPool": 0
            }
        },
        "lock_guard<std::mutex>": {
            "size": "0x4",
            "members": {
                "__m_": 0
            }
        },
        "Mutex": {
            "size": "0x20",
            "members": {
                "state_and_contenders_": 12,
                "exclusive_owner_": 16,
                "recursion_count_": 20,
                "recursive_": 24,
                "enable_monitor_timeout_": 25,
                "monitor_id_": 28
            }
        },
        "BaseMutex": {
            "size": "0x10",
            "members": {
                "_vptr$BaseMutex": 0,
                "name_": 4,
                "contention_log_data_": 8,
                "level_": 8,
                "should_respond_to_empty_checkpoint_request_": 9
            }
        },
        "ContentionLogData": {
            "size": "0x60",
            "members": {
                "contention_log": 0,
                "cur_content_log_entry": 80,
                "contention_count": 84,
                "wait_time": 88
            }
        },
        "ContentionLogEntry": {
            "size": "0x14",
            "members": {
                "blocked_tid": 0,
                "owner_tid": 8,
                "count": 16
            }
        },
        "Closure": {
            "size": "0x4",
            "members": {
                "_vptr$Closure": 0
            }
        },
        "ReaderWriterMutex": {
            "size": "0x18",
            "members": {
                "state_": 12,
                "exclusive_owner_": 16,
                "num_contenders_": 20
            }
        },
        "DumpStackLastTimeTLSData": {
            "size": "0xc",
            "members": {
                "last_dump_time_ms_": 4
            }
        },
        "ScopedContentionRecorder": {
            "size": "0x1c",
            "members": {
                "mutex_": 0,
                "blocked_tid_": 4,
                "owner_tid_": 12,
                "start_nano_time_": 20
            }
        },
        "ScopedObjectAccessUnchecked": {
            "size": "0x1c",
            "members": {
                "tsc_": 12
            }
        },
        "ScopedThreadStateChange": {
            "size": "0x10",
            "members": {
                "self_": 0,
                "thread_state_": 4,
                "old_thread_state_": 8,
                "expected_has_no_thread_": 12
            }
        },
        "ScopedTransitioningToRunnable": {
            "size": "0x4",
            "members": {
                "self_": 0
            }
        },
        "Storage<int>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<int, int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<unsigned short>": {
            "size": "0x2",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<unsigned short, art::ThreadState>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::ThreadState>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >": {
            "size": "0x34",
            "members": {
                "__str_": 32,
                "__hm_": 44,
                "__mode_": 48
            }
        },
        "fpos<mbstate_t>": {
            "size": "0xc",
            "members": {
                "__st_": 0,
                "__off_": 4
            }
        },
        "basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >": {
            "size": "0x88",
            "members": {
                "__sb_": 4
            }
        },
        "timespec": {
            "size": "0x8",
            "members": {
                "tv_sec": 0,
                "tv_nsec": 4
            }
        },
        "CollectStackTrace": {
            "size": "0x8c",
            "members": {
                "oss": 4
            }
        },
        "Timing": {
            "size": "0xc",
            "members": {
                "time_": 0,
                "name_": 8
            }
        },
        "CumulativeLogger": {
            "size": "0x34",
            "members": {
                "cumulative_timers_": 0,
                "name_": 12,
                "lock_name_": 24,
                "lock_": 36,
                "iterations_": 40,
                "total_time_": 44
            }
        },
        "CumulativeTime": {
            "size": "0xc",
            "members": {
                "name_": 0,
                "time_": 4
            }
        },
        "move_iterator<art::CumulativeLogger::CumulativeTime *>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "EagerEvaluator<unsigned long long, unsigned long long>": {
            "size": "0x10",
            "members": {
                "lhs": 0,
                "rhs": 8
            }
        },
        "ClassHierarchyAnalysis": {
            "size": "0x14",
            "members": {
                "cha_dependency_map_": 0
            }
        },
        "LinearAlloc": {
            "size": "0x38",
            "members": {
                "lock_": 0,
                "allocator_": 32
            }
        },
        "ArenaAllocator": {
            "size": "0x14",
            "members": {
                "pool_": 0,
                "begin_": 4,
                "end_": 8,
                "ptr_": 12,
                "arena_head_": 16
            }
        },
        "ArenaAllocatorAdapter<void>": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "CHACheckpoint": {
            "size": "0x1c",
            "members": {
                "barrier_": 4,
                "method_headers_": 24
            }
        },
        "CHAStackVisitor": {
            "size": "0x130",
            "members": {
                "method_headers_": 300
            }
        },
        "unordered_map<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > >, std::hash<art::ArtMethod *>, std::equal_to<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > > > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<art::ArtMethod *, art::OatQuickMethodHeader *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::ArtMethod *const, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_map_iterator<std::__hash_iterator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, std::vector<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *>, std::allocator<std::pair<art::ArtMethod *, art::OatQuickMethodHeader *> > > >, void *> *> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unordered_set<art::OatQuickMethodHeader *, std::hash<art::OatQuickMethodHeader *>, std::equal_to<art::OatQuickMethodHeader *>, std::allocator<art::OatQuickMethodHeader *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<art::OatQuickMethodHeader *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<art::OatQuickMethodHeader *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<art::OatQuickMethodHeader *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<art::OatQuickMethodHeader *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<art::OatQuickMethodHeader *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<art::OatQuickMethodHeader *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<art::ArtMethod *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<art::ArtMethod *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<art::ArtMethod *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<art::ArtMethod *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "InitializeClassVisitor": {
            "size": "0x4",
            "members": {
                "class_size_": 0
            }
        },
        "ArrayIter<art::mirror::DexCache, art::ObjPtr<art::mirror::ObjectArray<art::mirror::DexCache> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "idx_": 4
            }
        },
        "ArrayIter<art::mirror::DexCache, art::Handle<art::mirror::ObjectArray<art::mirror::DexCache> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "idx_": 4
            }
        },
        "ArrayIter<art::mirror::Object, art::Handle<art::mirror::ObjectArray<art::mirror::Object> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "idx_": 4
            }
        },
        "StackTraceElement": {
            "size": "0x18",
            "members": {
                "declaring_class_": 8,
                "file_name_": 12,
                "method_name_": 16,
                "line_number_": 20
            }
        },
        "ArrayIter<art::mirror::ClassLoader, art::Handle<art::mirror::ObjectArray<art::mirror::ClassLoader> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "idx_": 4
            }
        },
        "Reference": {
            "size": "0x18",
            "members": {
                "pending_next_": 8,
                "queue_": 12,
                "queue_next_": 16,
                "referent_": 20
            }
        },
        "HeapReference<art::mirror::Reference>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ArrayIter<art::mirror::Method, art::Handle<art::mirror::ObjectArray<art::mirror::Method> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "idx_": 4
            }
        },
        "HeapReference<art::mirror::Method>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "MethodHandlesLookup": {
            "size": "0x10",
            "members": {
                "lookup_class_": 8,
                "allowed_modes_": 12
            }
        },
        "Proxy": {
            "size": "0xc",
            "members": {
                "h_": 8
            }
        },
        "NativeDexCachePair<art::ArtField>": {
            "size": "0x8",
            "members": {
                "object": 0,
                "index": 4
            }
        },
        "NativeDexCachePair<art::ArtMethod>": {
            "size": "0x8",
            "members": {
                "object": 0,
                "index": 4
            }
        },
        "MethodHandleImpl": {
            "size": "0x24",
            "members": {
                "info_": 32
            }
        },
        "ClassLinker": {
            "size": "0x150",
            "members": {
                "_vptr$ClassLinker": 0,
                "boot_class_path_": 4,
                "boot_dex_files_": 16,
                "dex_caches_": 28,
                "class_loaders_": 40,
                "boot_class_table_": 52,
                "new_class_roots_": 56,
                "new_bss_roots_boot_oat_files_": 68,
                "failed_dex_cache_class_lookups_": 80,
                "class_roots_": 84,
                "object_virtual_method_hashes_": 88,
                "find_array_class_cache_": 132,
                "find_array_class_cache_next_victim_": 196,
                "init_done_": 200,
                "log_new_roots_": 201,
                "intern_table_": 204,
                "fast_class_not_found_exceptions_": 208,
                "jni_dlsym_lookup_trampoline_": 212,
                "jni_dlsym_lookup_critical_trampoline_": 216,
                "quick_resolution_trampoline_": 220,
                "quick_imt_conflict_trampoline_": 224,
                "quick_generic_jni_trampoline_": 228,
                "quick_to_interpreter_bridge_trampoline_": 232,
                "nterp_trampoline_": 236,
                "image_pointer_size_": 240,
                "visibly_initialized_callback_lock_": 248,
                "visibly_initialized_callback_": 280,
                "running_visibly_initialized_callbacks_": 284,
                "critical_native_code_with_clinit_check_lock_": 288,
                "critical_native_code_with_clinit_check_": 320,
                "cha_": 332
            }
        },
        "DexCacheData": {
            "size": "0xc",
            "members": {
                "weak_root": 0,
                "dex_file": 4,
                "class_table": 8
            }
        },
        "ClassLoaderData": {
            "size": "0xc",
            "members": {
                "weak_root": 0,
                "class_table": 4,
                "allocator": 8
            }
        },
        "VisiblyInitializedCallback": {
            "size": "0x58",
            "members": {
                "class_linker_": 8,
                "num_classes_": 12,
                "classes_": 16,
                "thread_visibility_counter_": 80,
                "barriers_": 84
            }
        },
        "MethodTranslation": {
            "size": "0x8",
            "members": {
                "translation_": 0,
                "type_": 4
            }
        },
        "FieldTypeOrderAndIndex": {
            "size": "0x4",
            "members": {
                "field_type_order": 0,
                "field_index": 2
            }
        },
        "FieldGaps": {
            "size": "0xc",
            "members": {
                "gap4_offset_": 0,
                "gap2_offset_": 4,
                "gap1_offset_": 8
            }
        },
        "LinkInterfaceMethodsHelper": {
            "size": "0xa4",
            "members": {
                "class_linker_": 0,
                "klass_": 4,
                "method_alignment_": 8,
                "method_size_": 12,
                "self_": 16,
                "stack_": 20,
                "allocator_": 40,
                "default_conflict_methods_": 56,
                "overriding_default_conflict_methods_": 72,
                "miranda_methods_": 88,
                "default_methods_": 104,
                "overriding_default_methods_": 120,
                "move_table_": 136
            }
        },
        "FindVirtualMethodHolderVisitor": {
            "size": "0x10",
            "members": {
                "holder_": 4,
                "method_": 8,
                "pointer_size_": 12
            }
        },
        "ClassTable": {
            "size": "0x40",
            "members": {
                "lock_": 0,
                "classes_": 24,
                "strong_roots_": 36,
                "oat_files_": 48
            }
        },
        "TableSlot": {
            "size": "0x4",
            "members": {
                "data_": 0
            }
        },
        "HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHash, art::ClassTable::ClassDescriptorEquals, std::allocator<art::ClassTable::TableSlot> >": {
            "size": "0x28",
            "members": {
                "allocfn_": 0,
                "hashfn_": 1,
                "emptyfn_": 2,
                "pred_": 3,
                "num_elements_": 4,
                "num_buckets_": 8,
                "elements_until_expand_": 12,
                "owns_data_": 16,
                "data_": 20,
                "min_load_factor_": 24,
                "max_load_factor_": 32
            }
        },
        "RootInfo": {
            "size": "0xc",
            "members": {
                "_vptr$RootInfo": 0,
                "type_": 4,
                "thread_id_": 8
            }
        },
        "JavaVMExt": {
            "size": "0xd8",
            "members": {
                "runtime_": 4,
                "check_jni_abort_hook_": 8,
                "check_jni_abort_hook_data_": 12,
                "check_jni_": 16,
                "force_copy_": 17,
                "tracing_enabled_": 18,
                "trace_": 20,
                "globals_": 32,
                "libraries_": 100,
                "unchecked_functions_": 104,
                "weak_globals_": 108,
                "allow_accessing_weak_globals_": 176,
                "weak_globals_add_condition_": 180,
                "env_hooks_": 196,
                "enable_allocation_tracking_delta_": 208,
                "allocation_tracking_enabled_": 212,
                "old_allocation_tracking_state_": 213
            }
        },
        "HeapBitmap": {
            "size": "0x1c",
            "members": {
                "heap_": 0,
                "continuous_space_bitmaps_": 4,
                "large_object_bitmaps_": 16
            }
        },
        "ScopedGCCriticalSection": {
            "size": "0xc",
            "members": {
                "critical_section_": 0,
                "old_no_suspend_reason_": 8
            }
        },
        "GCCriticalSection": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "section_name_": 4
            }
        },
        "InternTable": {
            "size": "0x3c",
            "members": {
                "log_new_roots_": 0,
                "weak_intern_condition_": 4,
                "strong_interns_": 20,
                "new_strong_intern_roots_": 32,
                "weak_interns_": 44,
                "weak_root_state_": 56
            }
        },
        "Table": {
            "size": "0xc",
            "members": {
                "tables_": 0
            }
        },
        "InternalTable": {
            "size": "0x2c",
            "members": {
                "set_": 0,
                "is_boot_image_": 40
            }
        },
        "Utf8String": {
            "size": "0xc",
            "members": {
                "hash_": 0,
                "utf16_length_": 4,
                "utf8_data_": 8
            }
        },
        "HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHash, art::InternTable::StringEquals, std::allocator<art::GcRoot<art::mirror::String> > >": {
            "size": "0x28",
            "members": {
                "allocfn_": 0,
                "hashfn_": 1,
                "emptyfn_": 2,
                "pred_": 3,
                "num_elements_": 4,
                "num_buckets_": 8,
                "elements_until_expand_": 12,
                "owns_data_": 16,
                "data_": 20,
                "min_load_factor_": 24,
                "max_load_factor_": 32
            }
        },
        "HashSetIterator<art::GcRoot<art::mirror::String>, art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHash, art::InternTable::StringEquals, std::allocator<art::GcRoot<art::mirror::String> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "HashSetIterator<const art::GcRoot<art::mirror::String>, const art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHash, art::InternTable::StringEquals, std::allocator<art::GcRoot<art::mirror::String> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "StackHandleScope<5>": {
            "size": "0x24",
            "members": {
                "self_": 32
            }
        },
        "FixedSizeHandleScope<5>": {
            "size": "0x20",
            "members": {
                "storage_": 8,
                "pos_": 28
            }
        },
        "VerifierDeps": {
            "size": "0x10",
            "members": {
                "dex_deps_": 0,
                "output_only_": 12
            }
        },
        "DexFileDeps": {
            "size": "0x24",
            "members": {
                "strings_": 0,
                "assignable_types_": 12,
                "verified_classes_": 24
            }
        },
        "OatFileManager": {
            "size": "0x14",
            "members": {
                "oat_files_": 0,
                "only_use_system_oat_files_": 12,
                "verification_thread_pool_": 16
            }
        },
        "ApiList": {
            "size": "0x4",
            "members": {
                "dex_flags_": 0
            }
        },
        "AccessContext": {
            "size": "0xc",
            "members": {
                "klass_": 0,
                "dex_file_": 4,
                "domain_": 8
            }
        },
        "RuntimeCallbacks": {
            "size": "0x88",
            "members": {
                "callback_lock_": 0,
                "thread_callbacks_": 4,
                "class_callbacks_": 16,
                "sigquit_callbacks_": 28,
                "phase_callbacks_": 40,
                "method_callbacks_": 52,
                "monitor_callbacks_": 64,
                "park_callbacks_": 76,
                "method_inspection_callbacks_": 88,
                "ddm_callbacks_": 100,
                "debugger_control_callbacks_": 112,
                "reflective_value_visit_callbacks_": 124
            }
        },
        "MethodHandleItem": {
            "size": "0x8",
            "members": {
                "method_handle_type_": 0,
                "reserved1_": 2,
                "field_or_method_idx_": 4,
                "reserved2_": 6
            }
        },
        "AutoTimer<art::metrics::MetricsCounter<art::metrics::DatumId::kClassLoadingTotalTime, unsigned long long> >": {
            "size": "0x10",
            "members": {
                "running_": 0,
                "start_time_microseconds_": 4,
                "metric_": 12
            }
        },
        "Handle<art::mirror::Array>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::MethodType>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::DexCache> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "IterationRange<art::mirror::ArrayIter<art::mirror::DexCache, art::ObjPtr<art::mirror::ObjectArray<art::mirror::DexCache> > > >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "IterationRange<art::mirror::ArrayIter<art::mirror::DexCache, art::Handle<art::mirror::ObjectArray<art::mirror::DexCache> > > >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::Object> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "IterationRange<art::mirror::ArrayIter<art::mirror::Object, art::Handle<art::mirror::ObjectArray<art::mirror::Object> > > >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::ObjectArray<art::mirror::Class> > >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HashSetIterator<art::ClassTable::TableSlot, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHash, art::ClassTable::ClassDescriptorEquals, std::allocator<art::ClassTable::TableSlot> > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "IntrusiveForwardListHook": {
            "size": "0x4",
            "members": {
                "next_hook": 0
            }
        },
        "IntrusiveForwardList<art::ClassLinker::VisiblyInitializedCallback, art::IntrusiveForwardListBaseHookTraits<art::ClassLinker::VisiblyInitializedCallback, void> >": {
            "size": "0x4",
            "members": {
                "first_": 0
            }
        },
        "IntrusiveForwardListIterator<art::ClassLinker::VisiblyInitializedCallback, art::IntrusiveForwardListBaseHookTraits<art::ClassLinker::VisiblyInitializedCallback, void> >": {
            "size": "0x4",
            "members": {
                "hook_": 0
            }
        },
        "IntrusiveForwardListIterator<const art::ClassLinker::VisiblyInitializedCallback, art::IntrusiveForwardListBaseHookTraits<art::ClassLinker::VisiblyInitializedCallback, void> >": {
            "size": "0x4",
            "members": {
                "hook_": 0
            }
        },
        "ClassVisitor": {
            "size": "0x4",
            "members": {
                "_vptr$ClassVisitor": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::StackTraceElement> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::ClassLoader> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::ClassLoader> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "IterationRange<art::mirror::ArrayIter<art::mirror::ClassLoader, art::Handle<art::mirror::ObjectArray<art::mirror::ClassLoader> > > >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "ClassLoaderVisitor": {
            "size": "0x4",
            "members": {
                "_vptr$ClassLoaderVisitor": 0
            }
        },
        "HashSet<std::pair<unsigned int, art::ClassLinker::MethodTranslation>, art::DefaultMapEmptyFn<unsigned int, art::ClassLinker::MethodTranslation>, art::HashMapHashWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::hash<unsigned int> >, art::HashMapPredWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::equal_to<unsigned int> >, std::allocator<std::pair<unsigned int, art::ClassLinker::MethodTranslation> > >": {
            "size": "0x28",
            "members": {
                "allocfn_": 0,
                "hashfn_": 1,
                "emptyfn_": 2,
                "pred_": 3,
                "num_elements_": 4,
                "num_buckets_": 8,
                "elements_until_expand_": 12,
                "owns_data_": 16,
                "data_": 20,
                "min_load_factor_": 24,
                "max_load_factor_": 32
            }
        },
        "HashSetIterator<std::pair<unsigned int, art::ClassLinker::MethodTranslation>, art::HashSet<std::pair<unsigned int, art::ClassLinker::MethodTranslation>, art::DefaultMapEmptyFn<unsigned int, art::ClassLinker::MethodTranslation>, art::HashMapHashWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::hash<unsigned int> >, art::HashMapPredWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::equal_to<unsigned int> >, std::allocator<std::pair<unsigned int, art::ClassLinker::MethodTranslation> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "HashSetIterator<const std::pair<unsigned int, art::ClassLinker::MethodTranslation>, const art::HashSet<std::pair<unsigned int, art::ClassLinker::MethodTranslation>, art::DefaultMapEmptyFn<unsigned int, art::ClassLinker::MethodTranslation>, art::HashMapHashWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::hash<unsigned int> >, art::HashMapPredWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::equal_to<unsigned int> >, std::allocator<std::pair<unsigned int, art::ClassLinker::MethodTranslation> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "Handle<art::mirror::IfTable>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "LinkVirtualHashTable": {
            "size": "0x10",
            "members": {
                "klass_": 0,
                "hash_size_": 4,
                "hash_table_": 8,
                "image_pointer_size_": 12
            }
        },
        "MethodNameAndSignatureComparator": {
            "size": "0x10",
            "members": {
                "dex_file_": 0,
                "mid_": 4,
                "name_": 8,
                "name_len_": 12
            }
        },
        "ImageHeader": {
            "size": "0xf8",
            "members": {
                "magic_": 0,
                "version_": 4,
                "image_reservation_size_": 8,
                "component_count_": 12,
                "image_begin_": 16,
                "image_size_": 20,
                "image_checksum_": 24,
                "oat_checksum_": 28,
                "oat_file_begin_": 32,
                "oat_data_begin_": 36,
                "oat_data_end_": 40,
                "oat_file_end_": 44,
                "boot_image_begin_": 48,
                "boot_image_size_": 52,
                "boot_image_component_count_": 56,
                "boot_image_checksum_": 60,
                "image_roots_": 64,
                "pointer_size_": 68,
                "sections_": 72,
                "image_methods_": 160,
                "data_size_": 232,
                "blocks_offset_": 236,
                "blocks_count_": 240
            }
        },
        "Block": {
            "size": "0x14",
            "members": {
                "storage_mode_": 0,
                "data_offset_": 4,
                "data_size_": 8,
                "image_offset_": 12,
                "image_size_": 16
            }
        },
        "ImageSection": {
            "size": "0x8",
            "members": {
                "offset_": 0,
                "size_": 4
            }
        },
        "IterationRange<const art::ImageHeader::Block *>": {
            "size": "0x8",
            "members": {
                "first_": 0,
                "last_": 4
            }
        },
        "EncodedArrayValueIterator": {
            "size": "0x1c",
            "members": {
                "dex_file_": 0,
                "array_size_": 4,
                "pos_": 8,
                "ptr_": 12,
                "type_": 16,
                "jval_": 20
            }
        },
        "ArrayRef<unsigned int>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<art::ClassLinker::LinkFieldsHelper::FieldTypeOrderAndIndex>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArenaStack": {
            "size": "0x14",
            "members": {
                "stats_and_pool_": 0,
                "bottom_arena_": 4,
                "top_arena_": 8,
                "top_ptr_": 12,
                "top_end_": 16
            }
        },
        "StatsAndPool": {
            "size": "0x4",
            "members": {
                "pool": 0
            }
        },
        "ScopedArenaAllocatorAdapter<art::ArtMethod *>": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocator": {
            "size": "0x10",
            "members": {
                "arena_stack_": 0,
                "mark_arena_": 4,
                "mark_ptr_": 8,
                "mark_end_": 12
            }
        },
        "ScopedArenaAllocatorAdapter<void>": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> *> *>": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ObjPtr<art::mirror::Reference>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::Method> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::Method> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "IterationRange<art::mirror::ArrayIter<art::mirror::Method, art::Handle<art::mirror::ObjectArray<art::mirror::Method> > > >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "CountIter": {
            "size": "0x4",
            "members": {
                "count_": 0
            }
        },
        "Handle<art::mirror::PointerArray>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::MethodHandlesLookup>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::MethodHandlesLookup>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<long long> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HashSet<art::mirror::Class *, art::DefaultEmptyFn<art::mirror::Class *>, std::hash<art::mirror::Class *>, std::equal_to<art::mirror::Class *>, std::allocator<art::mirror::Class *> >": {
            "size": "0x28",
            "members": {
                "allocfn_": 0,
                "hashfn_": 1,
                "emptyfn_": 2,
                "pred_": 3,
                "num_elements_": 4,
                "num_buckets_": 8,
                "elements_until_expand_": 12,
                "owns_data_": 16,
                "data_": 20,
                "min_load_factor_": 24,
                "max_load_factor_": 32
            }
        },
        "HashSetIterator<art::mirror::Class *, art::HashSet<art::mirror::Class *, art::DefaultEmptyFn<art::mirror::Class *>, std::hash<art::mirror::Class *>, std::equal_to<art::mirror::Class *>, std::allocator<art::mirror::Class *> > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "HashSetIterator<art::mirror::Class *const, const art::HashSet<art::mirror::Class *, art::DefaultEmptyFn<art::mirror::Class *>, std::hash<art::mirror::Class *>, std::equal_to<art::mirror::Class *>, std::allocator<art::mirror::Class *> > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "ScopedThreadSuspension": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "suspended_state_": 4
            }
        },
        "ScopedNullHandle<art::mirror::ClassLoader>": {
            "size": "0x8",
            "members": {
                "null_ref_": 4
            }
        },
        "StackHandleScope<64>": {
            "size": "0x110",
            "members": {
                "self_": 268
            }
        },
        "FixedSizeHandleScope<64>": {
            "size": "0x10c",
            "members": {
                "storage_": 8,
                "pos_": 264
            }
        },
        "WriterMutexLock": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "mu_": 4
            }
        },
        "StackHandleScope<3>": {
            "size": "0x1c",
            "members": {
                "self_": 24
            }
        },
        "FixedSizeHandleScope<3>": {
            "size": "0x18",
            "members": {
                "storage_": 8,
                "pos_": 20
            }
        },
        "ArrayRef<art::GcRoot<art::mirror::Object> >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "CountInternedStringReferencesVisitor": {
            "size": "0xc",
            "members": {
                "space_": 0,
                "image_interns_": 4,
                "count_": 8
            }
        },
        "OatDexFile": {
            "size": "0x54",
            "members": {
                "oat_file_": 0,
                "dex_file_location_": 4,
                "canonical_dex_file_location_": 16,
                "dex_file_location_checksum_": 28,
                "dex_file_pointer_": 32,
                "lookup_table_data_": 36,
                "method_bss_mapping_": 40,
                "type_bss_mapping_": 44,
                "public_type_bss_mapping_": 48,
                "package_type_bss_mapping_": 52,
                "string_bss_mapping_": 56,
                "oat_class_offsets_pointer_": 60,
                "lookup_table_": 64,
                "dex_layout_sections_": 80
            }
        },
        "TypeLookupTable": {
            "size": "0x10",
            "members": {
                "dex_data_begin_": 0,
                "mask_bits_": 4,
                "entries_": 8,
                "owned_entries_": 12
            }
        },
        "DexLayoutSections": {
            "size": "0x50",
            "members": {
                "sections_": 0
            }
        },
        "DexLayoutSection": {
            "size": "0x28",
            "members": {
                "parts_": 0
            }
        },
        "Subsection": {
            "size": "0x8",
            "members": {
                "start_offset_": 0,
                "end_offset_": 4
            }
        },
        "SafeMap<art::mirror::String *, art::mirror::String *, std::less<art::mirror::String *>, std::allocator<std::pair<art::mirror::String *const, art::mirror::String *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "UnbufferedRootVisitor": {
            "size": "0x10",
            "members": {
                "visitor_": 0,
                "root_info_": 4
            }
        },
        "ReaderMutexLock": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "mu_": 4
            }
        },
        "VisitClassLoaderClassesVisitor": {
            "size": "0xc",
            "members": {
                "visitor_": 4,
                "done_": 8
            }
        },
        "DefiningClassLoaderFilterVisitor": {
            "size": "0xc",
            "members": {
                "defining_class_loader_": 4,
                "visitor_": 8
            }
        },
        "CountClassesVisitor": {
            "size": "0xc",
            "members": {
                "num_zygote_classes": 4,
                "num_non_zygote_classes": 8
            }
        },
        "GetClassInToObjectArray": {
            "size": "0xc",
            "members": {
                "arr_": 4,
                "index_": 8
            }
        },
        "CHAOnDeleteUpdateClassVisitor": {
            "size": "0x10",
            "members": {
                "allocator_": 0,
                "cha_": 4,
                "pointer_size_": 8,
                "self_": 12
            }
        },
        "ScopedDefiningClass": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "returned_": 4
            }
        },
        "ScopedNullHandle<art::mirror::Class>": {
            "size": "0x8",
            "members": {
                "null_ref_": 4
            }
        },
        "ScopedTraceMessageHelper": {
            "size": "0x88",
            "members": {
                "buffer_": 0
            }
        },
        "RuntimeEncodedStaticFieldValueIterator": {
            "size": "0x28",
            "members": {
                "dex_cache_": 28,
                "class_loader_": 32,
                "linker_": 36
            }
        },
        "LookupClassesVisitor": {
            "size": "0x10",
            "members": {
                "descriptor_": 4,
                "hash_": 8,
                "result_": 12
            }
        },
        "VdexFile": {
            "size": "0x28",
            "members": {
                "mmap_": 0
            }
        },
        "VdexSectionHeader": {
            "size": "0xc",
            "members": {
                "section_kind": 0,
                "section_offset": 4,
                "section_size": 8
            }
        },
        "VdexFileHeader": {
            "size": "0xc",
            "members": {
                "magic_": 0,
                "vdex_version_": 4,
                "number_of_sections_": 8
            }
        },
        "StackHandleScope<12>": {
            "size": "0x40",
            "members": {
                "self_": 60
            }
        },
        "ZipLeftIter<art::mirror::ArrayIter<art::mirror::Method, art::Handle<art::mirror::ObjectArray<art::mirror::Method> > >, art::CountIter>": {
            "size": "0xc",
            "members": {
                "left_iter_": 0,
                "right_iter_": 8
            }
        },
        "IterationRange<std::__wrap_iter<unsigned int *> >": {
            "size": "0x8",
            "members": {
                "first_": 0,
                "last_": 4
            }
        },
        "ZipLeftIter<std::__wrap_iter<unsigned int *>, art::CountIter>": {
            "size": "0x8",
            "members": {
                "left_iter_": 0,
                "right_iter_": 4
            }
        },
        "ScopedArenaAllocatorAdapter<std::pair<art::ArtMethod *const, art::ArtMethod *> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedNullHandle<art::mirror::PointerArray>": {
            "size": "0x8",
            "members": {
                "null_ref_": 4
            }
        },
        "FixedSizeHandleScope<4>": {
            "size": "0x1c",
            "members": {
                "storage_": 8,
                "pos_": 24
            }
        },
        "StackHandleScope<4>": {
            "size": "0x20",
            "members": {
                "self_": 28
            }
        },
        "DexFileParameterIterator": {
            "size": "0x10",
            "members": {
                "dex_file_": 0,
                "type_list_": 4,
                "size_": 8,
                "pos_": 12
            }
        },
        "ObjPtr<art::mirror::MethodHandleImpl>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ReflectionSourceInfo": {
            "size": "0x8",
            "members": {
                "_vptr$ReflectionSourceInfo": 0,
                "type_": 4
            }
        },
        "ScopedAssertNoNewTransactionRecords": {
            "size": "0x4",
            "members": {
                "transaction_": 0
            }
        },
        "IterationRange<art::ZipLeftIter<art::mirror::ArrayIter<art::mirror::Method, art::Handle<art::mirror::ObjectArray<art::mirror::Method> > >, art::CountIter> >": {
            "size": "0x18",
            "members": {
                "first_": 0,
                "last_": 12
            }
        },
        "IterationRange<art::ZipLeftIter<std::__wrap_iter<unsigned int *>, art::CountIter> >": {
            "size": "0x10",
            "members": {
                "first_": 0,
                "last_": 8
            }
        },
        "set<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, std::less<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> > >, std::allocator<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "unique_ptr<art::Libraries, std::default_delete<art::Libraries> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "map<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> >, std::less<const art::DexFile *>, std::allocator<std::pair<const art::DexFile *const, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "vector<bool, std::allocator<bool> >": {
            "size": "0xc",
            "members": {
                "__begin_": 0,
                "__size_": 4,
                "__cap_alloc_": 8
            }
        },
        "set<art::verifier::VerifierDeps::TypeAssignability, std::less<art::verifier::VerifierDeps::TypeAssignability>, std::allocator<art::verifier::VerifierDeps::TypeAssignability> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "tuple<art::dex::StringIndex, art::dex::StringIndex>": {
            "size": "0x8",
            "members": {
                "__base_": 0
            }
        },
        "pair<const char *, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__list_node<art::ClassLinker::DexCacheData, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::ClassLinker::DexCacheData, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__list_node<art::ClassLinker::ClassLoaderData, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::ClassLinker::ClassLoaderData, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::ClassTable, std::default_delete<art::ClassTable> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::ClassLinker::VisiblyInitializedCallback, std::default_delete<art::ClassLinker::VisiblyInitializedCallback> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "map<art::ArtMethod *, void *, std::less<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, void *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<art::ArtMethod *const, void *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::ArtMethod *, void *>, std::__tree_node<std::__value_type<art::ArtMethod *, void *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::ArtMethod *, void *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::ArtMethod *, void *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::ArtMethod *, void *>, std::__tree_node<std::__value_type<art::ArtMethod *, void *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::ClassHierarchyAnalysis, std::default_delete<art::ClassHierarchyAnalysis> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<unsigned int, art::ClassLinker::MethodTranslation>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::HashSetIterator<std::pair<unsigned int, art::ClassLinker::MethodTranslation>, art::HashSet<std::pair<unsigned int, art::ClassLinker::MethodTranslation>, art::DefaultMapEmptyFn<unsigned int, art::ClassLinker::MethodTranslation>, art::HashMapHashWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::hash<unsigned int> >, art::HashMapPredWrapper<unsigned int, art::ClassLinker::MethodTranslation, std::equal_to<unsigned int> >, std::allocator<std::pair<unsigned int, art::ClassLinker::MethodTranslation> > > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "move_iterator<std::__wrap_iter<std::unique_ptr<const art::DexFile, std::default_delete<const art::DexFile> > *> >": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "map<art::mirror::String *, art::mirror::String *, std::less<art::mirror::String *>, std::allocator<std::pair<art::mirror::String *const, art::mirror::String *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<art::mirror::String *const, art::mirror::String *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::mirror::String *, art::mirror::String *>, std::__tree_node<std::__value_type<art::mirror::String *, art::mirror::String *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::mirror::String *, art::mirror::String *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::mirror::String *, art::mirror::String *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::mirror::String *, art::mirror::String *>, std::__tree_node<std::__value_type<art::mirror::String *, art::mirror::String *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::ArtMethod *const, art::ArtMethod *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> *> *[], std::__bucket_list_deallocator<art::ScopedArenaAllocatorAdapter<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> *> *> > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *>, std::__hash_node_destructor<art::ScopedArenaAllocatorAdapter<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "move_iterator<art::InternTable::Table::InternalTable *>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "pair<unsigned int, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "tuple<(lambda at art/runtime/hidden_api.h:509:43) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/hidden_api.h:509:43)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/hidden_api.h:509:43) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/hidden_api.h:509:43)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "pair<art::HashSetIterator<art::mirror::Class *, art::HashSet<art::mirror::Class *, art::DefaultEmptyFn<art::mirror::Class *>, std::hash<art::mirror::Class *>, std::equal_to<art::mirror::Class *>, std::allocator<art::mirror::Class *> > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "type": {
            "size": "0x10",
            "members": {
                "__lx": 0
            }
        },
        "function<art::hiddenapi::AccessContext ()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "unique_ptr<art::TypeLookupTable::Entry [], std::default_delete<art::TypeLookupTable::Entry []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const art::DexFile *, const art::dex::ClassDef *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::VdexFile, std::default_delete<art::VdexFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<art::ObjPtr<art::mirror::Method>, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<unsigned int [], std::default_delete<unsigned int []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unordered_map<art::ArtMethod *, art::ArtMethod *, std::hash<art::ArtMethod *>, std::equal_to<art::ArtMethod *>, art::ScopedArenaAllocatorAdapter<std::pair<art::ArtMethod *const, art::ArtMethod *> > >": {
            "size": "0x1c",
            "members": {
                "__table_": 0
            }
        },
        "pair<std::__hash_map_iterator<std::__hash_iterator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, art::ArtMethod *>, void *> *> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/hidden_api.h:509:43), std::allocator<(lambda at art/runtime/hidden_api.h:509:43)>, art::hiddenapi::AccessContext ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/hidden_api.h:509:43), std::allocator<(lambda at art/runtime/hidden_api.h:509:43)>, art::hiddenapi::AccessContext ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "initializer_list<bool>": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<art::dchecked_vector<art::ArtMethod *, art::ScopedArenaAllocatorAdapter<art::ArtMethod *> > *>": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<art::dchecked_vector<art::ArtMethod *, art::ScopedArenaAllocatorAdapter<art::ArtMethod *> > >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "JNIInvokeInterface": {
            "size": "0x20",
            "members": {
                "reserved0": 0,
                "reserved1": 4,
                "reserved2": 8,
                "DestroyJavaVM": 12,
                "AttachCurrentThread": 16,
                "DetachCurrentThread": 20,
                "GetEnv": 24,
                "AttachCurrentThreadAsDaemon": 28
            }
        },
        "Storage<art::ObjPtr<art::mirror::Class> >": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::mirror::Class *, art::ObjPtr<art::mirror::Class> >": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::mirror::Class *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "Storage<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0xc",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x18",
            "members": {
                "lhs": 0,
                "rhs": 12
            }
        },
        "EagerEvaluator<art::ObjPtr<art::mirror::Class>, art::mirror::Class *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<const art::DexFile *, const art::DexFile *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<const art::DexFile *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::ClassStatus, art::ClassStatus>": {
            "size": "0x2",
            "members": {
                "lhs": 0,
                "rhs": 1
            }
        },
        "EagerEvaluator<art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::DexCache> >": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::ObjPtr<art::mirror::DexCache> >": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::mirror::Class *, art::mirror::Class *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<bool, bool>": {
            "size": "0x2",
            "members": {
                "lhs": 0,
                "rhs": 1
            }
        },
        "ScopedLocalRef<_jobject *>": {
            "size": "0x8",
            "members": {
                "mEnv": 0,
                "mLocalRef": 4
            }
        },
        "ScopedLocalRef<_jthrowable *>": {
            "size": "0x8",
            "members": {
                "mEnv": 0,
                "mLocalRef": 4
            }
        },
        "OatHeader": {
            "size": "0x40",
            "members": {
                "magic_": 0,
                "version_": 4,
                "oat_checksum_": 8,
                "instruction_set_": 12,
                "instruction_set_features_bitmap_": 16,
                "dex_file_count_": 20,
                "oat_dex_files_offset_": 24,
                "executable_offset_": 28,
                "jni_dlsym_lookup_trampoline_offset_": 32,
                "jni_dlsym_lookup_critical_trampoline_offset_": 36,
                "quick_generic_jni_trampoline_offset_": 40,
                "quick_imt_conflict_trampoline_offset_": 44,
                "quick_resolution_trampoline_offset_": 48,
                "quick_to_interpreter_bridge_offset_": 52,
                "nterp_trampoline_offset_": 56,
                "key_value_store_size_": 60,
                "key_value_store_": 64
            }
        },
        "array<unsigned char, 4>": {
            "size": "0x4",
            "members": {
                "__elems_": 0
            }
        },
        "ImageSpace": {
            "size": "0xac",
            "members": {
                "live_bitmap_": 72,
                "oat_file_": 140,
                "oat_file_non_owned_": 144,
                "image_location_": 148,
                "profile_file_": 160
            }
        },
        "ClassLoaderContext": {
            "size": "0xc",
            "members": {
                "class_loader_chain_": 0,
                "dex_files_state_": 4,
                "owns_the_dex_files_": 8
            }
        },
        "ClassLoaderInfo": {
            "size": "0x50",
            "members": {
                "type": 0,
                "shared_libraries": 4,
                "classpath": 16,
                "original_classpath": 28,
                "checksums": 40,
                "opened_dex_files": 52,
                "opened_oat_files": 64,
                "parent": 76
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "ScopedNullHandle<art::mirror::ObjectArray<art::mirror::Object> >": {
            "size": "0x8",
            "members": {
                "null_ref_": 4
            }
        },
        "unique_ptr<art::ClassLoaderContext::ClassLoaderInfo, std::default_delete<art::ClassLoaderContext::ClassLoaderInfo> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::OatFile, std::default_delete<art::OatFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x18",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "set<const art::DexFile *, std::less<const art::DexFile *>, std::allocator<const art::DexFile *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<const art::DexFile *, std::__tree_node<const art::DexFile *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<const art::DexFile *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<const art::DexFile *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<const art::DexFile *, std::__tree_node<const art::DexFile *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::ClassLoaderContext, std::default_delete<art::ClassLoaderContext> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_iterator<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__tree_node<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader> >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader> >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader> >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader> >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader> >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> > &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader>, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::Handle<art::mirror::ClassLoader> > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_const_iterator<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__tree_node<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "Storage<art::ClassLoaderContext::ContextDexFilesState>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::ClassLoaderContext::ContextDexFilesState, art::ClassLoaderContext::ContextDexFilesState>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "HashSetIterator<const art::ClassTable::TableSlot, const art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHash, art::ClassTable::ClassDescriptorEquals, std::allocator<art::ClassTable::TableSlot> > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "EagerEvaluator<art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class> >": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "pair<art::HashSetIterator<art::ClassTable::TableSlot, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHash, art::ClassTable::ClassDescriptorEquals, std::allocator<art::ClassTable::TableSlot> > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "move_iterator<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHash, art::ClassTable::ClassDescriptorEquals, std::allocator<art::ClassTable::TableSlot> > *>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "ScopedLocalRef<_jstring *>": {
            "size": "0x8",
            "members": {
                "mEnv": 0,
                "mLocalRef": 4
            }
        },
        "pair<std::__tree_iterator<unsigned long long, std::__tree_node<unsigned long long, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_const_iterator<unsigned long long, std::__tree_node<unsigned long long, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "BlockHeader": {
            "size": "0x8",
            "members": {
                "size_": 0,
                "unused_": 4
            }
        },
        "ArrayRef<const signed char>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "HeapChunkContext": {
            "size": "0x28",
            "members": {
                "buf_": 0,
                "p_": 12,
                "pieceLenField_": 16,
                "startOfNextMemoryChunk_": 20,
                "totalAllocationUnits_": 24,
                "type_": 28,
                "needHeader_": 32,
                "chunk_overhead_": 36
            }
        },
        "StringTable": {
            "size": "0x24",
            "members": {
                "table_": 0,
                "string_backup_": 20,
                "finished_": 32
            }
        },
        "FunctionClosure": {
            "size": "0x20",
            "members": {
                "func_": 8
            }
        },
        "unordered_set<art::StringTable::Entry, art::StringTable::EntryHash, std::equal_to<art::StringTable::Entry>, std::allocator<art::StringTable::Entry> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<art::StringTable::Entry, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<char [], std::default_delete<char []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<art::StringTable::Entry, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<art::StringTable::Entry, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<art::StringTable::Entry, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<art::StringTable::Entry, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<art::StringTable::Entry, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<(lambda at art/runtime/debugger.cc:346:24) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/debugger.cc:346:24)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/debugger.cc:346:24) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/debugger.cc:346:24)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "function<void (art::Thread *)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "unique_ptr<unsigned short [], std::default_delete<unsigned short []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/debugger.cc:346:24), std::allocator<(lambda at art/runtime/debugger.cc:346:24)>, void (art::Thread *)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/debugger.cc:346:24), std::allocator<(lambda at art/runtime/debugger.cc:346:24)>, void (art::Thread *)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "EagerEvaluator<const unsigned char *, unsigned char *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<const void *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<unsigned char *, unsigned char *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "LambdaStackVisitor": {
            "size": "0x130",
            "members": {
                "fn_": 300
            }
        },
        "ScopedLocalRef<_jbyteArray *>": {
            "size": "0x8",
            "members": {
                "mEnv": 0,
                "mLocalRef": 4
            }
        },
        "Space": {
            "size": "0x14",
            "members": {
                "_vptr$Space": 0,
                "name_": 4,
                "gc_retention_policy_": 16
            }
        },
        "AnnotationItem": {
            "size": "0x2",
            "members": {
                "visibility_": 0,
                "annotation_": 1
            }
        },
        "AnnotationsDirectoryItem": {
            "size": "0x10",
            "members": {
                "class_annotations_off_": 0,
                "fields_size_": 4,
                "methods_size_": 8,
                "parameters_size_": 12
            }
        },
        "AnnotationSetItem": {
            "size": "0x8",
            "members": {
                "size_": 0,
                "entries_": 4
            }
        },
        "ParameterAnnotationsItem": {
            "size": "0x8",
            "members": {
                "method_idx_": 0,
                "annotations_off_": 4
            }
        },
        "AnnotationSetRefList": {
            "size": "0x8",
            "members": {
                "size_": 0,
                "list_": 4
            }
        },
        "AnnotationSetRefItem": {
            "size": "0x4",
            "members": {
                "annotations_off_": 0
            }
        },
        "MethodAnnotationsItem": {
            "size": "0x8",
            "members": {
                "method_idx_": 0,
                "annotations_off_": 4
            }
        },
        "FieldAnnotationsItem": {
            "size": "0x8",
            "members": {
                "field_idx_": 0,
                "annotations_off_": 4
            }
        },
        "Handle<art::mirror::PrimitiveArray<int> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "AnnotationValue": {
            "size": "0xc",
            "members": {
                "value_": 0,
                "type_": 8
            }
        },
        "PositionInfo": {
            "size": "0x10",
            "members": {
                "address_": 0,
                "line_": 4,
                "source_file_": 8,
                "prologue_end_": 12,
                "epilogue_begin_": 13
            }
        },
        "ClassData": {
            "size": "0x10",
            "members": {
                "real_klass_": 0,
                "method_": 4,
                "dex_file_": 8,
                "class_def_": 12
            }
        },
        "Handle<art::mirror::Method>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::String> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::String> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::Field>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ElfFileImpl<art::ElfTypes32>": {
            "size": "0x78",
            "members": {
                "file_path_": 0,
                "writable_": 12,
                "program_header_only_": 13,
                "map_": 16,
                "header_": 56,
                "segments_": 60,
                "base_address_": 72,
                "program_headers_start_": 76,
                "section_headers_start_": 80,
                "dynamic_program_header_": 84,
                "dynamic_section_start_": 88,
                "symtab_section_start_": 92,
                "dynsym_section_start_": 96,
                "strtab_section_start_": 100,
                "dynstr_section_start_": 104,
                "hash_section_start_": 108,
                "symtab_symbol_table_": 112,
                "dynsym_symbol_table_": 116
            }
        },
        "ElfFileImpl<art::ElfTypes64>": {
            "size": "0x78",
            "members": {
                "file_path_": 0,
                "writable_": 12,
                "program_header_only_": 13,
                "map_": 16,
                "header_": 56,
                "segments_": 60,
                "base_address_": 72,
                "program_headers_start_": 76,
                "section_headers_start_": 80,
                "dynamic_program_header_": 84,
                "dynamic_section_start_": 88,
                "symtab_section_start_": 92,
                "dynsym_section_start_": 96,
                "strtab_section_start_": 100,
                "dynstr_section_start_": 104,
                "hash_section_start_": 108,
                "symtab_symbol_table_": 112,
                "dynsym_symbol_table_": 116
            }
        },
        "ElfFile": {
            "size": "0x8",
            "members": {
                "elf32_": 0,
                "elf64_": 4
            }
        },
        "EagerEvaluator<unsigned int, unsigned long long>": {
            "size": "0xc",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf32_sym *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, elf64_sym *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::ElfFileImpl<art::ElfTypes32>, std::default_delete<art::ElfFileImpl<art::ElfTypes32> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const char *, elf32_sym *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::ElfFileImpl<art::ElfTypes64>, std::default_delete<art::ElfFileImpl<art::ElfTypes64> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const char *, elf64_sym *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::ElfFile, std::default_delete<art::ElfFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "elf32_hdr": {
            "size": "0x34",
            "members": {
                "e_ident": 0,
                "e_type": 16,
                "e_machine": 18,
                "e_version": 20,
                "e_entry": 24,
                "e_phoff": 28,
                "e_shoff": 32,
                "e_flags": 36,
                "e_ehsize": 40,
                "e_phentsize": 42,
                "e_phnum": 44,
                "e_shentsize": 46,
                "e_shnum": 48,
                "e_shstrndx": 50
            }
        },
        "dynamic": {
            "size": "0x8",
            "members": {
                "d_tag": 0,
                "d_un": 4
            }
        },
        "elf32_sym": {
            "size": "0x10",
            "members": {
                "st_name": 0,
                "st_value": 4,
                "st_size": 8,
                "st_info": 12,
                "st_other": 13,
                "st_shndx": 14
            }
        },
        "elf32_shdr": {
            "size": "0x28",
            "members": {
                "sh_name": 0,
                "sh_type": 4,
                "sh_flags": 8,
                "sh_addr": 12,
                "sh_offset": 16,
                "sh_size": 20,
                "sh_link": 24,
                "sh_info": 28,
                "sh_addralign": 32,
                "sh_entsize": 36
            }
        },
        "elf32_rel": {
            "size": "0x8",
            "members": {
                "r_offset": 0,
                "r_info": 4
            }
        },
        "elf32_rela": {
            "size": "0xc",
            "members": {
                "r_offset": 0,
                "r_info": 4,
                "r_addend": 8
            }
        },
        "elf32_phdr": {
            "size": "0x20",
            "members": {
                "p_type": 0,
                "p_offset": 4,
                "p_vaddr": 8,
                "p_paddr": 12,
                "p_filesz": 16,
                "p_memsz": 20,
                "p_flags": 24,
                "p_align": 28
            }
        },
        "elf64_hdr": {
            "size": "0x40",
            "members": {
                "e_ident": 0,
                "e_type": 16,
                "e_machine": 18,
                "e_version": 20,
                "e_entry": 24,
                "e_phoff": 32,
                "e_shoff": 40,
                "e_flags": 48,
                "e_ehsize": 52,
                "e_phentsize": 54,
                "e_phnum": 56,
                "e_shentsize": 58,
                "e_shnum": 60,
                "e_shstrndx": 62
            }
        },
        "elf64_sym": {
            "size": "0x18",
            "members": {
                "st_name": 0,
                "st_info": 4,
                "st_other": 5,
                "st_shndx": 6,
                "st_value": 8,
                "st_size": 16
            }
        },
        "elf64_shdr": {
            "size": "0x40",
            "members": {
                "sh_name": 0,
                "sh_type": 4,
                "sh_flags": 8,
                "sh_addr": 16,
                "sh_offset": 24,
                "sh_size": 32,
                "sh_link": 40,
                "sh_info": 44,
                "sh_addralign": 48,
                "sh_entsize": 56
            }
        },
        "elf64_rel": {
            "size": "0x10",
            "members": {
                "r_offset": 0,
                "r_info": 8
            }
        },
        "elf64_rela": {
            "size": "0x18",
            "members": {
                "r_offset": 0,
                "r_info": 8,
                "r_addend": 16
            }
        },
        "elf64_phdr": {
            "size": "0x38",
            "members": {
                "p_type": 0,
                "p_flags": 4,
                "p_offset": 8,
                "p_vaddr": 16,
                "p_paddr": 24,
                "p_filesz": 32,
                "p_memsz": 40,
                "p_align": 48
            }
        },
        "FaultManager": {
            "size": "0x2c",
            "members": {
                "generated_code_handlers_": 0,
                "other_handlers_": 12,
                "oldaction_": 24,
                "initialized_": 40
            }
        },
        "FaultHandler": {
            "size": "0x8",
            "members": {
                "_vptr$FaultHandler": 0,
                "manager_": 4
            }
        },
        "ObjectReference<false, art::mirror::Class>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "SigchainAction": {
            "size": "0x10",
            "members": {
                "sc_sigaction": 0,
                "sc_mask": 4,
                "sc_flags": 8
            }
        },
        "VlogMessage": {
            "size": "0x8c",
            "members": {
                "msg_": 0
            }
        },
        "unique_ptr<android::base::LogMessageData, std::default_delete<android::base::LogMessageData> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "variant<android::base::LogMessage, std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8c",
            "members": {
                "__impl": 0
            }
        },
        "array<void (*)((lambda at external/libcxx/include/variant:754:1) &&, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, android::base::LogMessage, std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > > &), 2>": {
            "size": "0x8",
            "members": {
                "__elems_": 0
            }
        },
        "siginfo": {
            "size": "0x80",
            "members": {
                "UnNamed": 0
            }
        },
        "sigaction": {
            "size": "0x10",
            "members": {
                "UnNamed": 0,
                "sa_mask": 4,
                "sa_flags": 8,
                "sa_restorer": 12
            }
        },
        "LogMessage": {
            "size": "0x4",
            "members": {
                "data_": 0
            }
        },
        "BufferedRootVisitor<256>": {
            "size": "0x414",
            "members": {
                "visitor_": 0,
                "root_info_": 4,
                "roots_": 16,
                "buffer_pos_": 1040
            }
        },
        "malloc_params": {
            "size": "0x18",
            "members": {
                "magic": 0,
                "page_size": 4,
                "granularity": 8,
                "mmap_threshold": 12,
                "trim_threshold": 16,
                "default_mflags": 20
            }
        },
        "malloc_state": {
            "size": "0x1d8",
            "members": {
                "smallmap": 0,
                "treemap": 4,
                "dvsize": 8,
                "topsize": 12,
                "least_addr": 16,
                "dv": 20,
                "top": 24,
                "trim_check": 28,
                "release_checks": 32,
                "magic": 36,
                "smallbins": 40,
                "treebins": 304,
                "footprint": 432,
                "max_footprint": 436,
                "footprint_limit": 440,
                "mflags": 444,
                "seg": 448,
                "extp": 464,
                "exts": 468
            }
        },
        "malloc_chunk": {
            "size": "0x10",
            "members": {
                "prev_foot": 0,
                "head": 4,
                "fd": 8,
                "bk": 12
            }
        },
        "malloc_tree_chunk": {
            "size": "0x20",
            "members": {
                "prev_foot": 0,
                "head": 4,
                "fd": 8,
                "bk": 12,
                "child": 16,
                "parent": 24,
                "index": 28
            }
        },
        "malloc_segment": {
            "size": "0x10",
            "members": {
                "base": 0,
                "size": 4,
                "next": 8,
                "sflags": 12
            }
        },
        "pair<std::__tree_iterator<art::gc::allocator::RosAlloc::Run *, std::__tree_node<art::gc::allocator::RosAlloc::Run *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::gc::allocator::RosAlloc::Run *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::gc::allocator::RosAlloc::Run *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::gc::allocator::RosAlloc::Run *, std::__tree_node<art::gc::allocator::RosAlloc::Run *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<art::gc::allocator::RosAlloc::Run *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<art::gc::allocator::RosAlloc::Run *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<art::gc::allocator::RosAlloc::Run *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<art::gc::allocator::RosAlloc::Run *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<art::gc::allocator::RosAlloc::FreePageRun *, std::__tree_node<art::gc::allocator::RosAlloc::FreePageRun *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::gc::allocator::RosAlloc::FreePageRun *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::gc::allocator::RosAlloc::FreePageRun *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "reverse_iterator<std::__tree_const_iterator<art::gc::allocator::RosAlloc::FreePageRun *, std::__tree_node<art::gc::allocator::RosAlloc::FreePageRun *, void *> *, int> >": {
            "size": "0x8",
            "members": {
                "__t": 0,
                "current": 4
            }
        },
        "pair<std::__tree_const_iterator<art::gc::allocator::RosAlloc::FreePageRun *, std::__tree_node<art::gc::allocator::RosAlloc::FreePageRun *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<bool [], std::default_delete<bool []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "EagerEvaluator<unsigned char, art::gc::allocator::RosAlloc::PageMapKind>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::gc::allocator::RosAlloc::PageMapKind>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<unsigned char, unsigned int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<art::gc::allocator::RosAlloc::Run *, art::gc::allocator::RosAlloc::Run *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::gc::allocator::RosAlloc::Run *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "Bitmap": {
            "size": "0x30",
            "members": {
                "mem_map_": 0,
                "bitmap_begin_": 40,
                "bitmap_size_": 44
            }
        },
        "MemoryRangeBitmap<1024>": {
            "size": "0x38",
            "members": {
                "cover_begin_": 48,
                "cover_end_": 52
            }
        },
        "MemoryRangeBitmap<16>": {
            "size": "0x38",
            "members": {
                "cover_begin_": 48,
                "cover_end_": 52
            }
        },
        "EagerEvaluator<unsigned int, unsigned char>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "ModUnionTable": {
            "size": "0x18",
            "members": {
                "_vptr$ModUnionTable": 0,
                "name_": 4,
                "heap_": 16,
                "space_": 20
            }
        },
        "ModUnionAddToCardSetVisitor": {
            "size": "0x4",
            "members": {
                "cleared_cards_": 0
            }
        },
        "ModUnionTableReferenceCache": {
            "size": "0x30",
            "members": {
                "cleared_cards_": 24,
                "references_": 36
            }
        },
        "ModUnionCheckReferences": {
            "size": "0x8",
            "members": {
                "mod_union_table_": 0,
                "references_": 4
            }
        },
        "CheckReferenceVisitor": {
            "size": "0x8",
            "members": {
                "mod_union_table_": 0,
                "references_": 4
            }
        },
        "ModUnionReferenceVisitor": {
            "size": "0x10",
            "members": {
                "mod_union_table_": 0,
                "visitor_": 4,
                "references_": 8,
                "has_target_reference_": 12
            }
        },
        "AddToReferenceArrayVisitor": {
            "size": "0x10",
            "members": {
                "mod_union_table_": 0,
                "visitor_": 4,
                "references_": 8,
                "has_target_reference_": 12
            }
        },
        "ModUnionTableCardCache": {
            "size": "0x1c",
            "members": {
                "card_bitmap_": 24
            }
        },
        "ModUnionAddToCardBitmapVisitor": {
            "size": "0x8",
            "members": {
                "bitmap_": 0,
                "card_table_": 4
            }
        },
        "CardBitVisitor": {
            "size": "0x14",
            "members": {
                "visitor_": 0,
                "space_": 4,
                "immune_space_": 8,
                "bitmap_": 12,
                "card_bitmap_": 16
            }
        },
        "ModUnionScanImageRootVisitor": {
            "size": "0x10",
            "members": {
                "visitor_": 0,
                "from_space_": 4,
                "immune_space_": 8,
                "contains_reference_to_other_space_": 12
            }
        },
        "ModUnionUpdateObjectReferencesVisitor": {
            "size": "0x10",
            "members": {
                "visitor_": 0,
                "from_space_": 4,
                "immune_space_": 8,
                "contains_reference_to_other_space_": 12
            }
        },
        "MarkObjectVisitor": {
            "size": "0x4",
            "members": {
                "_vptr$MarkObjectVisitor": 0
            }
        },
        "SafeMap<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> >, std::less<const unsigned char *>, std::allocator<std::pair<const unsigned char *const, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > > > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "pair<std::__tree_iterator<art::mirror::Object *, std::__tree_node<art::mirror::Object *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::mirror::Object *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::mirror::Object *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_iterator<unsigned char *, std::__tree_node<unsigned char *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<unsigned char *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<unsigned char *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const unsigned char *const, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >, std::__tree_node<std::__value_type<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "set<unsigned char *, std::less<unsigned char *>, std::allocator<unsigned char *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_const_iterator<unsigned char *, std::__tree_node<unsigned char *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> >, std::less<const unsigned char *>, std::allocator<std::pair<const unsigned char *const, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >, std::__tree_node<std::__value_type<const unsigned char *, std::vector<art::mirror::HeapReference<art::mirror::Object> *, std::allocator<art::mirror::HeapReference<art::mirror::Object> *> > >, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "set<art::mirror::Object *, std::less<art::mirror::Object *>, std::allocator<art::mirror::Object *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::mirror::Object *, std::__tree_node<art::mirror::Object *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::gc::accounting::MemoryRangeBitmap<1024>, std::default_delete<art::gc::accounting::MemoryRangeBitmap<1024> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "RememberedSet": {
            "size": "0x20",
            "members": {
                "name_": 0,
                "heap_": 12,
                "space_": 16,
                "dirty_cards_": 20
            }
        },
        "RememberedSetCardVisitor": {
            "size": "0x4",
            "members": {
                "dirty_cards_": 0
            }
        },
        "RememberedSetObjectVisitor": {
            "size": "0xc",
            "members": {
                "collector_": 0,
                "target_space_": 4,
                "contains_reference_to_target_space_": 8
            }
        },
        "RememberedSetReferenceVisitor": {
            "size": "0xc",
            "members": {
                "collector_": 0,
                "target_space_": 4,
                "contains_reference_to_target_space_": 8
            }
        },
        "ConcurrentCopying": {
            "size": "0x468",
            "members": {
                "region_space_": 452,
                "gc_barrier_": 456,
                "gc_mark_stack_": 460,
                "use_generational_cc_": 464,
                "young_gen_": 465,
                "done_scanning_": 466,
                "rb_mark_bit_stack_": 468,
                "rb_mark_bit_stack_full_": 472,
                "mark_stack_lock_": 480,
                "revoked_mark_stacks_": 512,
                "pooled_mark_stacks_": 524,
                "thread_running_gc_": 536,
                "is_marking_": 540,
                "is_using_read_barrier_entrypoints_": 541,
                "is_active_": 542,
                "is_asserting_to_space_invariant_": 543,
                "immune_spaces_": 544,
                "region_space_bitmap_": 568,
                "heap_mark_bitmap_": 572,
                "live_stack_freeze_size_": 576,
                "from_space_num_objects_at_first_pause_": 580,
                "from_space_num_bytes_at_first_pause_": 584,
                "is_mark_stack_push_disallowed_": 588,
                "mark_stack_mode_": 592,
                "weak_ref_access_enabled_": 596,
                "bytes_moved_": 600,
                "objects_moved_": 604,
                "copied_live_bytes_ratio_sum_": 608,
                "gc_count_": 612,
                "region_space_inter_region_bitmap_": 616,
                "non_moving_space_inter_region_bitmap_": 684,
                "reclaimed_bytes_ratio_sum_": 752,
                "bytes_moved_gc_thread_": 756,
                "objects_moved_gc_thread_": 760,
                "bytes_scanned_": 764,
                "cumulative_bytes_moved_": 772,
                "cumulative_objects_moved_": 780,
                "skipped_blocks_lock_": 792,
                "skipped_blocks_map_": 824,
                "to_space_bytes_skipped_": 836,
                "to_space_objects_skipped_": 840,
                "measure_read_barrier_slow_path_": 844,
                "mark_from_read_barrier_measurements_": 845,
                "rb_slow_path_ns_": 848,
                "rb_slow_path_count_": 856,
                "rb_slow_path_count_gc_": 864,
                "rb_slow_path_histogram_lock_": 872,
                "rb_slow_path_time_histogram_": 904,
                "rb_slow_path_count_total_": 1004,
                "rb_slow_path_count_gc_total_": 1012,
                "rb_table_": 1020,
                "force_evacuate_all_": 1024,
                "updated_all_immune_objects_": 1025,
                "gc_grays_immune_objects_": 1026,
                "immune_gray_stack_lock_": 1032,
                "immune_gray_stack_": 1064,
                "java_lang_Object_": 1076,
                "sweep_array_free_buffer_mem_map_": 1080,
                "num_bytes_allocated_before_gc_": 1120
            }
        },
        "ImmuneSpaceCaptureRefsVisitor": {
            "size": "0x4",
            "members": {
                "collector_": 0
            }
        },
        "ImmuneSpaceScanObjVisitor": {
            "size": "0x4",
            "members": {
                "collector_": 0
            }
        },
        "GrayImmuneObjectVisitor<true>": {
            "size": "0x4",
            "members": {
                "self_": 0
            }
        },
        "CaptureRootsForMarkingVisitor<false>": {
            "size": "0xc",
            "members": {
                "collector_": 4,
                "self_": 8
            }
        },
        "ActivateReadBarrierEntrypointsCheckpoint": {
            "size": "0x8",
            "members": {
                "concurrent_copying_": 4
            }
        },
        "ActivateReadBarrierEntrypointsCallback": {
            "size": "0x8",
            "members": {
                "concurrent_copying_": 4
            }
        },
        "ThreadFlipVisitor": {
            "size": "0x10",
            "members": {
                "concurrent_copying_": 8,
                "use_tlab_": 12
            }
        },
        "FlipCallback": {
            "size": "0x8",
            "members": {
                "concurrent_copying_": 4
            }
        },
        "VerifyGrayImmuneObjectsVisitor": {
            "size": "0x4",
            "members": {
                "collector_": 0
            }
        },
        "VerifyNoMissingCardMarkVisitor": {
            "size": "0x8",
            "members": {
                "cc_": 0,
                "holder_": 4
            }
        },
        "GrayImmuneObjectVisitor<false>": {
            "size": "0x4",
            "members": {
                "self_": 0
            }
        },
        "RevokeThreadLocalMarkStackCheckpoint": {
            "size": "0xc",
            "members": {
                "concurrent_copying_": 4,
                "disable_weak_ref_access_": 8
            }
        },
        "ComputeLiveBytesAndMarkRefFieldsVisitor<true>": {
            "size": "0xc",
            "members": {
                "collector_": 0,
                "obj_region_idx_": 4,
                "contains_inter_region_idx_": 8
            }
        },
        "ComputeLiveBytesAndMarkRefFieldsVisitor<false>": {
            "size": "0xc",
            "members": {
                "collector_": 0,
                "obj_region_idx_": 4,
                "contains_inter_region_idx_": 8
            }
        },
        "RefFieldsVisitor<true>": {
            "size": "0x8",
            "members": {
                "collector_": 0,
                "thread_": 4
            }
        },
        "DisableWeakRefAccessCallback": {
            "size": "0x8",
            "members": {
                "concurrent_copying_": 4
            }
        },
        "DisableMarkingCheckpoint": {
            "size": "0x8",
            "members": {
                "concurrent_copying_": 4
            }
        },
        "DisableMarkingCallback": {
            "size": "0x8",
            "members": {
                "concurrent_copying_": 4
            }
        },
        "VerifyNoFromSpaceRefsVisitor": {
            "size": "0x8",
            "members": {
                "collector_": 4
            }
        },
        "VerifyNoFromSpaceRefsFieldVisitor": {
            "size": "0x4",
            "members": {
                "collector_": 0
            }
        },
        "RefFieldsVisitor<false>": {
            "size": "0x8",
            "members": {
                "collector_": 0,
                "thread_": 4
            }
        },
        "ScopedGcGraysImmuneObjects": {
            "size": "0x8",
            "members": {
                "collector_": 0,
                "enabled_": 4
            }
        },
        "CaptureRootsForMarkingVisitor<true>": {
            "size": "0xc",
            "members": {
                "collector_": 4,
                "self_": 8
            }
        },
        "ScopedPause": {
            "size": "0x10",
            "members": {
                "start_time_": 0,
                "collector_": 8,
                "with_reporting_": 12
            }
        },
        "ReferenceProcessor": {
            "size": "0x40",
            "members": {
                "collector_": 0,
                "preserving_references_": 4,
                "condition_": 8,
                "soft_reference_queue_": 24,
                "weak_reference_queue_": 32,
                "finalizer_reference_queue_": 40,
                "phantom_reference_queue_": 48,
                "cleared_references_": 56
            }
        },
        "ReferenceQueue": {
            "size": "0x8",
            "members": {
                "lock_": 0,
                "list_": 4
            }
        },
        "FinalizerReference": {
            "size": "0x24",
            "members": {
                "next_": 24,
                "prev_": 28,
                "zombie_": 32
            }
        },
        "HeapReference<art::mirror::FinalizerReference>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "RootVisitor": {
            "size": "0x4",
            "members": {
                "_vptr$RootVisitor": 0
            }
        },
        "CumulativeData": {
            "size": "0x18",
            "members": {
                "freq_": 0,
                "perc_": 12
            }
        },
        "ScopedTiming": {
            "size": "0x4",
            "members": {
                "logger_": 0
            }
        },
        "ObjPtr<art::mirror::FinalizerReference>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Histogram<unsigned int>": {
            "size": "0x48",
            "members": {
                "kAdjust": 0,
                "kInitialBucketCount": 8,
                "name_": 12,
                "max_buckets_": 24,
                "sample_size_": 28,
                "bucket_width_": 32,
                "frequency_": 36,
                "sum_": 48,
                "min_": 52,
                "max_": 56,
                "sum_of_squares_": 60,
                "min_value_added_": 64,
                "max_value_added_": 68
            }
        },
        "multimap<unsigned int, unsigned char *, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned char *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, unsigned char *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, unsigned char *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned char *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<void *, void *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__list_node<std::pair<void *, void *>, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::pair<void *, void *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "pair<unsigned int, unsigned char *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52), std::allocator<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52)>, void (const art::MemMap &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52), std::allocator<(lambda at art/runtime/gc/collector/concurrent_copying.cc:2667:52)>, void (const art::MemMap &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "initializer_list<double>": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "Storage<art::Thread *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::Thread *, art::Thread *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::gc::CollectorType>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::gc::CollectorType, art::gc::CollectorType>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<art::LockWord::LockState, art::LockWord::LockState>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::LockWord::LockState>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::mirror::Object *, art::mirror::Object *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::mirror::Object *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "GarbageCollector": {
            "size": "0x1c8",
            "members": {
                "heap_": 12,
                "name_": 16,
                "pause_histogram_": 28,
                "rss_histogram_": 128,
                "freed_bytes_histogram_": 228,
                "gc_time_histogram_": 300,
                "metrics_gc_count_": 304,
                "gc_throughput_histogram_": 308,
                "gc_tracing_throughput_hist_": 312,
                "gc_throughput_avg_": 316,
                "gc_tracing_throughput_avg_": 320,
                "total_thread_cpu_time_ns_": 324,
                "total_time_ns_": 332,
                "total_freed_objects_": 340,
                "total_freed_bytes_": 348,
                "total_scanned_bytes_": 356,
                "cumulative_timings_": 364,
                "pause_histogram_lock_": 416,
                "is_transaction_active_": 448,
                "are_metrics_initialized_": 449
            }
        },
        "LargeObjectSpace": {
            "size": "0xe8",
            "members": {
                "lock_": 160,
                "num_bytes_allocated_": 192,
                "num_objects_allocated_": 200,
                "total_bytes_allocated_": 208,
                "total_objects_allocated_": 216,
                "begin_": 224,
                "end_": 228
            }
        },
        "function<void (const art::MemMap &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "pair<unsigned char *, unsigned char *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "IsMarkedVisitor": {
            "size": "0x4",
            "members": {
                "_vptr$IsMarkedVisitor": 0
            }
        },
        "Dumpable<art::CumulativeLogger>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "unique_ptr<unsigned char [], std::default_delete<unsigned char []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::gc::space::ContinuousSpace *, std::__tree_node<art::gc::space::ContinuousSpace *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<art::gc::space::ContinuousSpace *, std::__tree_node<art::gc::space::ContinuousSpace *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::gc::space::ContinuousSpace *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::gc::space::ContinuousSpace *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<unsigned int, unsigned int, bool>": {
            "size": "0xc",
            "members": {
                "__base_": 0
            }
        },
        "MarkSweep": {
            "size": "0x280",
            "members": {
                "current_space_bitmap_": 452,
                "mark_bitmap_": 456,
                "mark_stack_": 460,
                "immune_spaces_": 464,
                "atomic_finger_": 488,
                "no_reference_class_count_": 492,
                "normal_count_": 496,
                "class_count_": 500,
                "object_array_count_": 504,
                "other_count_": 508,
                "reference_count_": 512,
                "large_object_test_": 516,
                "large_object_mark_": 520,
                "overhead_time_": 524,
                "work_chunks_created_": 528,
                "work_chunks_deleted_": 532,
                "mark_null_count_": 536,
                "mark_immune_count_": 540,
                "mark_fastpath_count_": 544,
                "mark_slowpath_count_": 548,
                "gc_barrier_": 552,
                "mark_stack_lock_": 560,
                "is_concurrent_": 592,
                "live_stack_freeze_size_": 596,
                "sweep_array_free_buffer_mem_map_": 600
            }
        },
        "MarkStackTask<false>": {
            "size": "0x1010",
            "members": {
                "mark_sweep_": 4,
                "thread_pool_": 8,
                "mark_stack_": 12,
                "mark_stack_pos_": 4108
            }
        },
        "ScanObjectParallelVisitor": {
            "size": "0x4",
            "members": {
                "chunk_task_": 0
            }
        },
        "MarkObjectParallelVisitor": {
            "size": "0x8",
            "members": {
                "chunk_task_": 0,
                "mark_sweep_": 4
            }
        },
        "ScanObjectVisitor": {
            "size": "0x4",
            "members": {
                "mark_sweep_": 0
            }
        },
        "CheckpointMarkThreadRoots": {
            "size": "0x10",
            "members": {
                "mark_sweep_": 8,
                "revoke_ros_alloc_thread_local_buffers_at_checkpoint_": 12
            }
        },
        "DelayReferenceReferentVisitor": {
            "size": "0x4",
            "members": {
                "collector_": 0
            }
        },
        "MarkObjectSlowPath": {
            "size": "0xc",
            "members": {
                "mark_sweep_": 0,
                "holder_": 4,
                "offset_": 8
            }
        },
        "VerifyRootVisitor": {
            "size": "0x8",
            "members": {
                "os_": 4
            }
        },
        "CardScanTask": {
            "size": "0x1020",
            "members": {
                "bitmap_": 4112,
                "begin_": 4116,
                "end_": 4120,
                "minimum_age_": 4124,
                "clear_card_": 4125
            }
        },
        "VerifySystemWeakVisitor": {
            "size": "0x8",
            "members": {
                "mark_sweep_": 4
            }
        },
        "MarkVisitor": {
            "size": "0x4",
            "members": {
                "mark_sweep_": 0
            }
        },
        "BoundedFifoPowerOfTwo<art::mirror::Object *, 4>": {
            "size": "0x18",
            "members": {
                "back_index_": 0,
                "size_": 4,
                "data_": 8
            }
        },
        "SemiSpace": {
            "size": "0x218",
            "members": {
                "mark_stack_": 452,
                "immune_spaces_": 456,
                "to_space_": 480,
                "to_space_live_bitmap_": 484,
                "from_space_": 488,
                "mark_bitmap_": 492,
                "self_": 496,
                "fallback_space_": 500,
                "bytes_moved_": 504,
                "objects_moved_": 508,
                "saved_bytes_": 512,
                "collector_name_": 516,
                "swap_semi_spaces_": 528
            }
        },
        "VerifyNoFromSpaceReferencesVisitor": {
            "size": "0x4",
            "members": {
                "from_space_": 0
            }
        },
        "ScopedDisableRosAllocVerification": {
            "size": "0x8",
            "members": {
                "heap_": 0,
                "orig_verify_pre_gc_": 4,
                "orig_verify_pre_sweeping_": 5,
                "orig_verify_post_gc_": 6
            }
        },
        "ConcurrentGCTask": {
            "size": "0x18",
            "members": {
                "cause_": 12,
                "force_full_": 16,
                "my_gc_num_": 20
            }
        },
        "HeapTask": {
            "size": "0xc",
            "members": {
                "target_run_time_": 4
            }
        },
        "VerifyReferenceVisitor": {
            "size": "0x14",
            "members": {
                "self_": 4,
                "heap_": 8,
                "fail_count_": 12,
                "verify_referent_": 16
            }
        },
        "TrimIndirectReferenceTableClosure": {
            "size": "0x8",
            "members": {
                "barrier_": 4
            }
        },
        "ZygoteCompactingCollector": {
            "size": "0x230",
            "members": {
                "bins_": 532,
                "bin_live_bitmap_": 544,
                "bin_mark_bitmap_": 548,
                "is_running_on_memory_tool_": 552
            }
        },
        "VerifyObjectVisitor": {
            "size": "0x10",
            "members": {
                "self_": 0,
                "heap_": 4,
                "fail_count_": 8,
                "verify_referent_": 12
            }
        },
        "VerifyLiveStackReferences": {
            "size": "0x8",
            "members": {
                "heap_": 0,
                "failed_": 4
            }
        },
        "VerifyReferenceCardVisitor": {
            "size": "0x8",
            "members": {
                "heap_": 0,
                "failed_": 4
            }
        },
        "RootMatchesObjectVisitor": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "VarHandle": {
            "size": "0x18",
            "members": {
                "coordinate_type0_": 8,
                "coordinate_type1_": 12,
                "var_type_": 16,
                "access_modes_bit_mask_": 20
            }
        },
        "FieldVarHandle": {
            "size": "0x20",
            "members": {
                "art_field_": 24
            }
        },
        "Dumpable<art::TimingLogger>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "FixedSizeBacktrace<16>": {
            "size": "0x44",
            "members": {
                "frames_": 0,
                "num_frames_": 64
            }
        },
        "pair<art::gc::space::Space *const, art::gc::accounting::ModUnionTable *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::gc::space::Space *, art::gc::accounting::ModUnionTable *>, std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::ModUnionTable *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::ModUnionTable *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::ModUnionTable *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::gc::space::Space *, art::gc::accounting::ModUnionTable *>, std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::ModUnionTable *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::gc::space::Space *const, art::gc::accounting::RememberedSet *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::gc::space::Space *, art::gc::accounting::RememberedSet *>, std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::RememberedSet *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::RememberedSet *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::RememberedSet *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::gc::space::Space *, art::gc::accounting::RememberedSet *>, std::__tree_node<std::__value_type<art::gc::space::Space *, art::gc::accounting::RememberedSet *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<unsigned long long, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<unsigned long long, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<unsigned long long, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<unsigned long long, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "multimap<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::gc::space::ImageSpace, std::default_delete<art::gc::space::ImageSpace> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "EagerEvaluator<art::gc::AllocatorType, art::gc::AllocatorType>": {
            "size": "0x2",
            "members": {
                "lhs": 0,
                "rhs": 1
            }
        },
        "Storage<art::gc::space::MallocSpace *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::gc::space::MallocSpace *, art::gc::space::MallocSpace *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<art::ThreadState, art::ThreadState>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "mallinfo": {
            "size": "0x28",
            "members": {
                "arena": 0,
                "ordblks": 4,
                "smblks": 8,
                "hblks": 12,
                "hblkhd": 16,
                "usmblks": 20,
                "fsmblks": 24,
                "uordblks": 28,
                "fordblks": 32,
                "keepcost": 36
            }
        },
        "ClearedReferenceTask": {
            "size": "0x10",
            "members": {
                "cleared_references_": 12
            }
        },
        "FunctionTask": {
            "size": "0x20",
            "members": {
                "func_": 8
            }
        },
        "tuple<(lambda at art/runtime/gc/reference_processor.cc:297:61) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/gc/reference_processor.cc:297:61)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/gc/reference_processor.cc:297:61) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/gc/reference_processor.cc:297:61)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<art::SelfDeletingTask, std::default_delete<art::SelfDeletingTask> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/gc/reference_processor.cc:297:61), std::allocator<(lambda at art/runtime/gc/reference_processor.cc:297:61)>, void (art::Thread *)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/gc/reference_processor.cc:297:61), std::allocator<(lambda at art/runtime/gc/reference_processor.cc:297:61)>, void (art::Thread *)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "ScopedInterruptibleGCCriticalSection": {
            "size": "0x4",
            "members": {
                "self_": 0
            }
        },
        "ContinuousSpace": {
            "size": "0x20",
            "members": {
                "begin_": 20,
                "end_": 24,
                "limit_": 28
            }
        },
        "AllocSpace": {
            "size": "0x4",
            "members": {
                "_vptr$AllocSpace": 0
            }
        },
        "DlMallocSpace": {
            "size": "0x158",
            "members": {
                "mspace_": 336
            }
        },
        "ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange>": {
            "size": "0x1c",
            "members": {
                "range0_": 0,
                "range1_": 12,
                "range2_": 24
            }
        },
        "FixupObjectVisitor<art::gc::space::ImageSpace::Loader::ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange> >": {
            "size": "0x20",
            "members": {
                "visited_": 0,
                "forward_": 4
            }
        },
        "BootImageLayout": {
            "size": "0x30",
            "members": {
                "image_location_": 0,
                "boot_class_path_": 4,
                "boot_class_path_locations_": 12,
                "chunks_": 20,
                "base_address_": 32,
                "next_bcp_index_": 36,
                "total_component_count_": 40,
                "total_reservation_size_": 44
            }
        },
        "ImageChunk": {
            "size": "0x50",
            "members": {
                "base_location": 0,
                "base_filename": 12,
                "profile_file": 24,
                "start_index": 36,
                "component_count": 40,
                "image_space_count": 44,
                "reservation_size": 48,
                "checksum": 52,
                "boot_image_component_count": 56,
                "boot_image_checksum": 60,
                "boot_image_size": 64,
                "art_fd": 68,
                "vdex_fd": 72,
                "oat_fd": 76
            }
        },
        "NamedComponentLocation": {
            "size": "0x1c",
            "members": {
                "base_location": 0,
                "bcp_index": 12,
                "profile_filename": 16
            }
        },
        "BootImageLoader": {
            "size": "0x24",
            "members": {
                "boot_class_path_": 0,
                "boot_class_path_locations_": 8,
                "image_location_": 16,
                "image_isa_": 28,
                "relocate_": 32,
                "executable_": 33,
                "has_system_": 34
            }
        },
        "SimpleRelocateVisitor": {
            "size": "0xc",
            "members": {
                "diff_": 0,
                "begin_": 4,
                "size_": 8
            }
        },
        "SplitRangeRelocateVisitor": {
            "size": "0x14",
            "members": {
                "base_diff_": 0,
                "current_diff_": 4,
                "bound_": 8,
                "begin_": 12,
                "size_": 16
            }
        },
        "PatchObjectVisitor<art::PointerSize::k64, art::gc::space::ImageSpace::BootImageLoader::SimpleRelocateVisitor, art::gc::space::ImageSpace::BootImageLoader::SimpleRelocateVisitor>": {
            "size": "0x18",
            "members": {
                "heap_visitor_": 0,
                "native_visitor_": 12
            }
        },
        "ClassTableVisitor<art::gc::space::ImageSpace::BootImageLoader::SimpleRelocateVisitor>": {
            "size": "0xc",
            "members": {
                "reference_visitor_": 0
            }
        },
        "PatchObjectVisitor<art::PointerSize::k32, art::gc::space::ImageSpace::BootImageLoader::SimpleRelocateVisitor, art::gc::space::ImageSpace::BootImageLoader::SimpleRelocateVisitor>": {
            "size": "0x18",
            "members": {
                "heap_visitor_": 0,
                "native_visitor_": 12
            }
        },
        "PatchObjectVisitor<art::PointerSize::k64, art::gc::space::ImageSpace::BootImageLoader::SplitRangeRelocateVisitor, art::gc::space::ImageSpace::BootImageLoader::SplitRangeRelocateVisitor>": {
            "size": "0x28",
            "members": {
                "heap_visitor_": 0,
                "native_visitor_": 20
            }
        },
        "RemapInternedStringsVisitor": {
            "size": "0x8",
            "members": {
                "intern_remap_": 0,
                "string_class_": 4
            }
        },
        "PatchObjectVisitor<art::PointerSize::k32, art::gc::space::ImageSpace::BootImageLoader::SplitRangeRelocateVisitor, art::gc::space::ImageSpace::BootImageLoader::SplitRangeRelocateVisitor>": {
            "size": "0x28",
            "members": {
                "heap_visitor_": 0,
                "native_visitor_": 20
            }
        },
        "PatchObjectVisitor<art::PointerSize::k64, art::gc::space::ImageSpace::Loader::ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange>, art::gc::space::ImageSpace::Loader::ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange> >": {
            "size": "0x38",
            "members": {
                "heap_visitor_": 0,
                "native_visitor_": 28
            }
        },
        "ClassTableVisitor<art::gc::space::ImageSpace::Loader::ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange> >": {
            "size": "0x1c",
            "members": {
                "reference_visitor_": 0
            }
        },
        "PatchObjectVisitor<art::PointerSize::k32, art::gc::space::ImageSpace::Loader::ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange>, art::gc::space::ImageSpace::Loader::ForwardAddress<art::gc::space::RelocationRange, art::gc::space::RelocationRange, art::gc::space::ImageSpace::Loader::EmptyRange> >": {
            "size": "0x38",
            "members": {
                "heap_visitor_": 0,
                "native_visitor_": 28
            }
        },
        "RelocationRange": {
            "size": "0xc",
            "members": {
                "source_": 0,
                "dest_": 4,
                "length_": 8
            }
        },
        "ArrayRef<art::gc::space::ImageSpace *const>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<const art::DexFile *const>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<const std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<const std::unique_ptr<art::gc::space::ImageSpace, std::default_delete<art::gc::space::ImageSpace> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ScopedThreadPoolUsage": {
            "size": "0x4",
            "members": {
                "thread_pool_": 0
            }
        },
        "ProfileCompilationInfo": {
            "size": "0x84",
            "members": {
                "default_arena_pool_": 0,
                "allocator_": 12,
                "info_": 32,
                "profile_key_map_": 48,
                "extra_descriptors_": 64,
                "extra_descriptors_indexes_": 76,
                "version_": 128
            }
        },
        "DexFileData": {
            "size": "0x60",
            "members": {
                "allocator_": 0,
                "profile_key": 4,
                "profile_index": 16,
                "checksum": 20,
                "method_map": 24,
                "class_set": 40,
                "num_type_ids": 56,
                "num_method_ids": 60,
                "bitmap_storage": 64,
                "method_bitmap": 80,
                "is_for_boot_image": 92
            }
        },
        "DexPcData": {
            "size": "0x14",
            "members": {
                "is_missing_types": 0,
                "is_megamorphic": 1,
                "classes": 4
            }
        },
        "MethodHotness": {
            "size": "0x8",
            "members": {
                "inline_cache_map_": 0,
                "flags_": 4
            }
        },
        "ExtraDescriptorHash": {
            "size": "0x4",
            "members": {
                "extra_descriptors_": 0
            }
        },
        "ExtraDescriptorEquals": {
            "size": "0x4",
            "members": {
                "extra_descriptors_": 0
            }
        },
        "ProfileSampleAnnotation": {
            "size": "0xc",
            "members": {
                "origin_package_name_": 0
            }
        },
        "DexReferenceDumper": {
            "size": "0x4",
            "members": {
                "dex_file_data": 0
            }
        },
        "SafeMap<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > >, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > > > > >": {
            "size": "0x10",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > >": {
            "size": "0x10",
            "members": {
                "map_": 0
            }
        },
        "ArenaAllocatorAdapter<art::dex::TypeIndex>": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__tree_node<art::dex::TypeIndex, void *> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__tree_node<std::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void *> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::pair<const unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > > > >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > > > >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__tree_node<std::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > > >, void *> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<unsigned char>": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::unique_ptr<art::ProfileCompilationInfo::DexFileData, std::default_delete<art::ProfileCompilationInfo::DexFileData> > >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "SafeMap<const std::basic_string_view<char, std::char_traits<char> >, unsigned short, std::less<const std::basic_string_view<char, std::char_traits<char> > >, art::ArenaAllocatorAdapter<std::pair<const std::basic_string_view<char, std::char_traits<char> >, unsigned short> > >": {
            "size": "0x10",
            "members": {
                "map_": 0
            }
        },
        "ArenaAllocatorAdapter<std::pair<const std::basic_string_view<char, std::char_traits<char> >, unsigned short> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__value_type<const std::basic_string_view<char, std::char_traits<char> >, unsigned short> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__tree_node<std::__value_type<const std::basic_string_view<char, std::char_traits<char> >, unsigned short>, void *> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "HashSet<unsigned short, art::ProfileCompilationInfo::ExtraDescriptorIndexEmpty, art::ProfileCompilationInfo::ExtraDescriptorHash, art::ProfileCompilationInfo::ExtraDescriptorEquals, std::allocator<unsigned short> >": {
            "size": "0x34",
            "members": {
                "allocfn_": 0,
                "hashfn_": 4,
                "emptyfn_": 8,
                "pred_": 12,
                "num_elements_": 16,
                "num_buckets_": 20,
                "elements_until_expand_": 24,
                "owns_data_": 28,
                "data_": 32,
                "min_load_factor_": 36,
                "max_load_factor_": 44
            }
        },
        "ArrayRef<const art::gc::space::ImageSpace::BootImageLayout::ImageChunk>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ScopedDebugDisallowReadBarriers": {
            "size": "0x4",
            "members": {
                "self_": 0
            }
        },
        "unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::ProfileCompilationInfo::DexFileData, std::default_delete<art::ProfileCompilationInfo::DexFileData> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "set<art::dex::TypeIndex, std::less<art::dex::TypeIndex>, art::ArenaAllocatorAdapter<art::dex::TypeIndex> >": {
            "size": "0x10",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<art::dex::TypeIndex, std::__tree_node<art::dex::TypeIndex, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::dex::TypeIndex, void *>, std::__tree_node_destructor<art::ArenaAllocatorAdapter<std::__tree_node<art::dex::TypeIndex, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::dex::TypeIndex, std::__tree_node<art::dex::TypeIndex, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const unsigned short, art::ProfileCompilationInfo::DexPcData>": {
            "size": "0x18",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > >": {
            "size": "0x10",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > > >": {
            "size": "0x14",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > >, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::less<unsigned short>, art::ArenaAllocatorAdapter<std::pair<const unsigned short, art::ProfileCompilationInfo::DexPcData> > > > > >": {
            "size": "0x10",
            "members": {
                "__tree_": 0
            }
        },
        "map<const std::basic_string_view<char, std::char_traits<char> >, unsigned short, std::less<const std::basic_string_view<char, std::char_traits<char> > >, art::ArenaAllocatorAdapter<std::pair<const std::basic_string_view<char, std::char_traits<char> >, unsigned short> > >": {
            "size": "0x10",
            "members": {
                "__tree_": 0
            }
        },
        "function<bool (const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "uniform_int_distribution<int>": {
            "size": "0x8",
            "members": {
                "__p_": 0
            }
        },
        "tuple<(lambda at art/runtime/gc/space/image_space.cc:989:27) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/gc/space/image_space.cc:989:27)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/gc/space/image_space.cc:989:27) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/gc/space/image_space.cc:989:27)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/runtime/gc/space/image_space.cc:1898:23) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/gc/space/image_space.cc:1898:23)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/gc/space/image_space.cc:1898:23) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/gc/space/image_space.cc:1898:23)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<unix_file::FdFile, std::default_delete<unix_file::FdFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::LockedFile, art::LockedFileCloseNoFlush>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<art::ArtMethod *, art::ArtMethod *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::ImageHeader, std::default_delete<art::ImageHeader> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__base<void (art::Thread *)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/gc/space/image_space.cc:989:27), std::allocator<(lambda at art/runtime/gc/space/image_space.cc:989:27)>, void (art::Thread *)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/gc/space/image_space.cc:989:27), std::allocator<(lambda at art/runtime/gc/space/image_space.cc:989:27)>, void (art::Thread *)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/gc/space/image_space.cc:989:27), std::allocator<(lambda at art/runtime/gc/space/image_space.cc:989:27)>, void (art::Thread *)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/gc/space/image_space.cc:1898:23), std::allocator<(lambda at art/runtime/gc/space/image_space.cc:1898:23)>, bool (const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/gc/space/image_space.cc:1898:23), std::allocator<(lambda at art/runtime/gc/space/image_space.cc:1898:23)>, bool (const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_fd_impl<android::base::DefaultCloser>": {
            "size": "0x4",
            "members": {
                "fd_": 0
            }
        },
        "Guard": {
            "size": "0x8",
            "members": {
                "spaces_": 0,
                "committed_": 4
            }
        },
        "LargeObjectMapSpace": {
            "size": "0xf8",
            "members": {
                "large_objects_": 232
            }
        },
        "LargeObject": {
            "size": "0x2c",
            "members": {
                "mem_map": 0,
                "is_zygote": 40
            }
        },
        "DiscontinuousSpace": {
            "size": "0x9c",
            "members": {
                "live_bitmap_": 20,
                "mark_bitmap_": 88
            }
        },
        "SweepCallbackContext": {
            "size": "0x1c",
            "members": {
                "swap_bitmaps": 0,
                "space": 4,
                "self": 8,
                "freed": 12
            }
        },
        "AllocationInfo": {
            "size": "0x8",
            "members": {
                "prev_free_": 0,
                "alloc_size_": 4
            }
        },
        "FreeListSpace": {
            "size": "0x150",
            "members": {
                "mem_map_": 232,
                "allocation_info_map_": 272,
                "allocation_info_": 312,
                "free_end_": 316,
                "free_blocks_": 320
            }
        },
        "SafeMap<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject, std::less<art::mirror::Object *>, std::allocator<std::pair<art::mirror::Object *const, art::gc::space::LargeObjectMapSpace::LargeObject> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "pair<art::mirror::Object *const, art::gc::space::LargeObjectMapSpace::LargeObject>": {
            "size": "0x30",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject, std::less<art::mirror::Object *>, std::allocator<std::pair<art::mirror::Object *const, art::gc::space::LargeObjectMapSpace::LargeObject> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject>, std::__tree_node<std::__value_type<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject>, std::__tree_node<std::__value_type<art::mirror::Object *, art::gc::space::LargeObjectMapSpace::LargeObject>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "set<art::gc::space::AllocationInfo *, art::gc::space::FreeListSpace::SortByPrevFree, std::allocator<art::gc::space::AllocationInfo *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::gc::space::AllocationInfo *, std::__tree_node<art::gc::space::AllocationInfo *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<art::gc::space::AllocationInfo *, std::__tree_node<art::gc::space::AllocationInfo *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::gc::space::AllocationInfo *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::gc::space::AllocationInfo *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "Storage<art::gc::space::AllocationInfo *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::gc::space::AllocationInfo *, art::gc::space::AllocationInfo *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<art::gc::space::AllocationInfo *, const art::gc::space::AllocationInfo *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<const art::gc::space::AllocationInfo *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "MallocSpace": {
            "size": "0x150",
            "members": {
                "recent_freed_objects_": 280,
                "recent_free_pos_": 280,
                "lock_": 288,
                "growth_limit_": 320,
                "can_move_objects_": 324,
                "starting_size_": 328,
                "initial_size_": 332
            }
        },
        "pair<const art::mirror::Object *, art::mirror::Class *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::mirror::Object *, art::mirror::Class *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "EagerEvaluator<unsigned char *, void *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<unsigned char *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "Storage<void *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, art::gc::space::RegionSpace::Region *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, art::gc::space::RegionSpace::Region *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "move_iterator<std::pair<unsigned char *, unsigned char *> **>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "pair<unsigned int, art::gc::space::RegionSpace::Region *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::pair<unsigned char *, unsigned char *> *, std::__allocator_destructor<std::allocator<std::pair<unsigned char *, unsigned char *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "RosAllocSpace": {
            "size": "0x158",
            "members": {
                "rosalloc_": 336,
                "low_memory_mode_": 340
            }
        },
        "ZygoteSpace": {
            "size": "0x11c",
            "members": {
                "objects_allocated_": 280
            }
        },
        "CountObjectsAllocated": {
            "size": "0x4",
            "members": {
                "objects_allocated_": 0
            }
        },
        "TaskProcessor": {
            "size": "0x50",
            "members": {
                "_vptr$TaskProcessor": 0,
                "lock_": 8,
                "cond_": 40,
                "is_running_": 56,
                "tasks_": 60,
                "running_thread_": 72
            }
        },
        "multiset<art::gc::HeapTask *, art::gc::TaskProcessor::CompareByTargetRunTime, std::allocator<art::gc::HeapTask *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::gc::HeapTask *, std::__tree_node<art::gc::HeapTask *, void *> *, int>, std::__tree_const_iterator<art::gc::HeapTask *, std::__tree_node<art::gc::HeapTask *, void *> *, int> >": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::gc::HeapTask *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::gc::HeapTask *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_iterator<art::gc::HeapTask *, std::__tree_node<art::gc::HeapTask *, void *> *, int>, std::__tree_iterator<art::gc::HeapTask *, std::__tree_node<art::gc::HeapTask *, void *> *, int> >": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "CollectRootVisitor": {
            "size": "0xc",
            "members": {
                "visited_": 4,
                "work_": 8
            }
        },
        "BFSFindReachable": {
            "size": "0x1c",
            "members": {
                "visited_": 0,
                "new_visited_": 4
            }
        },
        "pair<art::mirror::Object *, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "move_iterator<std::pair<art::mirror::Object *, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > **>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "unique_ptr<std::pair<art::mirror::Object *, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > *, std::__allocator_destructor<std::allocator<std::pair<art::mirror::Object *, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "ByteArrayViewVarHandle": {
            "size": "0x1c",
            "members": {
                "native_byte_order_": 24
            }
        },
        "ByteBufferViewVarHandle": {
            "size": "0x1c",
            "members": {
                "native_byte_order_": 24
            }
        },
        "EmulatedStackFrame": {
            "size": "0x18",
            "members": {
                "callsite_type_": 8,
                "references_": 12,
                "stack_frame_": 16,
                "type_": 20
            }
        },
        "HeapReference<art::mirror::ObjectArray<art::mirror::Object> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HeapReference<art::mirror::PrimitiveArray<signed char> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::Constructor> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::Field> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::StackTraceElement> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::Reference>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::Constructor>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::Field>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::Proxy>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::CallSite>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::MethodHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::MethodHandleImpl>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::VarHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::FieldVarHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ArrayElementVarHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ByteArrayViewVarHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ByteBufferViewVarHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::StackTraceElement>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::EmulatedStackFrame>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<unsigned char> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<signed char> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<double> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<float> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::PrimitiveArray<short> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "MemberSignature": {
            "size": "0x34",
            "members": {
                "class_name_": 0,
                "member_name_": 12,
                "type_signature_": 24,
                "tmp_": 36,
                "type_": 48
            }
        },
        "Dumpable<art::hiddenapi::detail::MemberSignature>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "tuple<(lambda at art/runtime/hidden_api.cc:437:23) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/hidden_api.cc:437:23)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/hidden_api.cc:437:23) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/hidden_api.cc:437:23)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/runtime/hidden_api.cc:455:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/hidden_api.cc:455:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/hidden_api.cc:455:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/hidden_api.cc:455:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "function<void (const art::ClassAccessor::Field &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (const art::ClassAccessor::Method &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/hidden_api.cc:437:23), std::allocator<(lambda at art/runtime/hidden_api.cc:437:23)>, void (const art::ClassAccessor::Field &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/hidden_api.cc:437:23), std::allocator<(lambda at art/runtime/hidden_api.cc:437:23)>, void (const art::ClassAccessor::Field &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/hidden_api.cc:455:21), std::allocator<(lambda at art/runtime/hidden_api.cc:455:21)>, void (const art::ClassAccessor::Field &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/hidden_api.cc:455:21), std::allocator<(lambda at art/runtime/hidden_api.cc:455:21)>, void (const art::ClassAccessor::Field &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/hidden_api.cc:437:23), std::allocator<(lambda at art/runtime/hidden_api.cc:437:23)>, void (const art::ClassAccessor::Method &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/hidden_api.cc:437:23), std::allocator<(lambda at art/runtime/hidden_api.cc:437:23)>, void (const art::ClassAccessor::Method &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/hidden_api.cc:455:21), std::allocator<(lambda at art/runtime/hidden_api.cc:455:21)>, void (const art::ClassAccessor::Method &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/hidden_api.cc:455:21), std::allocator<(lambda at art/runtime/hidden_api.cc:455:21)>, void (const art::ClassAccessor::Method &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "initializer_list<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<const char *>": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "Hprof": {
            "size": "0xb8",
            "members": {
                "filename_": 4,
                "fd_": 16,
                "direct_to_ddms_": 20,
                "start_ns_": 24,
                "output_": 32,
                "current_heap_": 36,
                "objects_in_segment_": 40,
                "total_objects_": 44,
                "total_objects_with_stack_trace_": 48,
                "next_string_id_": 52,
                "strings_": 56,
                "next_class_serial_number_": 68,
                "classes_": 72,
                "traces_": 84,
                "frames_": 104,
                "allocation_records_": 124,
                "simple_roots_": 144,
                "visited_objects_": 164
            }
        },
        "EndianOutput": {
            "size": "0x14",
            "members": {
                "_vptr$EndianOutput": 0,
                "length_": 4,
                "sum_length_": 8,
                "max_length_": 12,
                "started_": 16
            }
        },
        "EndianOutputBuffered": {
            "size": "0x20",
            "members": {
                "buffer_": 20
            }
        },
        "VectorEndianOuputput": {
            "size": "0x24",
            "members": {
                "full_data_": 32
            }
        },
        "FileEndianOutput": {
            "size": "0x28",
            "members": {
                "fp_": 32,
                "errors_": 36
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<art::mirror::Class *, unsigned int, std::less<art::mirror::Class *>, std::allocator<std::pair<art::mirror::Class *const, unsigned int> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::mirror::Class *const, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<art::mirror::Class *, unsigned int, std::less<art::mirror::Class *>, std::allocator<std::pair<art::mirror::Class *const, unsigned int> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::mirror::Class *, unsigned int>, std::__tree_node<std::__value_type<art::mirror::Class *, unsigned int>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::mirror::Class *, unsigned int>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::mirror::Class *, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::mirror::Class *, unsigned int>, std::__tree_node<std::__value_type<art::mirror::Class *, unsigned int>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unordered_map<const art::gc::AllocRecordStackTrace *, unsigned int, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, std::allocator<std::pair<const art::gc::AllocRecordStackTrace *const, unsigned int> > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<const art::gc::AllocRecordStackTrace *const, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTrace *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTrace *, unsigned int>, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTrace *, unsigned int>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTrace *, unsigned int>, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTrace *, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_map_iterator<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTrace *, unsigned int>, void *> *> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unordered_map<const art::gc::AllocRecordStackTraceElement *, unsigned int, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, std::allocator<std::pair<const art::gc::AllocRecordStackTraceElement *const, unsigned int> > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<const art::gc::AllocRecordStackTraceElement *const, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTraceElement *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTraceElement *, unsigned int>, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTraceElement *, unsigned int>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTraceElement *, unsigned int>, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTraceElement *, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_map_iterator<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const art::gc::AllocRecordStackTraceElement *, unsigned int>, void *> *> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unordered_map<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *, std::hash<const art::mirror::Object *>, std::equal_to<const art::mirror::Object *>, std::allocator<std::pair<const art::mirror::Object *const, const art::gc::AllocRecordStackTrace *> > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<const art::mirror::Object *const, const art::gc::AllocRecordStackTrace *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *>, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *>, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_map_iterator<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const art::mirror::Object *, const art::gc::AllocRecordStackTrace *>, void *> *> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unordered_set<art::mirror::Object *, std::hash<art::mirror::Object *>, std::equal_to<art::mirror::Object *>, std::allocator<art::mirror::Object *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<art::mirror::Object *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<art::mirror::Object *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<art::mirror::Object *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<art::mirror::Object *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<art::mirror::Object *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<art::mirror::Object *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "EagerEvaluator<art::RootType, unsigned int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::RootType>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "RootCollector": {
            "size": "0xc",
            "members": {
                "roots_": 0
            }
        },
        "timeval": {
            "size": "0x8",
            "members": {
                "tv_sec": 0,
                "tv_usec": 4
            }
        },
        "EagerEvaluator<unsigned int, art::ImageHeader::ImageMethod>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::ImageHeader::ImageMethod>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "LengthPrefixedArray<art::IndexBssMappingEntry>": {
            "size": "0x4",
            "members": {
                "size_": 0,
                "data_": 4
            }
        },
        "IndexBssMappingEntry": {
            "size": "0x8",
            "members": {
                "index_and_mask": 0,
                "bss_offset": 4
            }
        },
        "StrideIterator<const art::IndexBssMappingEntry>": {
            "size": "0x8",
            "members": {
                "ptr_": 0,
                "stride_": 4
            }
        },
        "MutatorLockedDumpable<art::IndirectReferenceTable>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "EagerEvaluator<art::IndirectRefKind, art::IndirectRefKind>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::IndirectRefKind>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "InstrumentationStackFrame": {
            "size": "0x1c",
            "members": {
                "this_object_": 0,
                "method_": 4,
                "return_pc_": 8,
                "frame_id_": 12,
                "interpreter_entry_": 16,
                "force_deopt_id_": 20
            }
        },
        "InstrumentationListener": {
            "size": "0x4",
            "members": {
                "_vptr$InstrumentationListener": 0
            }
        },
        "InstrumentationStackPopper": {
            "size": "0xc",
            "members": {
                "self_": 0,
                "instrumentation_": 4,
                "pop_until_": 8
            }
        },
        "InstallStackVisitor": {
            "size": "0x15c",
            "members": {
                "instrumentation_stack_": 300,
                "shadow_stack_": 304,
                "dex_pcs_": 316,
                "instrumentation_exit_pc_": 328,
                "reached_existing_instrumentation_frames_": 332,
                "last_return_pc_": 336,
                "force_deopt_id_": 340
            }
        },
        "InstallStubsClassVisitor": {
            "size": "0x8",
            "members": {
                "instrumentation_": 4
            }
        },
        "RestoreStackVisitor": {
            "size": "0x140",
            "members": {
                "thread_": 300,
                "instrumentation_exit_pc_": 304,
                "instrumentation_": 308,
                "instrumentation_stack_": 312,
                "frames_removed_": 316
            }
        },
        "NthCallerVisitor": {
            "size": "0x140",
            "members": {
                "n": 300,
                "include_runtime_and_upcalls_": 304,
                "count": 308,
                "caller": 312,
                "caller_pc": 316
            }
        },
        "map<unsigned int, art::instrumentation::InstrumentationStackFrame, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, art::instrumentation::InstrumentationStackFrame> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, art::instrumentation::InstrumentationStackFrame>": {
            "size": "0x20",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, std::__tree_node<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "reverse_iterator<std::__map_iterator<std::__tree_iterator<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, std::__tree_node<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, void *> *, int> > >": {
            "size": "0x8",
            "members": {
                "__t": 0,
                "current": 4
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, std::__tree_node<std::__value_type<unsigned int, art::instrumentation::InstrumentationStackFrame>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *const, art::instrumentation::Instrumentation::InstrumentationLevel>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>, std::__tree_node<std::__value_type<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>, std::__tree_node<std::__value_type<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "reference_wrapper<const art::ShadowFrame>": {
            "size": "0x4",
            "members": {
                "__f_": 0
            }
        },
        "unique_ptr<std::__list_node<art::instrumentation::InstrumentationListener *, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::instrumentation::InstrumentationListener *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "reverse_iterator<std::__wrap_iter<art::instrumentation::InstrumentationStackFrame *> >": {
            "size": "0x8",
            "members": {
                "__t": 0,
                "current": 4
            }
        },
        "unique_ptr<art::Context, std::default_delete<art::Context> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const char *, art::instrumentation::Instrumentation::InstrumentationLevel>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "EagerEvaluator<art::instrumentation::Instrumentation::InstrumentationLevel, art::instrumentation::Instrumentation::InstrumentationLevel>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::instrumentation::Instrumentation::InstrumentationLevel>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "HandleWrapperObjPtr<art::mirror::String>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "pair<art::HashSetIterator<art::GcRoot<art::mirror::String>, art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHash, art::InternTable::StringEquals, std::allocator<art::GcRoot<art::mirror::String> > > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "ScopedLocalRef<_jclass *>": {
            "size": "0x8",
            "members": {
                "mEnv": 0,
                "mLocalRef": 4
            }
        },
        "CallSiteIdItem": {
            "size": "0x4",
            "members": {
                "data_off_": 0
            }
        },
        "ObjPtr<art::mirror::VarHandle>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<float> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::PrimitiveArray<double> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::MethodType> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::MethodType> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::MethodHandle> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::MethodHandle> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ScopedStackedShadowFramePusher": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "type_": 4
            }
        },
        "ShadowFrameSetter": {
            "size": "0x8",
            "members": {
                "shadow_frame_": 0,
                "arg_index_": 4
            }
        },
        "HeapReference<art::mirror::ObjectArray<art::mirror::String> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "SetStringCountAndValueVisitorFromCharArray": {
            "size": "0xc",
            "members": {
                "count_": 0,
                "src_array_": 4,
                "offset_": 8
            }
        },
        "SetStringCountAndValueVisitorFromString": {
            "size": "0xc",
            "members": {
                "count_": 0,
                "src_string_": 4,
                "offset_": 8
            }
        },
        "SetLengthToUsableSizeVisitor": {
            "size": "0xc",
            "members": {
                "minimum_length_": 0,
                "header_size_": 4,
                "component_size_shift_": 8
            }
        },
        "HashSet<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::DefaultMapEmptyFn<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::HashMapHashWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int), std::hash<art::ArtMethod *> >, art::HashMapPredWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int), std::equal_to<art::ArtMethod *> >, std::allocator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)> > >": {
            "size": "0x28",
            "members": {
                "allocfn_": 0,
                "hashfn_": 1,
                "emptyfn_": 2,
                "pred_": 3,
                "num_elements_": 4,
                "num_buckets_": 8,
                "elements_until_expand_": 12,
                "owns_data_": 16,
                "data_": 20,
                "min_load_factor_": 24,
                "max_load_factor_": 32
            }
        },
        "HashSetIterator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::HashSet<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::DefaultMapEmptyFn<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::HashMapHashWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int), std::hash<art::ArtMethod *> >, art::HashMapPredWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int), std::equal_to<art::ArtMethod *> >, std::allocator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "HashSet<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::DefaultMapEmptyFn<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::HashMapHashWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *), std::hash<art::ArtMethod *> >, art::HashMapPredWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *), std::equal_to<art::ArtMethod *> >, std::allocator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)> > >": {
            "size": "0x28",
            "members": {
                "allocfn_": 0,
                "hashfn_": 1,
                "emptyfn_": 2,
                "pred_": 3,
                "num_elements_": 4,
                "num_buckets_": 8,
                "elements_until_expand_": 12,
                "owns_data_": 16,
                "data_": 20,
                "min_load_factor_": 24,
                "max_load_factor_": 32
            }
        },
        "HashSetIterator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::HashSet<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::DefaultMapEmptyFn<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::HashMapHashWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *), std::hash<art::ArtMethod *> >, art::HashMapPredWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *), std::equal_to<art::ArtMethod *> >, std::allocator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::ObjectArray<art::mirror::String> > >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "Handle<art::mirror::ObjectArray<art::mirror::ObjectArray<art::mirror::String> > >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ZipArchive": {
            "size": "0x4",
            "members": {
                "handle_": 0
            }
        },
        "pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::HashSetIterator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::HashSet<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::DefaultMapEmptyFn<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)>, art::HashMapHashWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int), std::hash<art::ArtMethod *> >, art::HashMapPredWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int), std::equal_to<art::ArtMethod *> >, std::allocator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ShadowFrame *, art::JValue *, unsigned int)> > > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::HashSetIterator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::HashSet<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::DefaultMapEmptyFn<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)>, art::HashMapHashWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *), std::hash<art::ArtMethod *> >, art::HashMapPredWrapper<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *), std::equal_to<art::ArtMethod *> >, std::allocator<std::pair<art::ArtMethod *, void (*)(art::Thread *, art::ArtMethod *, art::mirror::Object *, unsigned int *, art::JValue *)> > > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "tuple<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<art::ZipArchive, std::default_delete<art::ZipArchive> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::ZipEntry, std::default_delete<art::ZipEntry> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10), std::allocator<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10)>, art::hiddenapi::AccessContext ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10), std::allocator<(lambda at art/runtime/interpreter/unstarted_runtime.cc:197:10)>, art::hiddenapi::AccessContext ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "JavaFrameRootInfo": {
            "size": "0x14",
            "members": {
                "stack_visitor_": 12,
                "vreg_": 16
            }
        },
        "poisson_distribution<unsigned int>": {
            "size": "0x50",
            "members": {
                "__p_": 0
            }
        },
        "bernoulli_distribution": {
            "size": "0x8",
            "members": {
                "__p_": 0
            }
        },
        "gamma_distribution<double>": {
            "size": "0x10",
            "members": {
                "__p_": 0
            }
        },
        "exponential_distribution<double>": {
            "size": "0x8",
            "members": {
                "__p_": 0
            }
        },
        "negative_binomial_distribution<unsigned int>": {
            "size": "0xc",
            "members": {
                "__p_": 0
            }
        },
        "uniform_real_distribution<double>": {
            "size": "0x10",
            "members": {
                "__p_": 0
            }
        },
        "normal_distribution<double>": {
            "size": "0x1c",
            "members": {
                "__p_": 0,
                "_V_": 16,
                "_V_hot_": 24
            }
        },
        "Header": {
            "size": "0x70",
            "members": {
                "magic_": 0,
                "checksum_": 8,
                "signature_": 12,
                "file_size_": 32,
                "header_size_": 36,
                "endian_tag_": 40,
                "link_size_": 44,
                "link_off_": 48,
                "map_off_": 52,
                "string_ids_size_": 56,
                "string_ids_off_": 60,
                "type_ids_size_": 64,
                "type_ids_off_": 68,
                "proto_ids_size_": 72,
                "proto_ids_off_": 76,
                "field_ids_size_": 80,
                "field_ids_off_": 84,
                "method_ids_size_": 88,
                "method_ids_off_": 92,
                "class_defs_size_": 96,
                "class_defs_off_": 100,
                "data_size_": 104,
                "data_off_": 108
            }
        },
        "ArrayRef<const void *>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ElfDebugReader<art::ElfTypes32>": {
            "size": "0x38",
            "members": {
                "file_": 0,
                "header_": 8,
                "sections_": 12,
                "section_map_": 20,
                "decompressed_gnu_debugdata_": 40,
                "gnu_debugdata_reader_": 52
            }
        },
        "ArrayRef<const elf32_shdr>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<const art::JITCodeEntry *>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<const elf32_sym>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "JITDescriptor": {
            "size": "0x64",
            "members": {
                "tail_": 48,
                "free_entries_": 52,
                "zygote_head_entry_": 56,
                "application_tail_entry_": 60
            }
        },
        "JITDescriptorPublic": {
            "size": "0x30",
            "members": {
                "version_": 0,
                "action_flag_": 4,
                "relevant_entry_": 8,
                "head_": 12,
                "magic_": 16,
                "flags_": 24,
                "sizeof_descriptor": 28,
                "sizeof_entry": 32,
                "seqlock_": 36,
                "timestamp_": 40
            }
        },
        "JITCodeEntry": {
            "size": "0x28",
            "members": {
                "addr_": 32,
                "allow_packing_": 36,
                "is_compressed_": 37
            }
        },
        "JITCodeEntryPublic": {
            "size": "0x20",
            "members": {
                "next_": 0,
                "prev_": 4,
                "symfile_addr_": 8,
                "symfile_size_": 12,
                "timestamp_": 20,
                "seqlock_": 28
            }
        },
        "unordered_set<const void *, std::hash<const void *>, std::equal_to<const void *>, std::allocator<const void *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<const void *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<const void *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<const void *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<const void *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<const void *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<const void *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *>, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *>, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<std::basic_string_view<char, std::char_traits<char> > &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<art::ElfDebugReader<art::ElfTypes32>, std::default_delete<art::ElfDebugReader<art::ElfTypes32> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unordered_map<std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *, std::hash<std::basic_string_view<char, std::char_traits<char> > >, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<const std::basic_string_view<char, std::char_traits<char> >, const elf32_shdr *> > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "function<void (const void *, unsigned int, const char *)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "EagerEvaluator<unsigned char, int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "EagerEvaluator<unsigned char, char>": {
            "size": "0x2",
            "members": {
                "lhs": 0,
                "rhs": 1
            }
        },
        "EagerEvaluator<unsigned short, unsigned int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Jit": {
            "size": "0x148",
            "members": {
                "_vptr$Jit": 0,
                "code_cache_": 4,
                "options_": 8,
                "thread_pool_": 12,
                "type_lookup_tables_": 16,
                "boot_completed_lock_": 32,
                "boot_completed_": 64,
                "tasks_after_boot_": 68,
                "cumulative_timings_": 92,
                "memory_use_": 144,
                "lock_": 248,
                "zygote_mapping_methods_": 280,
                "fd_methods_": 320,
                "fd_methods_size_": 324
            }
        },
        "OsrData": {
            "size": "0x8",
            "members": {
                "native_pc": 0,
                "frame_size": 4,
                "memory": 8
            }
        },
        "JitCompileTask": {
            "size": "0x14",
            "members": {
                "method_": 4,
                "kind_": 8,
                "compilation_kind_": 12,
                "klass_": 16
            }
        },
        "JitProfileTask": {
            "size": "0x14",
            "members": {
                "dex_files_": 4,
                "class_loader_": 16
            }
        },
        "JitDoneCompilingProfileTask": {
            "size": "0x10",
            "members": {
                "dex_files_": 4
            }
        },
        "ScopedSetRuntimeThread": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "was_runtime_thread_": 4
            }
        },
        "AgentSpec": {
            "size": "0x18",
            "members": {
                "name_": 0,
                "args_": 12
            }
        },
        "Plugin": {
            "size": "0x10",
            "members": {
                "library_": 0,
                "dlopen_handle_": 12
            }
        },
        "VariantMap<art::RuntimeArgumentMap, RuntimeArgumentMapKey>": {
            "size": "0xc",
            "members": {
                "storage_map_": 0
            }
        },
        "Memory<1024>": {
            "size": "0x4",
            "members": {
                "Value": 0
            }
        },
        "ProfileBootInfo": {
            "size": "0x18",
            "members": {
                "dex_files_": 0,
                "methods_": 12
            }
        },
        "unique_ptr<std::__list_node<art::ti::AgentSpec, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::ti::AgentSpec, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "map<const art::detail::VariantMapKeyRaw *, void *, art::VariantMap<art::RuntimeArgumentMap, RuntimeArgumentMapKey>::KeyComparator, std::allocator<std::pair<const art::detail::VariantMapKeyRaw *const, void *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const art::detail::VariantMapKeyRaw *const, void *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::OatDexFile, std::default_delete<art::OatDexFile> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "set<art::dex::TypeIndex, std::less<art::dex::TypeIndex>, std::allocator<art::dex::TypeIndex> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "set<unsigned short, std::less<unsigned short>, std::allocator<unsigned short> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "move_iterator<art::Task ***>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "tuple<bool (*&&)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<bool (*)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<bool (*const &)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<bool (*)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "shared_ptr<bool>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::Memory<1024> >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::ProfileSaverOptions>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<int>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<art::Task **, std::__allocator_destructor<std::allocator<art::Task *> > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<bool (*)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int), std::allocator<bool (*)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>, bool (const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>, std::__allocator_destructor<std::allocator<std::__function::__func<bool (*)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int), std::allocator<bool (*)(const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)>, bool (const std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, unsigned int)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "CollectClasses": {
            "size": "0x10",
            "members": {
                "classes_": 4
            }
        },
        "JniStubKey": {
            "size": "0x8",
            "members": {
                "shorty_": 0,
                "is_static_": 4,
                "is_fast_native_": 5,
                "is_critical_native_": 6,
                "is_synchronized_": 7
            }
        },
        "JniStubData": {
            "size": "0x10",
            "members": {
                "code_": 0,
                "methods_": 4
            }
        },
        "ScopedCodeCacheWrite": {
            "size": "0x4",
            "members": {
                "region_": 0
            }
        },
        "MarkCodeClosure": {
            "size": "0x10",
            "members": {
                "code_cache_": 4,
                "bitmap_": 8,
                "barrier_": 12
            }
        },
        "ArenaAllocatorAdapter<art::ArtMethod *>": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ArenaAllocatorAdapter<std::__tree_node<art::ArtMethod *, void *> >": {
            "size": "0x4",
            "members": {
                "allocator_": 0
            }
        },
        "ProfileMethodInfo": {
            "size": "0x14",
            "members": {
                "ref": 0,
                "inline_caches": 8
            }
        },
        "ProfileInlineCache": {
            "size": "0x18",
            "members": {
                "dex_pc": 0,
                "is_missing_types": 4,
                "classes": 8,
                "is_megamorphic": 20
            }
        },
        "pair<const art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>": {
            "size": "0x18",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>, std::__tree_node<std::__value_type<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>, std::__tree_node<std::__value_type<art::jit::JitCodeCache::JniStubKey, art::jit::JitCodeCache::JniStubData>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const void *const, art::ArtMethod *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<const void *, art::ArtMethod *>, std::__tree_node<std::__value_type<const void *, art::ArtMethod *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<const void *, art::ArtMethod *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<const void *, art::ArtMethod *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<const void *, art::ArtMethod *>, std::__tree_node<std::__value_type<const void *, art::ArtMethod *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::ArtMethod *const, const void *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::ArtMethod *, const void *>, std::__tree_node<std::__value_type<art::ArtMethod *, const void *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::ArtMethod *, const void *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::ArtMethod *, const void *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::ArtMethod *, const void *>, std::__tree_node<std::__value_type<art::ArtMethod *, const void *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::ArtMethod *const, art::ProfilingInfo *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::ArtMethod *, art::ProfilingInfo *>, std::__tree_node<std::__value_type<art::ArtMethod *, art::ProfilingInfo *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::ArtMethod *, art::ProfilingInfo *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::ArtMethod *, art::ProfilingInfo *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::ArtMethod *, art::ProfilingInfo *>, std::__tree_node<std::__value_type<art::ArtMethod *, art::ProfilingInfo *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<art::ArtMethod *, std::__tree_node<art::ArtMethod *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::ArtMethod *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::ArtMethod *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::ArtMethod *, std::__tree_node<art::ArtMethod *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "set<art::ArtMethod *, std::less<art::ArtMethod *>, art::ArenaAllocatorAdapter<art::ArtMethod *> >": {
            "size": "0x10",
            "members": {
                "__tree_": 0
            }
        },
        "function<void (const void *, art::ArtMethod *)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "EagerEvaluator<void *, const void *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "ScopedProfilingInfoUse": {
            "size": "0x10",
            "members": {
                "jit_": 0,
                "method_": 4,
                "self_": 8,
                "profiling_info_": 12
            }
        },
        "ProfileSaver": {
            "size": "0xf8",
            "members": {
                "jit_code_cache_": 0,
                "tracked_dex_base_locations_": 4,
                "tracked_dex_base_locations_to_be_resolved_": 16,
                "tracked_profiles_": 28,
                "shutting_down_": 40,
                "last_time_ns_saver_woke_up_": 44,
                "jit_activity_notifications_": 52,
                "profile_cache_": 56,
                "wait_lock_": 72,
                "period_condition_": 104,
                "total_bytes_written_": 120,
                "total_number_of_writes_": 128,
                "total_number_of_code_cache_queries_": 136,
                "total_number_of_skipped_writes_": 144,
                "total_number_of_failed_writes_": 152,
                "total_ms_of_sleep_": 160,
                "total_ns_of_work_": 168,
                "total_number_of_hot_spikes_": 176,
                "total_number_of_wake_ups_": 184,
                "options_": 192
            }
        },
        "GetClassesAndMethodsHelper": {
            "size": "0xcc",
            "members": {
                "startup_": 0,
                "profile_boot_class_path_": 1,
                "hot_method_sample_threshold_": 4,
                "extra_flags_": 8,
                "annotation_": 12,
                "arena_stack_": 24,
                "allocator_": 44,
                "class_loaders_": 60,
                "dex_file_records_map_": 140,
                "max_primitive_array_dimensions_": 184,
                "number_of_hot_methods_": 196,
                "number_of_sampled_methods_": 200
            }
        },
        "DexFileRecords": {
            "size": "0x20",
            "members": {
                "class_records": 0,
                "copied_methods": 16
            }
        },
        "ClassRecord": {
            "size": "0xc",
            "members": {
                "type_index": 0,
                "array_dimension": 2,
                "copied_methods_start": 4,
                "methods": 8
            }
        },
        "GetClassLoadersVisitor": {
            "size": "0x8",
            "members": {
                "class_loaders_": 4
            }
        },
        "CollectInternalVisitor": {
            "size": "0x4",
            "members": {
                "helper_": 0
            }
        },
        "ScopedDefaultPriority": {
            "size": "0x4",
            "members": {
                "thread_": 0
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<art::ProfileSaver::GetClassesAndMethodsHelper::ClassRecord>": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "HashSet<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::DefaultMapEmptyFn<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::HashMapHashWrapper<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *, std::hash<const art::DexFile *> >, art::HashMapPredWrapper<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *, std::equal_to<const art::DexFile *> >, art::ScopedArenaAllocatorAdapter<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *> > >": {
            "size": "0x2c",
            "members": {
                "allocfn_": 0,
                "hashfn_": 4,
                "emptyfn_": 5,
                "pred_": 6,
                "num_elements_": 8,
                "num_buckets_": 12,
                "elements_until_expand_": 16,
                "owns_data_": 20,
                "data_": 24,
                "min_load_factor_": 28,
                "max_load_factor_": 36
            }
        },
        "HashSetIterator<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::HashSet<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::DefaultMapEmptyFn<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::HashMapHashWrapper<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *, std::hash<const art::DexFile *> >, art::HashMapPredWrapper<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *, std::equal_to<const art::DexFile *> >, art::ScopedArenaAllocatorAdapter<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *> > > >": {
            "size": "0x8",
            "members": {
                "index_": 0,
                "hash_set_": 4
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0x18",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > &, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::ProfileCompilationInfo *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::HashSetIterator<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::HashSet<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::DefaultMapEmptyFn<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *>, art::HashMapHashWrapper<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *, std::hash<const art::DexFile *> >, art::HashMapPredWrapper<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *, std::equal_to<const art::DexFile *> >, art::ScopedArenaAllocatorAdapter<std::pair<const art::DexFile *, art::ProfileSaver::GetClassesAndMethodsHelper::DexFileRecords *> > > >, bool>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "array<unsigned char, 9>": {
            "size": "0x9",
            "members": {
                "__elems_": 0
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0x18",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<char const[], art::FreeDelete>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "Storage<art::ProfileSaver *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::ProfileSaver *, art::ProfileSaver *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "sched_param": {
            "size": "0x4",
            "members": {
                "sched_priority": 0
            }
        },
        "stat": {
            "size": "0x60",
            "members": {
                "st_dev": 0,
                "__pad0": 8,
                "__st_ino": 12,
                "st_mode": 16,
                "st_nlink": 20,
                "st_uid": 24,
                "st_gid": 28,
                "st_rdev": 32,
                "__pad3": 40,
                "st_size": 44,
                "st_blksize": 52,
                "st_blocks": 56,
                "st_atim": 64,
                "st_mtim": 72,
                "st_ctim": 80,
                "st_ino": 88
            }
        },
        "GuardedCopy": {
            "size": "0x10",
            "members": {
                "magic_": 0,
                "adler_": 4,
                "original_ptr_": 8,
                "original_length_": 12
            }
        },
        "VarArgs": {
            "size": "0x10",
            "members": {
                "m_": 0,
                "type_": 4,
                "cnt_": 8,
                "UnNamed": 12
            }
        },
        "ScopedCheck": {
            "size": "0xc",
            "members": {
                "function_name_": 0,
                "indent_": 4,
                "flags_": 8,
                "has_method_": 10
            }
        },
        "ToStr<art::IndirectRefKind>": {
            "size": "0xc",
            "members": {
                "s_": 0
            }
        },
        "ToStr<art::Thread>": {
            "size": "0xc",
            "members": {
                "s_": 0
            }
        },
        "Agent": {
            "size": "0x1c",
            "members": {
                "name_": 0,
                "dlopen_handle_": 12,
                "onload_": 16,
                "onattach_": 20,
                "onunload_": 24
            }
        },
        "Libraries": {
            "size": "0xc",
            "members": {
                "libraries_": 0
            }
        },
        "SharedLibrary": {
            "size": "0x58",
            "members": {
                "path_": 0,
                "handle_": 12,
                "needs_native_bridge_": 16,
                "class_loader_": 20,
                "class_loader_allocator_": 24,
                "jni_on_load_lock_": 32,
                "jni_on_load_cond_": 64,
                "jni_on_load_thread_id_": 80,
                "jni_on_load_result_": 84
            }
        },
        "SafeMap<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "Dumpable<art::Libraries>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "unique_ptr<art::ti::Agent, std::default_delete<art::ti::Agent> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, const void *>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>, std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::SharedLibrary *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "shared_ptr<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<unsigned int>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<art::SharedLibrary, std::default_delete<art::SharedLibrary> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "JavaVMInitArgs": {
            "size": "0x10",
            "members": {
                "version": 0,
                "nOptions": 4,
                "options": 8,
                "ignoreUnrecognized": 12
            }
        },
        "JavaVMOption": {
            "size": "0x8",
            "members": {
                "optionString": 0,
                "extraInfo": 4
            }
        },
        "JavaVMAttachArgs": {
            "size": "0xc",
            "members": {
                "version": 0,
                "name": 4,
                "group": 8
            }
        },
        "ScopedUtfChars": {
            "size": "0xc",
            "members": {
                "env_": 0,
                "string_": 4,
                "utf_chars_": 8
            }
        },
        "pair<unsigned int, _jobject *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::JNIEnvExt, std::default_delete<art::JNIEnvExt> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "JniIdDeferStackReflectiveScope": {
            "size": "0x24",
            "members": {
                "methods_": 12,
                "fields_": 24
            }
        },
        "ScopedEnableSuspendAllJniIdQueries": {
            "size": "0x4",
            "members": {
                "manager_": 0
            }
        },
        "JniIdReflectiveSourceInfo<_jfieldID *, void>": {
            "size": "0xc",
            "members": {
                "id_": 8
            }
        },
        "ArraySlice<art::ArtField>": {
            "size": "0xc",
            "members": {
                "array_": 0,
                "size_": 4,
                "element_size_": 8
            }
        },
        "JniIdReflectiveSourceInfo<_jmethodID *, void>": {
            "size": "0xc",
            "members": {
                "id_": 8
            }
        },
        "StackReflectiveHandleScope<0, 1>": {
            "size": "0x1c",
            "members": {
                "field_pos_": 12,
                "method_pos_": 16,
                "fields_": 20,
                "methods_": 24
            }
        },
        "ScopedExceptionStorage": {
            "size": "0x1c",
            "members": {
                "self_": 0,
                "hs_": 4,
                "excp_": 24
            }
        },
        "array<art::ReflectiveReference<art::ArtField>, 0>": {
            "size": "0x4",
            "members": {
                "__elems_": 0
            }
        },
        "array<art::ReflectiveReference<art::ArtMethod>, 1>": {
            "size": "0x4",
            "members": {
                "__elems_": 0
            }
        },
        "ScopedVAArgs": {
            "size": "0x4",
            "members": {
                "args": 0
            }
        },
        "tuple<(lambda at art/runtime/jni/jni_internal.cc:184:7) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/jni/jni_internal.cc:184:7)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/jni/jni_internal.cc:184:7) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/jni/jni_internal.cc:184:7)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/jni/jni_internal.cc:184:7), std::allocator<(lambda at art/runtime/jni/jni_internal.cc:184:7)>, art::hiddenapi::AccessContext ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/jni/jni_internal.cc:184:7), std::allocator<(lambda at art/runtime/jni/jni_internal.cc:184:7)>, art::hiddenapi::AccessContext ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "ObjPtr<art::mirror::EmulatedStackFrame>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "FixedSizeHandleScope<6>": {
            "size": "0x24",
            "members": {
                "storage_": 8,
                "pos_": 32
            }
        },
        "StackHandleScope<6>": {
            "size": "0x28",
            "members": {
                "self_": 36
            }
        },
        "ShadowFrameGetter": {
            "size": "0xc",
            "members": {
                "shadow_frame_": 0,
                "operands_": 4,
                "operand_index_": 8
            }
        },
        "unique_ptr<art::metrics::MetricsBackend, std::default_delete<art::metrics::MetricsBackend> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "thread": {
            "size": "0x4",
            "members": {
                "__t_": 0
            }
        },
        "variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ShutdownRequestedMessage, art::metrics::MetricsReporter::StartupCompletedMessage, art::metrics::MetricsReporter::RequestMetricsReportMessage, art::metrics::MetricsReporter::CompilationInfoMessage>": {
            "size": "0xc",
            "members": {
                "__impl": 0
            }
        },
        "variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ReportCompletedMessage>": {
            "size": "0x8",
            "members": {
                "__impl": 0
            }
        },
        "tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct> >, void (art::metrics::MetricsReporter::*)(), art::metrics::MetricsReporter *>": {
            "size": "0x10",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "condition_variable": {
            "size": "0x4",
            "members": {
                "__cv_": 0
            }
        },
        "unique_lock<std::mutex>": {
            "size": "0x8",
            "members": {
                "__m_": 0,
                "__owns_": 4
            }
        },
        "time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000> > >": {
            "size": "0x8",
            "members": {
                "__d_": 0
            }
        },
        "time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000> > >": {
            "size": "0x8",
            "members": {
                "__d_": 0
            }
        },
        "duration<long long, std::ratio<1, 1000000> >": {
            "size": "0x8",
            "members": {
                "__rep_": 0
            }
        },
        "duration<long long, std::ratio<1, 1000000000> >": {
            "size": "0x8",
            "members": {
                "__rep_": 0
            }
        },
        "move_iterator<std::variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ShutdownRequestedMessage, art::metrics::MetricsReporter::StartupCompletedMessage, art::metrics::MetricsReporter::RequestMetricsReportMessage, art::metrics::MetricsReporter::CompilationInfoMessage> **>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "move_iterator<std::variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ReportCompletedMessage> **>": {
            "size": "0x4",
            "members": {
                "__i": 0
            }
        },
        "unique_ptr<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct> >, void (art::metrics::MetricsReporter::*)(), art::metrics::MetricsReporter *>, std::default_delete<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct> >, void (art::metrics::MetricsReporter::*)(), art::metrics::MetricsReporter *> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "array<void (*)(std::__variant_detail::__visitation::__variant::__value_visitor<Matcher &> &&, std::__variant_detail::__base<std::__variant_detail::_Trait::_TriviallyAvailable, art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ShutdownRequestedMessage, art::metrics::MetricsReporter::StartupCompletedMessage, art::metrics::MetricsReporter::RequestMetricsReportMessage, art::metrics::MetricsReporter::CompilationInfoMessage> &&), 5>": {
            "size": "0x14",
            "members": {
                "__elems_": 0
            }
        },
        "unique_ptr<std::variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ShutdownRequestedMessage, art::metrics::MetricsReporter::StartupCompletedMessage, art::metrics::MetricsReporter::RequestMetricsReportMessage, art::metrics::MetricsReporter::CompilationInfoMessage> *, std::__allocator_destructor<std::allocator<std::variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ShutdownRequestedMessage, art::metrics::MetricsReporter::StartupCompletedMessage, art::metrics::MetricsReporter::RequestMetricsReportMessage, art::metrics::MetricsReporter::CompilationInfoMessage> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, art::FlagOrigin>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<unsigned int, art::FlagOrigin>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<bool, art::FlagOrigin>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ReportCompletedMessage> *, std::__allocator_destructor<std::allocator<std::variant<art::TimeoutExpiredMessage, art::metrics::MetricsReporter::ReportCompletedMessage> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "MetricsReporter": {
            "size": "0x128",
            "members": {
                "_vptr$MetricsReporter": 0,
                "config_": 4,
                "runtime_": 64,
                "backends_": 68,
                "thread_": 80,
                "startup_reported_": 88,
                "report_interval_index_": 92,
                "messages_": 96,
                "thread_to_host_messages_": 184,
                "session_data_": 272,
                "session_started_": 292
            }
        },
        "CompilationInfoMessage": {
            "size": "0x8",
            "members": {
                "compilation_reason": 0,
                "compiler_filter": 4
            }
        },
        "ReportingConfig": {
            "size": "0x3c",
            "members": {
                "dump_to_logcat": 0,
                "dump_to_statsd": 1,
                "dump_to_file": 4,
                "period_spec": 20,
                "reporting_mods": 52,
                "reporting_num_mods": 56
            }
        },
        "ReportingPeriodSpec": {
            "size": "0x1c",
            "members": {
                "spec": 0,
                "periods_seconds": 12,
                "continuous_reporting": 24,
                "report_startup_first": 25
            }
        },
        "SessionData": {
            "size": "0x14",
            "members": {
                "session_id": 0,
                "uid": 8,
                "compilation_reason": 12,
                "compiler_filter": 16
            }
        },
        "MessageQueue<art::metrics::MetricsReporter::ShutdownRequestedMessage, art::metrics::MetricsReporter::StartupCompletedMessage, art::metrics::MetricsReporter::RequestMetricsReportMessage, art::metrics::MetricsReporter::CompilationInfoMessage>": {
            "size": "0x58",
            "members": {
                "mutex_": 0,
                "cv_": 32,
                "messages_": 48,
                "deadline_milliseconds_": 72
            }
        },
        "MessageQueue<art::metrics::MetricsReporter::ReportCompletedMessage>": {
            "size": "0x58",
            "members": {
                "mutex_": 0,
                "cv_": 32,
                "messages_": 48,
                "deadline_milliseconds_": 72
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::Array> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "CopyClassVisitor": {
            "size": "0x18",
            "members": {
                "self_": 0,
                "orig_": 4,
                "new_length_": 8,
                "copy_bytes_": 12,
                "imt_": 16,
                "pointer_size_": 20
            }
        },
        "BitString": {
            "size": "0x4",
            "members": {
                "storage_": 0
            }
        },
        "BitStringChar": {
            "size": "0x8",
            "members": {
                "data_": 0,
                "bitlength_": 4
            }
        },
        "DexCacheSourceInfo": {
            "size": "0x10",
            "members": {
                "index_": 8,
                "cache_": 12
            }
        },
        "EmulatedStackFrameAccessor": {
            "size": "0x14",
            "members": {
                "references_": 0,
                "stack_frame_": 4,
                "stack_frame_size_": 8,
                "reference_idx_": 12,
                "stack_frame_idx_": 16
            }
        },
        "CopyReferenceFieldsWithReadBarrierVisitor": {
            "size": "0x4",
            "members": {
                "dest_obj_": 0
            }
        },
        "CopyObjectVisitor": {
            "size": "0x8",
            "members": {
                "orig_": 0,
                "num_bytes_": 4
            }
        },
        "EagerEvaluator<art::Primitive::Type, art::Primitive::Type>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::Primitive::Type>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "ObjPtr<art::mirror::StackTraceElement>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "HeapReference<art::mirror::StackTraceElement>": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "VarHandleAccessorToAccessModeEntry": {
            "size": "0x8",
            "members": {
                "method_name": 0,
                "access_mode": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<short, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 6,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseAndAccessor<short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<short, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<short, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 6,
                "result_": 8
            }
        },
        "AtomicGetAndSetAccessor<short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddAccessor<short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "addend_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseOrAccessor<short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseXorAccessor<short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<short, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<short, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 6,
                "result_": 8
            }
        },
        "AtomicGetAccessor<short, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<short, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<signed char, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 5,
                "result_": 8
            }
        },
        "AtomicSetAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<signed char, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 5,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseOrAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseAndAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndSetAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "addend_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseXorAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<signed char, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<signed char, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 5,
                "result_": 8
            }
        },
        "AtomicGetAccessor<signed char, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<signed char, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<unsigned short, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 6,
                "result_": 8
            }
        },
        "AtomicSetAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<unsigned short, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 6,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseOrAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseAndAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndSetAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "addend_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseXorAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<unsigned short, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<unsigned short, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 6,
                "result_": 8
            }
        },
        "AtomicGetAccessor<unsigned short, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<float, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "expected_value_": 4,
                "desired_value_": 8,
                "result_": 12
            }
        },
        "AtomicSetAccessor<float, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<float, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "expected_value_": 4,
                "desired_value_": 8,
                "result_": 12
            }
        },
        "AtomicGetAndBitwiseOrAccessor<float, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseAndAccessor<float, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndSetAccessor<float, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddAccessor<float, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "addend_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseXorAccessor<float, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<float, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<float, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "expected_value_": 4,
                "desired_value_": 8,
                "result_": 12
            }
        },
        "AtomicGetAccessor<float, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<float, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<unsigned char, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 5,
                "result_": 8
            }
        },
        "AtomicSetAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<unsigned char, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 5,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseOrAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseAndAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndSetAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "addend_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseXorAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<unsigned char, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<unsigned char, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "expected_value_": 4,
                "desired_value_": 5,
                "result_": 8
            }
        },
        "AtomicGetAccessor<unsigned char, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<unsigned char, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<int, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "expected_value_": 4,
                "desired_value_": 8,
                "result_": 12
            }
        },
        "AtomicGetAndBitwiseOrAccessor<int, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseAndAccessor<int, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<int, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<int, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "expected_value_": 4,
                "desired_value_": 8,
                "result_": 12
            }
        },
        "AtomicGetAndSetAccessor<int, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddAccessor<int, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "addend_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndBitwiseXorAccessor<int, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicSetAccessor<int, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<int, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "expected_value_": 4,
                "desired_value_": 8,
                "result_": 12
            }
        },
        "AtomicGetAccessor<int, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<int, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<long long, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x18",
            "members": {
                "expected_value_": 4,
                "desired_value_": 12,
                "result_": 20
            }
        },
        "AtomicGetAndBitwiseOrAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "AtomicGetAndBitwiseAndAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "AtomicSetAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<long long, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x18",
            "members": {
                "expected_value_": 4,
                "desired_value_": 12,
                "result_": 20
            }
        },
        "AtomicGetAndSetAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "new_value_": 4,
                "result_": 12
            }
        },
        "AtomicGetAndAddAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "addend_": 4,
                "result_": 12
            }
        },
        "AtomicGetAndBitwiseXorAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "AtomicSetAccessor<long long, std::memory_order_relaxed>": {
            "size": "0xc",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<long long, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x18",
            "members": {
                "expected_value_": 4,
                "desired_value_": 12,
                "result_": 20
            }
        },
        "AtomicGetAccessor<long long, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicWeakCompareAndSetAccessor<double, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x18",
            "members": {
                "expected_value_": 4,
                "desired_value_": 12,
                "result_": 20
            }
        },
        "AtomicGetAndBitwiseOrAccessor<double, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "AtomicGetAndBitwiseAndAccessor<double, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "AtomicSetAccessor<double, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndExchangeAccessor<double, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x18",
            "members": {
                "expected_value_": 4,
                "desired_value_": 12,
                "result_": 20
            }
        },
        "AtomicGetAndSetAccessor<double, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "new_value_": 4,
                "result_": 12
            }
        },
        "AtomicGetAndAddAccessor<double, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "addend_": 4,
                "result_": 12
            }
        },
        "AtomicGetAndBitwiseXorAccessor<double, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "AtomicSetAccessor<double, std::memory_order_relaxed>": {
            "size": "0xc",
            "members": {
                "new_value_": 4
            }
        },
        "AtomicStrongCompareAndSetAccessor<double, std::memory_order_seq_cst, std::memory_order_seq_cst>": {
            "size": "0x18",
            "members": {
                "expected_value_": 4,
                "desired_value_": 12,
                "result_": 20
            }
        },
        "AtomicGetAccessor<double, std::memory_order_relaxed>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAccessor<double, std::memory_order_seq_cst>": {
            "size": "0x8",
            "members": {
                "result_": 4
            }
        },
        "AtomicGetAndAddWithByteSwapAccessor<unsigned short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddWithByteSwapAccessor<short, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddWithByteSwapAccessor<int, std::memory_order_seq_cst>": {
            "size": "0xc",
            "members": {
                "value_": 4,
                "result_": 8
            }
        },
        "AtomicGetAndAddWithByteSwapAccessor<long long, std::memory_order_seq_cst>": {
            "size": "0x10",
            "members": {
                "value_": 4,
                "result_": 12
            }
        },
        "TypeAdaptorAccessor<int, float>": {
            "size": "0x8",
            "members": {
                "inner_accessor_": 4
            }
        },
        "TypeAdaptorAccessor<long long, double>": {
            "size": "0x8",
            "members": {
                "inner_accessor_": 4
            }
        },
        "Accessor<unsigned char>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<signed char>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<unsigned short>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<short>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<int>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<long long>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<float>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "Accessor<double>": {
            "size": "0x4",
            "members": {
                "_vptr$Accessor": 0
            }
        },
        "MonitorDeflateVisitor": {
            "size": "0xc",
            "members": {
                "self_": 4,
                "deflate_count_": 8
            }
        },
        "MonitorInfo": {
            "size": "0x14",
            "members": {
                "owner_": 0,
                "entry_count_": 4,
                "waiters_": 8
            }
        },
        "unique_ptr<std::__list_node<art::Monitor *, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::Monitor *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "NextMethodVisitor": {
            "size": "0x138",
            "members": {
                "count_": 300,
                "method_": 304,
                "dex_pc_": 308
            }
        },
        "MonitorObjectsStackVisitor": {
            "size": "0x134",
            "members": {
                "frame_count": 300,
                "dump_locks": 304
            }
        },
        "NativeBridgeRuntimeCallbacks": {
            "size": "0xc",
            "members": {
                "getMethodShorty": 0,
                "getNativeMethodCount": 4,
                "getNativeMethods": 8
            }
        },
        "Addr2linePipe": {
            "size": "0x4c",
            "members": {
                "in": 0,
                "out": 28,
                "file": 56,
                "child_pid": 68,
                "odd": 72
            }
        },
        "array<const char *, 3>": {
            "size": "0xc",
            "members": {
                "__elems_": 0
            }
        },
        "unique_ptr<art::Addr2linePipe, std::default_delete<art::Addr2linePipe> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<Backtrace, std::default_delete<Backtrace> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<BacktraceMap, std::default_delete<BacktraceMap> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "backtrace_frame_data_t": {
            "size": "0x64",
            "members": {
                "num": 0,
                "pc": 4,
                "rel_pc": 12,
                "sp": 20,
                "stack_size": 28,
                "map": 32,
                "func_name": 80,
                "func_offset": 92
            }
        },
        "backtrace_map_t": {
            "size": "0x30",
            "members": {
                "start": 0,
                "end": 8,
                "offset": 16,
                "load_bias": 24,
                "flags": 32,
                "name": 36
            }
        },
        "OatFileAssistant": {
            "size": "0x118",
            "members": {
                "dex_location_": 0,
                "context_": 12,
                "dex_parent_writable_": 16,
                "isa_": 20,
                "load_executable_": 24,
                "only_load_trusted_executable_": 25,
                "zip_file_only_contains_uncompressed_dex_": 26,
                "cached_required_dex_checksums_": 28,
                "required_dex_checksums_attempted_": 40,
                "required_dex_checksums_found_": 41,
                "has_original_dex_files_": 42,
                "odex_": 44,
                "oat_": 96,
                "vdex_for_odex_": 148,
                "vdex_for_oat_": 200,
                "zip_fd_": 252,
                "cached_boot_class_path_": 256,
                "cached_boot_class_path_checksums_": 268
            }
        },
        "OatFileInfo": {
            "size": "0x34",
            "members": {
                "oat_file_assistant_": 0,
                "is_oat_location_": 4,
                "filename_provided_": 5,
                "filename_": 8,
                "zip_fd_": 20,
                "oat_fd_": 24,
                "vdex_fd_": 28,
                "use_fd_": 32,
                "load_attempted_": 33,
                "file_": 36,
                "status_attempted_": 40,
                "status_": 44,
                "file_released_": 48
            }
        },
        "NullableScopedUtfChars": {
            "size": "0xc",
            "members": {
                "mEnv": 0,
                "mString": 4,
                "mUtfChars": 8
            }
        },
        "ScopedIntArrayAccessor": {
            "size": "0xc",
            "members": {
                "env_": 0,
                "array_": 4,
                "elements_": 8
            }
        },
        "pair<std::__tree_iterator<const char *, std::__tree_node<const char *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<const char *, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<const char *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "set<const char *, art::CharPointerComparator, std::allocator<const char *> >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_const_iterator<const char *, std::__tree_node<const char *, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "DumpClassVisitor": {
            "size": "0x8",
            "members": {
                "flags_": 4
            }
        },
        "initializer_list<art::Handle<art::mirror::Class> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "Trace": {
            "size": "0x7c",
            "members": {
                "trace_file_": 4,
                "buf_": 8,
                "flags_": 12,
                "trace_output_mode_": 16,
                "trace_mode_": 20,
                "clock_source_": 24,
                "buffer_size_": 28,
                "start_time_": 32,
                "clock_overhead_ns_": 40,
                "cur_offset_": 44,
                "overflow_": 48,
                "exited_threads_": 52,
                "interval_us_": 64,
                "streaming_lock_": 68,
                "seen_methods_": 72,
                "seen_threads_": 84,
                "unique_methods_lock_": 88,
                "art_method_id_map_": 92,
                "unique_methods_": 112
            }
        },
        "ScopedLocalRef<_jobjectArray *>": {
            "size": "0x8",
            "members": {
                "mEnv": 0,
                "mLocalRef": 4
            }
        },
        "ClosestUserClassLoaderVisitor": {
            "size": "0x130",
            "members": {
                "class_loader": 300
            }
        },
        "ClassSet": {
            "size": "0x18",
            "members": {
                "self_": 0,
                "class_set_": 4
            }
        },
        "NonDebuggableStacksVisitor": {
            "size": "0x130",
            "members": {
                "class_set_": 300
            }
        },
        "unordered_set<_jclass *, std::hash<_jclass *>, std::equal_to<_jclass *>, std::allocator<_jclass *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<_jclass *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_jclass *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<_jclass *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<_jclass *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<_jclass *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_const_iterator<std::__hash_node<_jclass *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::Constructor> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ObjPtr<art::mirror::ObjectArray<art::mirror::Field> >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "FirstExternalCallerVisitor": {
            "size": "0x130",
            "members": {
                "caller": 300
            }
        },
        "ScopedNullHandle<art::mirror::ObjectArray<art::mirror::Class> >": {
            "size": "0x8",
            "members": {
                "null_ref_": 4
            }
        },
        "tuple<(lambda at art/runtime/native/java_lang_Class.cc:136:10) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/runtime/native/java_lang_Class.cc:136:10)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/runtime/native/java_lang_Class.cc:136:10) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/runtime/native/java_lang_Class.cc:136:10)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/runtime/native/java_lang_Class.cc:136:10), std::allocator<(lambda at art/runtime/native/java_lang_Class.cc:136:10)>, art::hiddenapi::AccessContext ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/runtime/native/java_lang_Class.cc:136:10), std::allocator<(lambda at art/runtime/native/java_lang_Class.cc:136:10)>, art::hiddenapi::AccessContext ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "SetStringCountAndBytesVisitor": {
            "size": "0x10",
            "members": {
                "count_": 0,
                "src_array_": 4,
                "offset_": 8,
                "high_byte_": 12
            }
        },
        "FixedSizeHandleScope<8>": {
            "size": "0x2c",
            "members": {
                "storage_": 8,
                "pos_": 40
            }
        },
        "StackHandleScope<8>": {
            "size": "0x30",
            "members": {
                "self_": 44
            }
        },
        "HandleWrapperObjPtr<art::mirror::Field>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "HeapReference<art::mirror::ObjectArray<art::mirror::ObjectArray<art::mirror::Class> > >": {
            "size": "0x4",
            "members": {
                "reference_": 0
            }
        },
        "ScopedByteArrayRO": {
            "size": "0x410",
            "members": {
                "mEnv": 0,
                "mJavaArray": 4,
                "mRawArray": 8,
                "mSize": 12,
                "mBuffer": 16
            }
        },
        "ScopedCharArrayRW": {
            "size": "0xc",
            "members": {
                "mEnv": 0,
                "mJavaArray": 4,
                "mRawArray": 8
            }
        },
        "EagerEvaluator<art::InstructionSet, art::InstructionSet>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::InstructionSet>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "DlOpenOatFile": {
            "size": "0xb0",
            "members": {
                "dlopen_mmaps_": 156,
                "dlopen_handle_": 168,
                "shared_objects_before_": 172
            }
        },
        "OatFile": {
            "size": "0xa0",
            "members": {
                "_vptr$OatFile": 0,
                "location_": 4,
                "vdex_": 16,
                "begin_": 20,
                "end_": 24,
                "data_bimg_rel_ro_begin_": 28,
                "data_bimg_rel_ro_end_": 32,
                "bss_begin_": 36,
                "bss_end_": 40,
                "bss_methods_": 44,
                "bss_roots_": 48,
                "is_executable_": 52,
                "vdex_begin_": 56,
                "vdex_end_": 60,
                "oat_dex_files_storage_": 64,
                "oat_dex_files_": 76,
                "secondary_lookup_lock_": 88,
                "secondary_oat_dex_files_": 120,
                "string_cache_": 132,
                "external_dex_files_": 144
            }
        },
        "SafeMap<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *, std::less<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<const std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *> > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "ArrayRef<const unsigned int>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ArrayRef<art::ArtMethod *>": {
            "size": "0x8",
            "members": {
                "array_": 0,
                "size_": 4
            }
        },
        "ElfOatFile": {
            "size": "0xa0",
            "members": {
                "elf_file_": 156
            }
        },
        "OatFileBackedByVdex": {
            "size": "0xa0",
            "members": {
                "oat_header_": 156
            }
        },
        "pair<const std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "map<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *, std::less<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<const std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>, std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>, std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const art::OatDexFile *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__list_node<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unordered_set<void *, std::hash<void *>, std::equal_to<void *>, std::allocator<void *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<void *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<void *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__hash_node<void *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<void *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<char, art::FreeDelete>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::OatFileBase, std::default_delete<art::OatFileBase> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::OatHeader, std::default_delete<art::OatHeader> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::OatFileBackedByVdex, std::default_delete<art::OatFileBackedByVdex> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::DexFileContainer, std::default_delete<art::DexFileContainer> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<const art::InstructionSetFeatures, std::default_delete<const art::InstructionSetFeatures> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "EagerEvaluator<art::OatClassType, art::OatClassType>": {
            "size": "0x2",
            "members": {
                "lhs": 0,
                "rhs": 1
            }
        },
        "EagerEvaluator<unsigned short, unsigned char>": {
            "size": "0x4",
            "members": {
                "lhs": 0,
                "rhs": 2
            }
        },
        "dl_iterate_context": {
            "size": "0x1c",
            "members": {
                "begin_": 0,
                "placeholder_maps_data_": 4,
                "num_placeholder_maps_": 8,
                "placeholder_maps_names_": 12,
                "placeholder_maps_names_size_": 16,
                "shared_objects_before": 20,
                "shared_objects_seen": 24
            }
        },
        "dl_phdr_info": {
            "size": "0x28",
            "members": {
                "dlpi_addr": 0,
                "dlpi_name": 4,
                "dlpi_phdr": 8,
                "dlpi_phnum": 12,
                "dlpi_adds": 16,
                "dlpi_subs": 24,
                "dlpi_tls_modid": 32,
                "dlpi_tls_data": 36
            }
        },
        "PlaceholderMapData": {
            "size": "0xc",
            "members": {
                "name": 0,
                "vaddr": 4,
                "memsz": 8
            }
        },
        "BackgroundVerificationTask": {
            "size": "0x20",
            "members": {
                "dex_files_": 4,
                "class_loader_": 16,
                "vdex_path_": 20
            }
        },
        "pair<std::__tree_iterator<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, std::__tree_node<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, std::__tree_node<std::unique_ptr<const art::OatFile, std::default_delete<const art::OatFile> >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const art::DexFile *const, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<const art::OatFile *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<const art::OatFile *, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<const art::OatFile *, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<const art::OatFile *, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<const art::OatFile *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unordered_set<const art::OatFile *, std::hash<const art::OatFile *>, std::equal_to<const art::OatFile *>, std::allocator<const art::OatFile *> >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "dirent": {
            "size": "0x114",
            "members": {
                "d_ino": 0,
                "d_off": 8,
                "d_reclen": 16,
                "d_type": 18,
                "d_name": 19
            }
        },
        "CmdlineResult": {
            "size": "0x10",
            "members": {
                "status_": 0,
                "message_": 4
            }
        },
        "Memory<1>": {
            "size": "0x4",
            "members": {
                "Value": 0
            }
        },
        "TokenRange": {
            "size": "0x10",
            "members": {
                "token_list_": 0,
                "begin_": 8,
                "end_": 12
            }
        },
        "MillisecondsToNanoseconds": {
            "size": "0x8",
            "members": {
                "nanoseconds_": 0
            }
        },
        "BackgroundGcOption": {
            "size": "0x4",
            "members": {
                "background_collector_type_": 0
            }
        },
        "XGcOption": {
            "size": "0x10",
            "members": {
                "collector_type_": 0,
                "verify_pre_gc_heap_": 4,
                "verify_pre_sweeping_heap_": 5,
                "generational_cc": 6,
                "verify_post_gc_heap_": 7,
                "verify_pre_gc_rosalloc_": 8,
                "verify_pre_sweeping_rosalloc_": 9,
                "verify_post_gc_rosalloc_": 10,
                "measure_": 11,
                "gcstress_": 12
            }
        },
        "LogVerbosity": {
            "size": "0x19",
            "members": {
                "class_linker": 0,
                "collector": 1,
                "compiler": 2,
                "deopt": 3,
                "gc": 4,
                "heap": 5,
                "interpreter": 6,
                "jdwp": 7,
                "jit": 8,
                "jni": 9,
                "monitor": 10,
                "oat": 11,
                "profiler": 12,
                "signals": 13,
                "simulator": 14,
                "startup": 15,
                "third_party_jni": 16,
                "threads": 17,
                "verifier": 18,
                "verifier_debug": 19,
                "image": 20,
                "systrace_lock_logging": 21,
                "agents": 22,
                "dex": 23,
                "plugin": 24
            }
        },
        "VariableIndentationOutputStream": {
            "size": "0x88",
            "members": {
                "indenter_": 0,
                "indented_os_": 52
            }
        },
        "Indenter": {
            "size": "0x34",
            "members": {
                "indent_next_": 32,
                "out_sbuf_": 36,
                "text_": 40,
                "count_": 48
            }
        },
        "SaveDestination": {
            "size": "0x8",
            "members": {
                "variant_map_": 0
            }
        },
        "Builder": {
            "size": "0x3c",
            "members": {
                "format_": 0,
                "args_": 4,
                "hs_": 8,
                "length_with_flag_": 56
            }
        },
        "UntypedArgumentBuilder": {
            "size": "0x28",
            "members": {
                "parent_": 0,
                "names_": 4,
                "category_": 16,
                "help_": 24,
                "metavar_": 32
            }
        },
        "ArgumentBuilder<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0xd0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 196
            }
        },
        "ArgumentBuilder<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0xd0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 196
            }
        },
        "ArgumentBuilder<art::LogVerbosity>": {
            "size": "0xe8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 220
            }
        },
        "ArgumentBuilder<art::Unit>": {
            "size": "0xb8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 172
            }
        },
        "ArgumentBuilder<std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > >": {
            "size": "0xd0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 196
            }
        },
        "ArgumentBuilder<art::Memory<1024> >": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::Memory<1> >": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<bool>": {
            "size": "0xb8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 172
            }
        },
        "ArgumentBuilder<art::XGcOption>": {
            "size": "0xd8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 204
            }
        },
        "ArgumentBuilder<double>": {
            "size": "0xc8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 188
            }
        },
        "ArgumentBuilder<art::TraceClockSource>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<unsigned int>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::JdwpProvider>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::MillisecondsToNanoseconds>": {
            "size": "0xc8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 188
            }
        },
        "ArgumentBuilder<int>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::ProfileSaverOptions>": {
            "size": "0x120",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 276
            }
        },
        "ArgumentBuilder<art::gc::space::LargeObjectSpaceType>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::BackgroundGcOption>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::verifier::VerifyMode>": {
            "size": "0xb8",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 172
            }
        },
        "ArgumentBuilder<art::ExperimentalFlags>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<std::vector<art::Plugin, std::allocator<art::Plugin> > >": {
            "size": "0xd0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 196
            }
        },
        "ArgumentBuilder<art::hiddenapi::EnforcementPolicy>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ArgumentBuilder<art::JniIdType>": {
            "size": "0xc0",
            "members": {
                "parent_": 0,
                "save_value_": 8,
                "load_value_": 32,
                "save_value_specified_": 56,
                "load_value_specified_": 57,
                "argument_info_": 60,
                "save_destination_": 180
            }
        },
        "ScopedIndentation": {
            "size": "0x8",
            "members": {
                "vios_": 0,
                "adjustment_": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<const art::detail::VariantMapKeyRaw *, void *>, std::__tree_node<std::__value_type<const art::detail::VariantMapKeyRaw *, void *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<const art::detail::VariantMapKeyRaw *, void *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<const art::detail::VariantMapKeyRaw *, void *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<const art::detail::VariantMapKeyRaw *, void *>, std::__tree_node<std::__value_type<const art::detail::VariantMapKeyRaw *, void *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "shared_ptr<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<art::TokenRange, std::default_delete<art::TokenRange> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const char *, art::JniIdType>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::hiddenapi::EnforcementPolicy>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::MillisecondsToNanoseconds>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, std::vector<art::Plugin, std::allocator<art::Plugin> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::ExperimentalFlags>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::verifier::VerifyMode>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::BackgroundGcOption>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::Memory<1> >": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::gc::space::LargeObjectSpaceType>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::ProfileSaverOptions>": {
            "size": "0x38",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::Memory<1024> >": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::JdwpProvider>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::TraceClockSource>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, double>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::XGcOption>": {
            "size": "0x14",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<const char *, art::LogVerbosity>": {
            "size": "0x20",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "shared_ptr<art::RuntimeArgumentMap>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "function<void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "pair<const art::TokenRange *, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:311:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:311:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:315:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:315:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:192:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:192:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:198:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:198:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "function<void ()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "tuple<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "function<void (std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::LogVerbosity &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::LogVerbosity &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::Unit &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::Unit &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "pair<const char *, art::Unit>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "function<void (std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::Memory<1024> &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::Memory<1024> &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::Memory<1> &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::Memory<1> &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (bool &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<bool &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::XGcOption &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::XGcOption &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (double &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<double &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::TraceClockSource &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::TraceClockSource &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (unsigned int &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<unsigned int &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::JdwpProvider &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::JdwpProvider &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::MillisecondsToNanoseconds &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::MillisecondsToNanoseconds &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (int &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<int &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::ProfileSaverOptions &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::ProfileSaverOptions &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::gc::space::LargeObjectSpaceType &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::gc::space::LargeObjectSpaceType &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::BackgroundGcOption &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::BackgroundGcOption &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::verifier::VerifyMode &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::verifier::VerifyMode &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::ExperimentalFlags &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::ExperimentalFlags &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (std::vector<art::Plugin, std::allocator<art::Plugin> > &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<std::vector<art::Plugin, std::allocator<art::Plugin> > &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::hiddenapi::EnforcementPolicy &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::hiddenapi::EnforcementPolicy &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<void (art::JniIdType &)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "function<art::JniIdType &()>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "variant<std::optional<bool> *, std::optional<int> *, std::optional<unsigned int> *, std::optional<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > *>": {
            "size": "0x8",
            "members": {
                "__impl": 0
            }
        },
        "tuple<(lambda at art/libartbase/base/flags.h:79:43) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/libartbase/base/flags.h:79:43)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/libartbase/base/flags.h:79:43) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/libartbase/base/flags.h:79:43)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:216:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:216:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:220:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:220:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:237:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:237:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:237:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:237:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<(lambda at art/cmdline/cmdline_parser.h:240:21) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<(lambda at art/cmdline/cmdline_parser.h:240:21)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const (lambda at art/cmdline/cmdline_parser.h:240:21) &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<(lambda at art/cmdline/cmdline_parser.h:240:21)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::default_delete<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<unsigned int &, unsigned int &>": {
            "size": "0x8",
            "members": {
                "__base_": 0
            }
        },
        "shared_ptr<art::TraceClockSource>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::BackgroundGcOption>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<art::RuntimeArgumentMap, std::default_delete<art::RuntimeArgumentMap> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "basic_stringstream<char, std::char_traits<char>, std::allocator<char> >": {
            "size": "0x90",
            "members": {
                "__sb_": 12
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<std::__wrap_iter<const std::basic_string<char, std::char_traits<char>, std::allocator<char> > *> &&, std::__wrap_iter<const std::basic_string<char, std::char_traits<char>, std::allocator<char> > *> &&>": {
            "size": "0x8",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22), std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22)>, void ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22), std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:156:22)>, void ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22), std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22)>, void ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22), std::allocator<(lambda at art/cmdline/detail/cmdline_parse_argument_detail.h:172:22)>, void ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::LogVerbosity &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::LogVerbosity &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::LogVerbosity &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::LogVerbosity &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::LogVerbosity &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::LogVerbosity &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::LogVerbosity &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::LogVerbosity &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::Unit &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::Unit &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::Unit &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::Unit &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::Unit &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::Unit &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::Unit &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::Unit &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::Memory<1024> &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::Memory<1024> &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::Memory<1024> &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::Memory<1024> &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::Memory<1024> &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::Memory<1024> &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::Memory<1024> &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::Memory<1024> &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::Memory<1> &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::Memory<1> &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::Memory<1> &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::Memory<1> &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::Memory<1> &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::Memory<1> &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::Memory<1> &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::Memory<1> &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (bool &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (bool &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, bool &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, bool &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::XGcOption &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::XGcOption &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::XGcOption &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::XGcOption &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::XGcOption &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::XGcOption &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::XGcOption &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::XGcOption &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (double &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (double &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, double &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, double &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (double &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (double &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, double &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, double &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::TraceClockSource &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::TraceClockSource &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::TraceClockSource &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::TraceClockSource &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::TraceClockSource &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::TraceClockSource &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::TraceClockSource &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::TraceClockSource &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (unsigned int &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (unsigned int &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, unsigned int &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, unsigned int &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (unsigned int &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (unsigned int &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, unsigned int &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, unsigned int &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::JdwpProvider &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::JdwpProvider &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::JdwpProvider &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::JdwpProvider &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::JdwpProvider &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::JdwpProvider &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::JdwpProvider &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::JdwpProvider &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::MillisecondsToNanoseconds &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::MillisecondsToNanoseconds &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::MillisecondsToNanoseconds &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::MillisecondsToNanoseconds &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::MillisecondsToNanoseconds &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::MillisecondsToNanoseconds &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::MillisecondsToNanoseconds &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::MillisecondsToNanoseconds &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (bool &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (bool &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, bool &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, bool &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (int &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (int &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, int &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, int &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (int &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (int &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, int &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, int &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::ProfileSaverOptions &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::ProfileSaverOptions &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::ProfileSaverOptions &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::ProfileSaverOptions &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::ProfileSaverOptions &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::ProfileSaverOptions &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::ProfileSaverOptions &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::ProfileSaverOptions &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::gc::space::LargeObjectSpaceType &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::gc::space::LargeObjectSpaceType &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::gc::space::LargeObjectSpaceType &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::gc::space::LargeObjectSpaceType &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::gc::space::LargeObjectSpaceType &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::gc::space::LargeObjectSpaceType &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::gc::space::LargeObjectSpaceType &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::gc::space::LargeObjectSpaceType &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::BackgroundGcOption &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::BackgroundGcOption &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::BackgroundGcOption &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::BackgroundGcOption &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::BackgroundGcOption &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::BackgroundGcOption &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::BackgroundGcOption &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::BackgroundGcOption &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::verifier::VerifyMode &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::verifier::VerifyMode &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::verifier::VerifyMode &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::verifier::VerifyMode &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::verifier::VerifyMode &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::verifier::VerifyMode &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::verifier::VerifyMode &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::verifier::VerifyMode &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::ExperimentalFlags &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::ExperimentalFlags &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::ExperimentalFlags &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::ExperimentalFlags &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::ExperimentalFlags &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::ExperimentalFlags &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::ExperimentalFlags &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::ExperimentalFlags &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::vector<art::Plugin, std::allocator<art::Plugin> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (std::vector<art::Plugin, std::allocator<art::Plugin> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::vector<art::Plugin, std::allocator<art::Plugin> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, std::vector<art::Plugin, std::allocator<art::Plugin> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::vector<art::Plugin, std::allocator<art::Plugin> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (std::vector<art::Plugin, std::allocator<art::Plugin> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::vector<art::Plugin, std::allocator<art::Plugin> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, std::vector<art::Plugin, std::allocator<art::Plugin> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::hiddenapi::EnforcementPolicy &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::hiddenapi::EnforcementPolicy &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::hiddenapi::EnforcementPolicy &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::hiddenapi::EnforcementPolicy &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::hiddenapi::EnforcementPolicy &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::hiddenapi::EnforcementPolicy &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::hiddenapi::EnforcementPolicy &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::hiddenapi::EnforcementPolicy &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::JniIdType &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:311:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:311:21)>, void (art::JniIdType &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::JniIdType &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:315:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:315:21)>, art::JniIdType &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::JniIdType &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:192:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:192:21)>, void (art::JniIdType &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::JniIdType &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:198:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:198:21)>, art::JniIdType &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/libartbase/base/flags.h:79:43), std::allocator<(lambda at art/libartbase/base/flags.h:79:43)>, void ()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/libartbase/base/flags.h:79:43), std::allocator<(lambda at art/libartbase/base/flags.h:79:43)>, void ()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (bool &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (bool &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, bool &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, bool &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (int &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (int &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, int &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, int &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (unsigned int &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (unsigned int &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, unsigned int &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, unsigned int &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:216:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:216:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:220:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:220:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:237:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:237:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:237:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:237:21)>, void (std::basic_string<char, std::char_traits<char>, std::allocator<char> > &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:240:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:240:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:240:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:240:21)>, std::basic_string<char, std::char_traits<char>, std::allocator<char> > &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:237:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:237:21)>, void (art::Unit &)>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:237:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:237:21)>, void (art::Unit &)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:240:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:240:21)>, art::Unit &()>, std::__allocator_destructor<std::allocator<std::__function::__func<(lambda at art/cmdline/cmdline_parser.h:240:21), std::allocator<(lambda at art/cmdline/cmdline_parser.h:240:21)>, art::Unit &()> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "initializer_list<std::pair<const char *, bool> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<char>": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<std::pair<const char *, art::JniIdType> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<std::pair<const char *, art::hiddenapi::EnforcementPolicy> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<std::pair<const char *, art::verifier::VerifyMode> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<std::pair<const char *, art::gc::space::LargeObjectSpaceType> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<std::pair<const char *, art::TraceClockSource> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "initializer_list<std::function<void ()> >": {
            "size": "0x8",
            "members": {
                "__begin_": 0,
                "__size_": 4
            }
        },
        "DeoptimizeStackVisitor": {
            "size": "0x144",
            "members": {
                "exception_handler_": 300,
                "prev_shadow_frame_": 304,
                "stacked_shadow_frame_pushed_": 308,
                "single_frame_deopt_": 309,
                "single_frame_done_": 310,
                "single_frame_deopt_method_": 312,
                "single_frame_deopt_quick_method_header_": 316,
                "callee_method_": 320
            }
        },
        "QuickExceptionHandler": {
            "size": "0x2c",
            "members": {
                "self_": 0,
                "context_": 4,
                "is_deoptimization_": 8,
                "method_tracing_active_": 9,
                "handler_quick_frame_": 12,
                "handler_quick_frame_pc_": 16,
                "handler_method_header_": 20,
                "handler_quick_arg0_": 24,
                "handler_dex_pc_": 28,
                "clear_exception_": 32,
                "handler_frame_depth_": 36,
                "full_fragment_done_": 40
            }
        },
        "CatchBlockStackVisitor": {
            "size": "0x138",
            "members": {
                "exception_": 300,
                "exception_handler_": 304,
                "skip_frames_": 308
            }
        },
        "SummaryElement": {
            "size": "0xc",
            "members": {
                "root": 0,
                "equiv": 4,
                "identical": 8
            }
        },
        "ArgArray": {
            "size": "0x54",
            "members": {
                "shorty_": 0,
                "shorty_len_": 4,
                "num_bytes_": 8,
                "arg_array_": 12,
                "small_arg_array_": 16,
                "large_arg_array_": 80
            }
        },
        "HeapReflectiveSourceInfo": {
            "size": "0xc",
            "members": {
                "src_": 8
            }
        },
        "ReflectiveHandleScopeSourceInfo": {
            "size": "0xc",
            "members": {
                "source_": 8
            }
        },
        "ScopedRemove<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x8",
            "members": {
                "map_": 0,
                "key_": 4
            }
        },
        "ScopedRemove<std::vector<art::Plugin, std::allocator<art::Plugin> > >": {
            "size": "0x8",
            "members": {
                "map_": 0,
                "key_": 4
            }
        },
        "ScopedRemove<std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > >": {
            "size": "0x8",
            "members": {
                "map_": 0,
                "key_": 4
            }
        },
        "ScopedRemove<unsigned int>": {
            "size": "0x8",
            "members": {
                "map_": 0,
                "key_": 4
            }
        },
        "ScopedRemove<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0x8",
            "members": {
                "map_": 0,
                "key_": 4
            }
        },
        "SignalCatcher": {
            "size": "0x40",
            "members": {
                "lock_": 0,
                "cond_": 32,
                "halt_": 48,
                "pthread_": 52,
                "thread_": 56
            }
        },
        "SignalSet": {
            "size": "0x8",
            "members": {
                "set_": 0
            }
        },
        "TraceConfig": {
            "size": "0x18",
            "members": {
                "trace_mode": 0,
                "trace_output_mode": 4,
                "trace_file": 8,
                "trace_file_size": 20
            }
        },
        "Dumpable<art::AbortState>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "UpdateEntryPointsClassVisitor": {
            "size": "0x8",
            "members": {
                "instrumentation_": 4
            }
        },
        "ScopedJniEnvLocalRefState": {
            "size": "0x8",
            "members": {
                "env_": 0,
                "saved_local_ref_cookie_": 4
            }
        },
        "BufferedRootVisitor<16>": {
            "size": "0x54",
            "members": {
                "visitor_": 0,
                "root_info_": 4,
                "roots_": 16,
                "buffer_pos_": 80
            }
        },
        "unique_ptr<std::__list_node<std::unique_ptr<art::ti::Agent, std::default_delete<art::ti::Agent> >, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::unique_ptr<art::ti::Agent, std::default_delete<art::ti::Agent> >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__list_node<std::unique_ptr<art::Transaction, std::default_delete<art::Transaction> >, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::unique_ptr<art::Transaction, std::default_delete<art::Transaction> >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 8
            }
        },
        "pair<std::__tree_iterator<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>, std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "uniform_int_distribution<long long>": {
            "size": "0x10",
            "members": {
                "__p_": 0
            }
        },
        "map<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *, std::less<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<const std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>, std::__tree_node<std::__value_type<std::basic_string_view<char, std::char_traits<char> >, const com::android::apex::ApexInfo *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "tuple<void (*&&)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<void (*)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)> &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<void (*const &)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<const std::allocator<void (*)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "function<void (android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)>": {
            "size": "0x18",
            "members": {
                "__f_": 0
            }
        },
        "shared_ptr<bool (*)()>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::InstructionSet>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::CompilerCallbacks *>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<int (*)(__sFILE *, const char *, char *)>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<void (*)(int)>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<void (*)()>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::Memory<1> >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::MillisecondsToNanoseconds>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::verifier::VerifyMode>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::hiddenapi::EnforcementPolicy>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::ExperimentalFlags>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::JniIdType>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<std::vector<art::Plugin, std::allocator<art::Plugin> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<double>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::XGcOption>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::gc::space::LargeObjectSpaceType>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::JdwpProvider>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<std::vector<std::unique_ptr<const art::DexFile, std::default_delete<const art::DexFile> >, std::allocator<std::unique_ptr<const art::DexFile, std::default_delete<const art::DexFile> > > > *>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "unique_ptr<std::__function::__func<void (*)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *), std::allocator<void (*)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)>, void (android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)>, std::__allocator_destructor<std::allocator<std::__function::__func<void (*)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *), std::allocator<void (*)(android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)>, void (android::base::LogId, android::base::LogSeverity, const char *, const char *, unsigned int, const char *)> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "ScopedLogSeverity": {
            "size": "0x4",
            "members": {
                "old_": 0
            }
        },
        "EagerEvaluator<long long, long long>": {
            "size": "0x10",
            "members": {
                "lhs": 0,
                "rhs": 8
            }
        },
        "Storage<long long>": {
            "size": "0x8",
            "members": {
                "v": 0
            }
        },
        "ApexInfo": {
            "size": "0x4c",
            "members": {
                "moduleName_": 0,
                "modulePath_": 12,
                "preinstalledModulePath_": 24,
                "versionCode_": 40,
                "versionName_": 48,
                "isFactory_": 60,
                "isActive_": 61,
                "lastUpdateMillis_": 64
            }
        },
        "ApexInfoList": {
            "size": "0xc",
            "members": {
                "apexInfo_": 0
            }
        },
        "MethodVerifier": {
            "size": "0x14c",
            "members": {
                "_vptr$MethodVerifier": 0,
                "self_": 4,
                "arena_stack_": 8,
                "allocator_": 28,
                "reg_types_": 44,
                "reg_table_": 88,
                "work_line_": 104,
                "work_insn_idx_": 108,
                "saved_line_": 112,
                "dex_method_idx_": 116,
                "dex_file_": 120,
                "class_def_": 124,
                "code_item_accessor_": 128,
                "insn_flags_": 144,
                "failures_": 148,
                "failure_messages_": 160,
                "flags_": 172,
                "info_messages_": 176,
                "encountered_failure_types_": 312,
                "can_load_classes_": 316,
                "allow_soft_failures_": 317,
                "class_linker_": 320,
                "verifier_deps_": 324,
                "link_": 328
            }
        },
        "Dumpable<art::OsInfo>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "Dumpable<art::UContext>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "UContext": {
            "size": "0x4",
            "members": {
                "context": 0
            }
        },
        "Dumpable<art::Backtrace>": {
            "size": "0x4",
            "members": {
                "value_": 0
            }
        },
        "Backtrace": {
            "size": "0x4",
            "members": {
                "raw_context_": 0
            }
        },
        "ucontext": {
            "size": "0xe4",
            "members": {
                "uc_flags": 0,
                "uc_link": 4,
                "uc_stack": 8,
                "uc_mcontext": 20,
                "UnNamed": 108,
                "__fpregs_mem": 116
            }
        },
        "sigaltstack": {
            "size": "0xc",
            "members": {
                "ss_sp": 0,
                "ss_flags": 4,
                "ss_size": 8
            }
        },
        "utsname": {
            "size": "0x186",
            "members": {
                "sysname": 0,
                "nodename": 65,
                "release": 130,
                "version": 195,
                "machine": 260,
                "domainname": 325
            }
        },
        "EagerEvaluator<art::InvokeType, art::InvokeType>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::InvokeType>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "VariantMapKeyRaw": {
            "size": "0x8",
            "members": {
                "_vptr$VariantMapKeyRaw": 0,
                "key_counter_": 4
            }
        },
        "VariantMapKey<art::Unit>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::JdwpProvider>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::Memory<1024> >": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<double>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<unsigned int>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::Memory<1> >": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::MillisecondsToNanoseconds>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<bool>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<int>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::JniIdType>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::XGcOption>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::gc::space::LargeObjectSpaceType>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::BackgroundGcOption>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::LogVerbosity>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::TraceClockSource>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::ProfileSaverOptions>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::verifier::VerifyMode>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::hiddenapi::EnforcementPolicy>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::ExperimentalFlags>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<std::list<art::ti::AgentSpec, std::allocator<art::ti::AgentSpec> > >": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<std::vector<art::Plugin, std::allocator<art::Plugin> > >": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<std::vector<std::unique_ptr<const art::DexFile, std::default_delete<const art::DexFile> >, std::allocator<std::unique_ptr<const art::DexFile, std::default_delete<const art::DexFile> > > > *>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::InstructionSet>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<art::CompilerCallbacks *>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<bool (*)()>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<int (*)(__sFILE *, const char *, char *)>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<void (*)(int)>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "VariantMapKey<void (*)()>": {
            "size": "0x10",
            "members": {
                "default_value_": 8
            }
        },
        "shared_ptr<art::Unit>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "shared_ptr<art::LogVerbosity>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0,
                "__cntrl_": 4
            }
        },
        "tuple<std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> > &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::JdwpProvider> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::JdwpProvider &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::Memory<1024> > &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::Memory<1024> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<double> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<double &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<unsigned int> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<unsigned int &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::MillisecondsToNanoseconds> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::MillisecondsToNanoseconds &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<bool> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<bool &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<int> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<int &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::JniIdType> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::JniIdType &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::gc::space::LargeObjectSpaceType> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::gc::space::LargeObjectSpaceType &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::Memory<1> > &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::Memory<1> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::TraceClockSource> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::TraceClockSource &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::verifier::VerifyMode> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::verifier::VerifyMode &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::hiddenapi::EnforcementPolicy> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::hiddenapi::EnforcementPolicy &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::ExperimentalFlags> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::ExperimentalFlags &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<art::InstructionSet> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<art::InstructionSet &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<int (*)(__sFILE *, const char *, char *)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<int (*&)(__sFILE *, const char *, char *)>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<void (*)(int)> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<void (*&)(int)>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<std::allocator<void (*)()> &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "tuple<void (*&)()>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::JdwpProvider, std::allocator<art::JdwpProvider> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::JdwpProvider, std::allocator<art::JdwpProvider> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::Memory<1024>, std::allocator<art::Memory<1024> > >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::Memory<1024>, std::allocator<art::Memory<1024> > > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<double, std::allocator<double> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<double, std::allocator<double> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<unsigned int, std::allocator<unsigned int> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<unsigned int, std::allocator<unsigned int> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::MillisecondsToNanoseconds, std::allocator<art::MillisecondsToNanoseconds> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::MillisecondsToNanoseconds, std::allocator<art::MillisecondsToNanoseconds> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<bool, std::allocator<bool> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<bool, std::allocator<bool> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<int, std::allocator<int> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<int, std::allocator<int> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::JniIdType, std::allocator<art::JniIdType> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::JniIdType, std::allocator<art::JniIdType> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::gc::space::LargeObjectSpaceType, std::allocator<art::gc::space::LargeObjectSpaceType> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::gc::space::LargeObjectSpaceType, std::allocator<art::gc::space::LargeObjectSpaceType> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::Memory<1>, std::allocator<art::Memory<1> > >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::Memory<1>, std::allocator<art::Memory<1> > > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::TraceClockSource, std::allocator<art::TraceClockSource> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::TraceClockSource, std::allocator<art::TraceClockSource> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::verifier::VerifyMode, std::allocator<art::verifier::VerifyMode> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::verifier::VerifyMode, std::allocator<art::verifier::VerifyMode> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::hiddenapi::EnforcementPolicy, std::allocator<art::hiddenapi::EnforcementPolicy> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::hiddenapi::EnforcementPolicy, std::allocator<art::hiddenapi::EnforcementPolicy> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::ExperimentalFlags, std::allocator<art::ExperimentalFlags> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::ExperimentalFlags, std::allocator<art::ExperimentalFlags> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<art::InstructionSet, std::allocator<art::InstructionSet> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<art::InstructionSet, std::allocator<art::InstructionSet> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<int (*)(__sFILE *, const char *, char *), std::allocator<int (*)(__sFILE *, const char *, char *)> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<int (*)(__sFILE *, const char *, char *), std::allocator<int (*)(__sFILE *, const char *, char *)> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<void (*)(int), std::allocator<void (*)(int)> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<void (*)(int), std::allocator<void (*)(int)> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__shared_ptr_emplace<void (*)(), std::allocator<void (*)()> >, std::__allocator_destructor<std::allocator<std::__shared_ptr_emplace<void (*)(), std::allocator<void (*)()> > > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "StackVisitor": {
            "size": "0x12c",
            "members": {
                "_vptr$StackVisitor": 0,
                "thread_": 4,
                "walk_kind_": 8,
                "cur_shadow_frame_": 12,
                "cur_quick_frame_": 16,
                "cur_quick_frame_pc_": 20,
                "cur_oat_quick_method_header_": 24,
                "num_frames_": 28,
                "cur_depth_": 32,
                "current_inline_frames_": 36,
                "cur_inline_info_": 52,
                "cur_stack_map_": 280,
                "context_": 292,
                "check_suspended_": 296
            }
        },
        "pair<const art::OatQuickMethodHeader *, art::CodeInfo>": {
            "size": "0xe4",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<unsigned int, art::StackMap>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "NumFramesVisitor": {
            "size": "0x130",
            "members": {
                "frames": 300
            }
        },
        "HasMoreFramesVisitor": {
            "size": "0x13c",
            "members": {
                "frame_height_": 300,
                "found_frame_": 304,
                "has_more_frames_": 305,
                "next_method_": 308,
                "next_dex_pc_": 312
            }
        },
        "Deduper": {
            "size": "0x18",
            "members": {
                "writer_": 0,
                "dedupe_map_": 12
            }
        },
        "Stats": {
            "size": "0x20",
            "members": {
                "value_": 0,
                "count_": 8,
                "children_": 12
            }
        },
        "BitMemoryWriter<std::vector<unsigned char, std::allocator<unsigned char> > >": {
            "size": "0xc",
            "members": {
                "out_": 0,
                "bit_start_": 4,
                "bit_offset_": 8
            }
        },
        "unordered_map<const char *, art::Stats, std::hash<const char *>, std::equal_to<const char *>, std::allocator<std::pair<const char *const, art::Stats> > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<const char *const, art::Stats>": {
            "size": "0x24",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, art::Stats>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, art::Stats>, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<const char *, art::Stats>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<const char *, art::Stats>, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<const char *, art::Stats>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "tuple<const char *const &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "pair<const art::BitMemoryRegion, unsigned int>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::BitMemoryRegion, unsigned int>, std::__tree_node<std::__value_type<art::BitMemoryRegion, unsigned int>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::BitMemoryRegion, unsigned int>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::BitMemoryRegion, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "array<unsigned int, 1>": {
            "size": "0x4",
            "members": {
                "__elems_": 0
            }
        },
        "array<unsigned int, 9>": {
            "size": "0x24",
            "members": {
                "__elems_": 0
            }
        },
        "array<unsigned int, 3>": {
            "size": "0xc",
            "members": {
                "__elems_": 0
            }
        },
        "array<unsigned int, 2>": {
            "size": "0x8",
            "members": {
                "__elems_": 0
            }
        },
        "map<art::BitMemoryRegion, unsigned int, art::BitMemoryRegion::Less, std::allocator<std::pair<const art::BitMemoryRegion, unsigned int> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::BitMemoryRegion, unsigned int>, std::__tree_node<std::__value_type<art::BitMemoryRegion, unsigned int>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "Context": {
            "size": "0x4",
            "members": {
                "_vptr$Context": 0
            }
        },
        "StackedShadowFrameRecord": {
            "size": "0xc",
            "members": {
                "shadow_frame_": 0,
                "type_": 4,
                "link_": 8
            }
        },
        "DeoptimizationContextRecord": {
            "size": "0x18",
            "members": {
                "ret_val_": 0,
                "is_reference_": 8,
                "from_code_": 9,
                "pending_exception_": 12,
                "deopt_method_type_": 16,
                "link_": 20
            }
        },
        "FrameIdToShadowFrame": {
            "size": "0xc",
            "members": {
                "frame_id_": 0,
                "shadow_frame_": 4,
                "next_": 8,
                "updated_vreg_flags_": 12
            }
        },
        "StackDumpVisitor": {
            "size": "0x144",
            "members": {
                "os": 308,
                "last_method": 312,
                "last_line_number": 316,
                "repetition_count": 320
            }
        },
        "BarrierClosure": {
            "size": "0x1c",
            "members": {
                "wrapped_": 4,
                "barrier_": 8
            }
        },
        "MonitorExitVisitor": {
            "size": "0x8",
            "members": {
                "self_": 4
            }
        },
        "JniTransitionReferenceVisitor<true>": {
            "size": "0x134",
            "members": {
                "obj_": 300,
                "found_": 304
            }
        },
        "JniTransitionReferenceVisitor<false>": {
            "size": "0x134",
            "members": {
                "obj_": 300,
                "found_": 304
            }
        },
        "FetchStackTraceVisitor": {
            "size": "0x140",
            "members": {
                "depth_": 300,
                "skip_depth_": 304,
                "skipping_": 308,
                "saved_frames_": 312,
                "max_saved_frames_": 316
            }
        },
        "BuildInternalStackTraceVisitor": {
            "size": "0x140",
            "members": {
                "self_": 300,
                "skip_depth_": 304,
                "count_": 308,
                "trace_": 312,
                "pointer_size_": 316
            }
        },
        "HandleWrapperObjPtr<art::mirror::Throwable>": {
            "size": "0x8",
            "members": {
                "obj_": 4
            }
        },
        "RootCallbackVisitor": {
            "size": "0x8",
            "members": {
                "visitor_": 0,
                "tid_": 4
            }
        },
        "ReferenceMapVisitor<art::RootCallbackVisitor, false>": {
            "size": "0x130",
            "members": {
                "visitor_": 300
            }
        },
        "ReferenceMapVisitor<art::RootCallbackVisitor, true>": {
            "size": "0x130",
            "members": {
                "visitor_": 300
            }
        },
        "unique_ptr<std::__list_node<art::Closure *, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::Closure *, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<art::TLSData, std::default_delete<art::TLSData> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 12
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<art::TLSData, std::default_delete<art::TLSData> > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<art::ArtMethod *, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::pair<art::ArtMethod *, unsigned int> [], std::default_delete<std::pair<art::ArtMethod *, unsigned int> []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "EagerEvaluator<unsigned int, bool>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<art::verifier::MethodVerifier *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<art::verifier::MethodVerifier *, art::verifier::MethodVerifier *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "ScopedThreadListLockUnlock": {
            "size": "0x4",
            "members": {
                "self_thread": 0
            }
        },
        "CollectFramesAndLocksStackVisitor": {
            "size": "0x16c",
            "members": {
                "stack_trace_elements_": 308,
                "wait_jobject_": 320,
                "block_jobject_": 328,
                "lock_objects_": 336,
                "soaa_": 348,
                "frame_lock_objects_": 352
            }
        },
        "StackMapVRegInfo": {
            "size": "0x9c",
            "members": {
                "number_of_dex_registers": 0,
                "code_info": 4,
                "dex_register_map": 8,
                "visitor": 152
            }
        },
        "UndefinedVRegInfo": {
            "size": "0x4",
            "members": {
                "visitor": 0
            }
        },
        "DumpCheckpoint": {
            "size": "0x24",
            "members": {
                "os_": 4,
                "barrier_": 8,
                "backtrace_map_": 28,
                "dump_native_stack_": 32
            }
        },
        "ThreadPool": {
            "size": "0xb0",
            "members": {
                "_vptr$ThreadPool": 0,
                "name_": 4,
                "task_queue_lock_": 16,
                "task_queue_condition_": 48,
                "completion_condition_": 64,
                "started_": 80,
                "shutting_down_": 81,
                "waiting_count_": 84,
                "tasks_": 88,
                "threads_": 112,
                "start_time_": 124,
                "total_wait_time_": 132,
                "creation_barier_": 140,
                "max_active_workers_": 160,
                "create_peers_": 164,
                "worker_stack_size_": 168
            }
        },
        "ThreadPoolWorker": {
            "size": "0x44",
            "members": {
                "_vptr$ThreadPoolWorker": 0,
                "thread_pool_": 4,
                "name_": 8,
                "stack_": 20,
                "pthread_": 60,
                "thread_": 64
            }
        },
        "SafeMap<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int>, std::allocator<std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0xc",
            "members": {
                "map_": 0
            }
        },
        "unique_ptr<std::vector<art::ArtMethod *, std::allocator<art::ArtMethod *> >, std::default_delete<std::vector<art::ArtMethod *, std::allocator<art::ArtMethod *> > > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "reverse_iterator<std::__wrap_iter<art::ArtMethod **> >": {
            "size": "0x8",
            "members": {
                "__t": 0,
                "current": 4
            }
        },
        "pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int>, std::allocator<std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<std::__tree_iterator<std::__value_type<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__tree_node<std::__value_type<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__tree_node<std::__value_type<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<const art::DexFile *, std::bitset<65536> *, std::less<const art::DexFile *>, std::allocator<std::pair<const art::DexFile *const, std::bitset<65536> *> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const art::DexFile *const, std::bitset<65536> *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<const art::DexFile *, std::bitset<65536> *>, std::__tree_node<std::__value_type<const art::DexFile *, std::bitset<65536> *>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<const art::DexFile *, std::bitset<65536> *>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<const art::DexFile *, std::bitset<65536> *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<const art::DexFile *, std::bitset<65536> *>, std::__tree_node<std::__value_type<const art::DexFile *, std::bitset<65536> *>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::bitset<65536>, std::default_delete<std::bitset<65536> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unordered_map<art::ArtMethod *, unsigned int, std::hash<art::ArtMethod *>, std::equal_to<art::ArtMethod *>, std::allocator<std::pair<art::ArtMethod *const, unsigned int> > >": {
            "size": "0x14",
            "members": {
                "__table_": 0
            }
        },
        "pair<art::ArtMethod *const, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<art::ArtMethod *, unsigned int>, void *> *> *> > >": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_iterator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, unsigned int>, void *> *>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__hash_node<std::__hash_value_type<art::ArtMethod *, unsigned int>, void *>, std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__hash_map_iterator<std::__hash_iterator<std::__hash_node<std::__hash_value_type<art::ArtMethod *, unsigned int>, void *> *> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<unix_file::FdFile, (lambda at art/runtime/trace.cc:365:18)>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const art::DexFile *, std::bitset<65536> *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "Storage<long>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<long, long>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "ObjectLog": {
            "size": "0xc",
            "members": {
                "field_values_": 0
            }
        },
        "FieldValue": {
            "size": "0x10",
            "members": {
                "value": 0,
                "kind": 8,
                "is_volatile": 12
            }
        },
        "ArrayLog": {
            "size": "0xc",
            "members": {
                "array_values_": 0
            }
        },
        "InternStringLog": {
            "size": "0xc",
            "members": {
                "str_": 0,
                "string_kind_": 4,
                "string_op_": 8
            }
        },
        "ResolveStringLog": {
            "size": "0x8",
            "members": {
                "dex_cache_": 0,
                "string_idx_": 4
            }
        },
        "GcRoot<art::mirror::DexCache>": {
            "size": "0x4",
            "members": {
                "root_": 0
            }
        },
        "map<unsigned int, art::Transaction::ObjectLog::FieldValue, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, art::Transaction::ObjectLog::FieldValue> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, art::Transaction::ObjectLog::FieldValue>": {
            "size": "0x14",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, std::__tree_node<std::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, std::__tree_node<std::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::mirror::Object *const, art::Transaction::ObjectLog>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::mirror::Object *, art::Transaction::ObjectLog>, std::__tree_node<std::__value_type<art::mirror::Object *, art::Transaction::ObjectLog>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::mirror::Object *, art::Transaction::ObjectLog>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::mirror::Object *, art::Transaction::ObjectLog>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::mirror::Object *, art::Transaction::ObjectLog>, std::__tree_node<std::__value_type<art::mirror::Object *, art::Transaction::ObjectLog>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<unsigned int, unsigned long long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long long> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, unsigned long long>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<unsigned int, unsigned long long>, std::__tree_node<std::__value_type<unsigned int, unsigned long long>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, unsigned long long>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long long>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<unsigned int, unsigned long long>, std::__tree_node<std::__value_type<unsigned int, unsigned long long>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::mirror::Array *const, art::Transaction::ArrayLog>": {
            "size": "0x10",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<art::mirror::Array *, art::Transaction::ArrayLog>, std::__tree_node<std::__value_type<art::mirror::Array *, art::Transaction::ArrayLog>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<art::mirror::Array *, art::Transaction::ArrayLog>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<art::mirror::Array *, art::Transaction::ArrayLog>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<art::mirror::Array *, art::Transaction::ArrayLog>, std::__tree_node<std::__value_type<art::mirror::Array *, art::Transaction::ArrayLog>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__list_node<art::Transaction::InternStringLog, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::Transaction::InternStringLog, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__list_node<art::Transaction::ResolveStringLog, void *>, std::__allocator_destructor<std::allocator<std::__list_node<art::Transaction::ResolveStringLog, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<art::mirror::Object *, art::mirror::Object *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<art::mirror::Array *, art::mirror::Array *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "tuple<art::mirror::Object *const &>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "pair<unsigned int, unsigned long long>": {
            "size": "0xc",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__list_node<std::pair<art::mirror::Object *, art::mirror::Object *>, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::pair<art::mirror::Object *, art::mirror::Object *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<std::__list_node<std::pair<art::mirror::Array *, art::mirror::Array *>, void *>, std::__allocator_destructor<std::allocator<std::__list_node<std::pair<art::mirror::Array *, art::mirror::Array *>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "FailureData": {
            "size": "0x8",
            "members": {
                "kind": 0,
                "types": 4
            }
        },
        "VerifierCallback": {
            "size": "0x4",
            "members": {
                "_vptr$VerifierCallback": 0
            }
        },
        "AutoTimer<art::metrics::MetricsCounter<art::metrics::DatumId::kClassVerificationTotalTime, unsigned long long> >": {
            "size": "0x10",
            "members": {
                "running_": 0,
                "start_time_microseconds_": 4,
                "metric_": 12
            }
        },
        "pair<art::ArtMethod *, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "DelayedVerifyCallback": {
            "size": "0x1c",
            "members": {
                "dont_compiles_": 4,
                "count_locks_": 16
            }
        },
        "RegTypeCache": {
            "size": "0x2c",
            "members": {
                "entries_": 0,
                "klass_entries_": 16,
                "allocator_": 32,
                "class_linker_": 36,
                "can_load_classes_": 40
            }
        },
        "PcToRegisterLineTable": {
            "size": "0x10",
            "members": {
                "register_lines_": 0
            }
        },
        "RegisterLine": {
            "size": "0x2c",
            "members": {
                "result_": 0,
                "num_regs_": 4,
                "monitors_": 8,
                "reg_to_lock_depths_": 24,
                "this_initialized_": 40,
                "line_": 42
            }
        },
        "ScopedNewLine": {
            "size": "0x8",
            "members": {
                "stream": 0,
                "active": 4
            }
        },
        "MethodVerifier<true>": {
            "size": "0x178",
            "members": {
                "method_being_verified_": 332,
                "method_access_flags_": 336,
                "return_type_": 340,
                "dex_cache_": 344,
                "class_loader_": 348,
                "declaring_class_": 352,
                "interesting_dex_pc_": 356,
                "monitor_enter_dex_pcs_": 360,
                "need_precise_constants_": 364,
                "verify_to_dump_": 365,
                "allow_thread_suspension_": 366,
                "is_constructor_": 367,
                "fill_register_lines_": 368,
                "api_level_": 372
            }
        },
        "MethodVerifier<false>": {
            "size": "0x178",
            "members": {
                "method_being_verified_": 332,
                "method_access_flags_": 336,
                "return_type_": 340,
                "dex_cache_": 344,
                "class_loader_": 348,
                "declaring_class_": 352,
                "interesting_dex_pc_": 356,
                "monitor_enter_dex_pcs_": 360,
                "need_precise_constants_": 364,
                "verify_to_dump_": 365,
                "allow_thread_suspension_": 366,
                "is_constructor_": 367,
                "fill_register_lines_": 368,
                "api_level_": 372
            }
        },
        "MethodParamListDescriptorIterator": {
            "size": "0x10",
            "members": {
                "res_method_": 0,
                "pos_": 4,
                "params_": 8,
                "params_size_": 12
            }
        },
        "ScopedArenaAllocatorAdapter<const art::verifier::RegType *>": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::pair<art::GcRoot<art::mirror::Class>, const art::verifier::RegType *> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<unsigned int>": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "SafeMap<unsigned int, unsigned int, std::less<unsigned int>, art::ScopedArenaAllocatorAdapter<std::pair<const unsigned int, unsigned int> > >": {
            "size": "0x10",
            "members": {
                "map_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::pair<const unsigned int, unsigned int> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::__value_type<unsigned int, unsigned int> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "ScopedArenaAllocatorAdapter<std::unique_ptr<art::verifier::RegisterLine, art::verifier::RegisterLineArenaDelete> >": {
            "size": "0x4",
            "members": {
                "arena_stack_": 0
            }
        },
        "SafeDexInstructionIterator": {
            "size": "0x10",
            "members": {
                "num_code_units_": 8,
                "error_state_": 12
            }
        },
        "unique_ptr<art::verifier::RegisterLine, art::verifier::RegisterLineArenaDelete>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "map<unsigned int, unsigned int, std::less<unsigned int>, art::ScopedArenaAllocatorAdapter<std::pair<const unsigned int, unsigned int> > >": {
            "size": "0x10",
            "members": {
                "__tree_": 0
            }
        },
        "pair<unsigned int &, unsigned int &>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<unsigned int, unsigned int>, std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>, std::__tree_node_destructor<art::ScopedArenaAllocatorAdapter<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<unsigned int, unsigned int>, std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::verifier::InstructionFlags [], art::ArenaDelete<art::verifier::InstructionFlags []> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_iterator<unsigned int, std::__tree_node<unsigned int, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<unsigned int, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<unsigned int, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<unsigned int, std::__tree_node<unsigned int, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "map<unsigned int, art::verifier::MethodVerifier::DexLockInfo, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, art::verifier::MethodVerifier::DexLockInfo> > >": {
            "size": "0xc",
            "members": {
                "__tree_": 0
            }
        },
        "pair<const unsigned int, art::verifier::MethodVerifier::DexLockInfo>": {
            "size": "0x14",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<unsigned int, art::verifier::MethodVerifier::DexLockInfo>, std::__tree_node<std::__value_type<unsigned int, art::verifier::MethodVerifier::DexLockInfo>, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<unsigned int, art::verifier::MethodVerifier::DexLockInfo>, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<unsigned int, art::verifier::MethodVerifier::DexLockInfo>, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<unsigned int, art::verifier::MethodVerifier::DexLockInfo>, std::__tree_node<std::__value_type<unsigned int, art::verifier::MethodVerifier::DexLockInfo>, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::verifier::impl::(anonymous namespace)::MethodVerifier<false>, std::default_delete<art::verifier::impl::(anonymous namespace)::MethodVerifier<false> > >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const art::EncodedArrayValueIterator::ValueType, unsigned int>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<bool, const art::verifier::RegType *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "EagerEvaluator<unsigned short, int>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "RegType": {
            "size": "0x14",
            "members": {
                "_vptr$RegType": 0,
                "descriptor_": 4,
                "klass_": 12,
                "cache_id_": 16
            }
        },
        "UninitializedType": {
            "size": "0x18",
            "members": {
                "allocation_pc_": 20
            }
        },
        "UnresolvedMergedType": {
            "size": "0x30",
            "members": {
                "reg_type_cache_": 20,
                "resolved_part_": 24,
                "unresolved_types_": 28
            }
        },
        "UnresolvedSuperClass": {
            "size": "0x18",
            "members": {
                "unresolved_child_id_": 18,
                "reg_type_cache_": 20
            }
        },
        "IndexContainer": {
            "size": "0x4",
            "members": {
                "bit_vector_": 0
            }
        },
        "IndexIterator": {
            "size": "0xc",
            "members": {
                "bit_storage_": 0,
                "storage_size_": 4,
                "bit_index_": 8
            }
        },
        "Storage<std::basic_string_view<char, std::char_traits<char> > >": {
            "size": "0x8",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<std::basic_string_view<char, std::char_traits<char> >, const char *>": {
            "size": "0xc",
            "members": {
                "lhs": 0,
                "rhs": 8
            }
        },
        "Storage<const char *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "ConstantType": {
            "size": "0x18",
            "members": {
                "constant_": 20
            }
        },
        "TypeHelper<art::verifier::UndefinedType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::ConflictType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::NullType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::BooleanType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::ByteType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::ShortType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::CharType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::IntegerType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::LongLoType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::LongHiType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::FloatType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::DoubleLoType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "TypeHelper<art::verifier::DoubleHiType>": {
            "size": "0x4",
            "members": {
                "descriptor": 0
            }
        },
        "pair<art::GcRoot<art::mirror::Class>, const art::verifier::RegType *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<art::verifier::VerifierDeps::TypeAssignability, std::__tree_node<art::verifier::VerifierDeps::TypeAssignability, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<art::verifier::VerifierDeps::TypeAssignability, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<art::verifier::VerifierDeps::TypeAssignability, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__tree_const_iterator<art::verifier::VerifierDeps::TypeAssignability, std::__tree_node<art::verifier::VerifierDeps::TypeAssignability, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "pair<std::__tree_iterator<std::__value_type<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >, std::__tree_node<std::__value_type<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >, void *> *, int>, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<std::__tree_node<std::__value_type<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >, void *>, std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >, void *> > > >": {
            "size": "0xc",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<std::__map_iterator<std::__tree_iterator<std::__value_type<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >, std::__tree_node<std::__value_type<const art::DexFile *, std::unique_ptr<art::verifier::VerifierDeps::DexFileDeps, std::default_delete<art::verifier::VerifierDeps::DexFileDeps> > >, void *> *, int> >, bool>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "unique_ptr<art::verifier::VerifierDeps, std::default_delete<art::verifier::VerifierDeps> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "pair<const art::DexFile *, const art::verifier::VerifierDeps::DexFileDeps *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "Storage<const art::dex::StringId *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<const art::dex::StringId *, const art::dex::StringId *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "ScopedHiddenApiEnforcementPolicySetting": {
            "size": "0x4",
            "members": {
                "initial_policy_": 0
            }
        },
        "InstructionSetFeatures": {
            "size": "0x4",
            "members": {
                "_vptr$InstructionSetFeatures": 0
            }
        },
        "unique_ptr<const art::X86_64InstructionSetFeatures, std::default_delete<const art::X86_64InstructionSetFeatures> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<const art::X86InstructionSetFeatures, std::default_delete<const art::X86InstructionSetFeatures> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "ArmInstructionSetFeatures": {
            "size": "0x8",
            "members": {
                "has_div_": 4,
                "has_atomic_ldrd_strd_": 5,
                "has_armv8a_": 6
            }
        },
        "unique_ptr<const art::ArmInstructionSetFeatures, std::default_delete<const art::ArmInstructionSetFeatures> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "path": {
            "size": "0xc",
            "members": {
                "__pn_": 0
            }
        },
        "iterator": {
            "size": "0x1c",
            "members": {
                "__stashed_elem_": 0,
                "__path_ptr_": 12,
                "__entry_": 16,
                "__state_": 24
            }
        },
        "basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >": {
            "size": "0xc",
            "members": {
                "__r_": 0
            }
        },
        "basic_string_view<char16_t, std::char_traits<char16_t> >": {
            "size": "0x8",
            "members": {
                "__data": 0,
                "__size": 4
            }
        },
        "basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >": {
            "size": "0xc",
            "members": {
                "__r_": 0
            }
        },
        "basic_string_view<char32_t, std::char_traits<char32_t> >": {
            "size": "0x8",
            "members": {
                "__data": 0,
                "__size": 4
            }
        },
        "basic_filebuf<char, std::char_traits<char> >": {
            "size": "0x5c",
            "members": {
                "__extbuf_": 32,
                "__extbufnext_": 36,
                "__extbufend_": 40,
                "__extbuf_min_": 44,
                "__ebs_": 52,
                "__intbuf_": 56,
                "__ibs_": 60,
                "__file_": 64,
                "__cv_": 68,
                "__st_": 72,
                "__st_last_": 76,
                "__om_": 80,
                "__cm_": 84,
                "__owns_eb_": 88,
                "__owns_ib_": 89,
                "__always_noconv_": 90
            }
        },
        "basic_ifstream<char, std::char_traits<char> >": {
            "size": "0xb4",
            "members": {
                "__sb_": 8
            }
        },
        "unique_ptr<__sFILE, int (*)(__sFILE *)>": {
            "size": "0x8",
            "members": {
                "__ptr_": 0
            }
        },
        "Arm64InstructionSetFeatures": {
            "size": "0xc",
            "members": {
                "fix_cortex_a53_835769_": 4,
                "fix_cortex_a53_843419_": 5,
                "has_crc_": 6,
                "has_lse_": 7,
                "has_fp16_": 8,
                "has_dotprod_": 9,
                "has_sve_": 10
            }
        },
        "unique_ptr<const art::Arm64InstructionSetFeatures, std::default_delete<const art::Arm64InstructionSetFeatures> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "X86InstructionSetFeatures": {
            "size": "0xc",
            "members": {
                "has_SSSE3_": 4,
                "has_SSE4_1_": 5,
                "has_SSE4_2_": 6,
                "has_AVX_": 7,
                "has_AVX2_": 8,
                "has_POPCNT_": 9
            }
        },
        "CallerAndOuterMethod": {
            "size": "0x8",
            "members": {
                "caller": 0,
                "outer_method": 4
            }
        },
        "ScopedQuickEntrypointChecks": {
            "size": "0x8",
            "members": {
                "self_": 0,
                "exit_check_": 4
            }
        },
        "QuickArgumentVisitor": {
            "size": "0x34",
            "members": {
                "_vptr$QuickArgumentVisitor": 0,
                "is_static_": 4,
                "shorty_": 8,
                "shorty_len_": 12,
                "gpr_args_": 16,
                "fpr_args_": 20,
                "stack_args_": 24,
                "gpr_index_": 28,
                "fpr_index_": 32,
                "fpr_double_index_": 36,
                "stack_index_": 40,
                "cur_type_": 44,
                "is_split_long_or_double_": 48
            }
        },
        "BuildGenericJniFrameVisitor": {
            "size": "0x64",
            "members": {
                "jni_call_": 52,
                "sm_": 76,
                "current_vreg_": 96
            }
        },
        "FillJniCall": {
            "size": "0x18",
            "members": {
                "cur_entry_": 16,
                "critical_native_": 20
            }
        },
        "FillNativeCall": {
            "size": "0x10",
            "members": {
                "_vptr$FillNativeCall": 0,
                "cur_gpr_reg_": 4,
                "cur_fpr_reg_": 8,
                "cur_stack_arg_": 12
            }
        },
        "BuildNativeCallFrameStateMachine<art::BuildGenericJniFrameVisitor::FillJniCall>": {
            "size": "0x14",
            "members": {
                "_vptr$BuildNativeCallFrameStateMachine": 0,
                "gpr_index_": 4,
                "fpr_index_": 8,
                "stack_entries_": 12,
                "delegate_": 16
            }
        },
        "BuildNativeCallFrameStateMachine<art::ComputeNativeCallFrameSize>": {
            "size": "0x14",
            "members": {
                "_vptr$BuildNativeCallFrameStateMachine": 0,
                "gpr_index_": 4,
                "fpr_index_": 8,
                "stack_entries_": 12,
                "delegate_": 16
            }
        },
        "ComputeNativeCallFrameSize": {
            "size": "0x8",
            "members": {
                "_vptr$ComputeNativeCallFrameSize": 0,
                "num_stack_entries_": 4
            }
        },
        "BuildQuickShadowFrameVisitor": {
            "size": "0x3c",
            "members": {
                "sf_": 52,
                "cur_reg_": 56
            }
        },
        "BuildQuickArgumentVisitor": {
            "size": "0x3c",
            "members": {
                "soa_": 52,
                "args_": 56
            }
        },
        "GetQuickReferenceArgumentAtVisitor": {
            "size": "0x40",
            "members": {
                "cur_pos_": 52,
                "arg_pos_": 56,
                "ref_arg_": 60
            }
        },
        "GetQuickReferenceArgumentsVisitor": {
            "size": "0x40",
            "members": {
                "ref_args_": 52
            }
        },
        "RememberForGcArgumentVisitor": {
            "size": "0x44",
            "members": {
                "soa_": 52,
                "references_": 56
            }
        },
        "ComputeGenericJniFrameSize": {
            "size": "0xc",
            "members": {
                "critical_native_": 8
            }
        },
        "pair<_jobject *, art::StackReference<art::mirror::Object> *>": {
            "size": "0x8",
            "members": {
                "first": 0,
                "second": 4
            }
        },
        "android_log_event_list": {
            "size": "0x8",
            "members": {
                "ctx": 0,
                "ret": 4
            }
        },
        "StatsdBackend": {
            "size": "0x20",
            "members": {
                "session_data_": 4,
                "current_timestamp_": 24
            }
        },
        "MetricsBackend": {
            "size": "0x4",
            "members": {
                "_vptr$MetricsBackend": 0
            }
        },
        "unique_ptr<art::metrics::(anonymous namespace)::StatsdBackend, std::default_delete<art::metrics::(anonymous namespace)::StatsdBackend> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "X86Context": {
            "size": "0x70",
            "members": {
                "gprs_": 4,
                "fprs_": 36,
                "esp_": 100,
                "eip_": 104,
                "arg0_": 108
            }
        },
        "BitIteratorBase<unsigned int, art::HighToLowBitIterator<unsigned int> >": {
            "size": "0x4",
            "members": {
                "bits_": 0
            }
        },
        "IterationRange<art::HighToLowBitIterator<unsigned int> >": {
            "size": "0x8",
            "members": {
                "first_": 0,
                "last_": 4
            }
        },
        "Storage<unsigned int *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "EagerEvaluator<unsigned int *, const unsigned int *>": {
            "size": "0x8",
            "members": {
                "lhs": 0,
                "rhs": 4
            }
        },
        "Storage<const unsigned int *>": {
            "size": "0x4",
            "members": {
                "v": 0
            }
        },
        "user_desc": {
            "size": "0x10",
            "members": {
                "entry_number": 0,
                "base_addr": 4,
                "limit": 8,
                "seg_32bit": 12,
                "contents": 12,
                "read_exec_only": 12,
                "limit_in_pages": 12,
                "seg_not_present": 12,
                "useable": 12
            }
        },
        "HexDump": {
            "size": "0x10",
            "members": {
                "address_": 0,
                "byte_count_": 4,
                "show_actual_addresses_": 8,
                "prefix_": 12
            }
        },
        "unique_ptr<_xmlDoc, (lambda at out/soong/.intermediates/system/apex/apexd/apex-info-list/gen/cpp/com_android_apex.cpp:16:32)>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "unique_ptr<unsigned char, (lambda at out/soong/.intermediates/system/apex/apexd/apex-info-list/gen/cpp/com_android_apex.cpp:16:32)>": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "xmlNsMap": {
            "size": "0xc",
            "members": {
                "first": 0,
                "last": 4,
                "pool": 8
            }
        },
        "xmlNsMapItem": {
            "size": "0x18",
            "members": {
                "next": 0,
                "prev": 4,
                "oldNs": 8,
                "newNs": 12,
                "shadowDepth": 16,
                "depth": 20
            }
        },
        "memnod": {
            "size": "0x18",
            "members": {
                "mh_tag": 0,
                "mh_type": 4,
                "mh_number": 8,
                "mh_size": 12,
                "mh_file": 16,
                "mh_line": 20
            }
        },
        "xmlRemoveMemo_t": {
            "size": "0x8",
            "members": {
                "l": 0,
                "ap": 4
            }
        },
        "xmlValidateMemo_t": {
            "size": "0x8",
            "members": {
                "ctxt": 0,
                "name": 4
            }
        },
        "OdrMetrics": {
            "size": "0x40",
            "members": {
                "cache_directory_": 0,
                "metrics_file_": 12,
                "art_apex_version_": 24,
                "art_apex_last_update_millis_": 32,
                "trigger_": 40,
                "stage_": 42,
                "status_": 43,
                "primary_bcp_compilation_seconds_": 44,
                "secondary_bcp_compilation_seconds_": 48,
                "system_server_compilation_seconds_": 52,
                "cache_space_free_start_mib_": 56,
                "cache_space_free_end_mib_": 60
            }
        },
        "OdrMetricsRecord": {
            "size": "0x28",
            "members": {
                "art_apex_version": 0,
                "trigger": 8,
                "stage_reached": 12,
                "status": 16,
                "primary_bcp_compilation_seconds": 20,
                "secondary_bcp_compilation_seconds": 24,
                "system_server_compilation_seconds": 28,
                "cache_space_free_start_mib": 32,
                "cache_space_free_end_mib": 36
            }
        },
        "XzCallbacks": {
            "size": "0x1c",
            "members": {
                "src_pos_": 12,
                "src_": 16,
                "dst_": 24
            }
        },
        "tuple<(lambda at art/libelffile/elf/xz_utils.cc:37:35) &&>": {
            "size": "0x4",
            "members": {
                "__base_": 0
            }
        },
        "unique_ptr<CXzUnpacker, std::default_delete<CXzUnpacker> >": {
            "size": "0x4",
            "members": {
                "__ptr_": 0
            }
        },
        "ISeqInStream": {
            "size": "0x4",
            "members": {
                "Read": 0
            }
        },
        "ISeqOutStream": {
            "size": "0x4",
            "members": {
                "Write": 0
            }
        },
        "ICompressProgress": {
            "size": "0x4",
            "members": {
                "Progress": 0
            }
        },
        "ISzAlloc": {
            "size": "0x8",
            "members": {
                "Alloc": 0,
                "Free": 4
            }
        }
    }
}